[DEBUG]2025-06-24 15:22:54,615: <re.Match object; span=(1084, 1777), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-24 15:22:54,615: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2025-06-24 15:22:54,616: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-24 15:22:54,660: None
[DEBUG]2025-06-24 15:22:54,660: None
[DEBUG]2025-06-24 15:22:54,663: None
[DEBUG]2025-06-24 15:22:54,663: None
[DEBUG]2025-06-24 15:22:54,663: None
[DEBUG]2025-06-24 15:22:54,664: None
[DEBUG]2025-06-24 15:22:54,664: None
[DEBUG]2025-06-24 15:22:54,664: None
[DEBUG]2025-06-24 15:22:54,664: None
[DEBUG]2025-06-24 15:22:54,666: None
[DEBUG]2025-06-24 15:22:54,666: None
[DEBUG]2025-06-24 15:22:54,666: None
[DEBUG]2025-06-24 15:22:54,666: None
[DEBUG]2025-06-24 15:22:54,666: None
[DEBUG]2025-06-24 15:22:54,668: None
[DEBUG]2025-06-24 15:22:54,668: None
[DEBUG]2025-06-24 15:22:54,668: None
[DEBUG]2025-06-24 15:22:54,668: None
[DEBUG]2025-06-24 15:22:54,668: None
[DEBUG]2025-06-24 15:22:54,668: None
[DEBUG]2025-06-24 15:22:54,669: None
[DEBUG]2025-06-24 15:22:54,669: None
[DEBUG]2025-06-24 15:22:54,669: None
[DEBUG]2025-06-24 15:22:54,669: None
[DEBUG]2025-06-24 15:22:54,669: None
[DEBUG]2025-06-24 15:22:54,669: None
[DEBUG]2025-06-24 15:22:54,669: None
[DEBUG]2025-06-24 15:22:54,671: None
[DEBUG]2025-06-24 15:22:54,671: None
[DEBUG]2025-06-24 15:22:54,671: None
[DEBUG]2025-06-24 15:22:54,671: None
[DEBUG]2025-06-24 15:22:54,671: None
[DEBUG]2025-06-24 15:22:54,671: None
[DEBUG]2025-06-24 15:22:54,671: None
[DEBUG]2025-06-24 15:22:54,671: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,618: <re.Match object; span=(1090, 1783), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-24 15:25:33,618: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2025-06-24 15:25:33,619: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-24 15:25:33,624: None
[DEBUG]2025-06-24 15:25:33,624: None
[DEBUG]2025-06-24 15:25:33,625: None
[DEBUG]2025-06-24 15:25:33,625: None
[DEBUG]2025-06-24 15:25:33,625: None
[DEBUG]2025-06-24 15:25:33,628: None
[DEBUG]2025-06-24 15:25:33,628: None
[DEBUG]2025-06-24 15:25:33,628: None
[DEBUG]2025-06-24 15:25:33,628: None
[DEBUG]2025-06-24 15:25:33,630: None
[DEBUG]2025-06-24 15:25:33,630: None
[DEBUG]2025-06-24 15:25:33,630: None
[DEBUG]2025-06-24 15:25:33,630: None
[DEBUG]2025-06-24 15:25:33,630: None
[DEBUG]2025-06-24 15:25:33,632: None
[DEBUG]2025-06-24 15:25:33,632: None
[DEBUG]2025-06-24 15:25:33,632: None
[DEBUG]2025-06-24 15:25:33,632: None
[DEBUG]2025-06-24 15:25:33,632: None
[DEBUG]2025-06-24 15:25:33,632: None
[DEBUG]2025-06-24 15:25:33,634: None
[DEBUG]2025-06-24 15:25:33,634: None
[DEBUG]2025-06-24 15:25:33,634: None
[DEBUG]2025-06-24 15:25:33,634: None
[DEBUG]2025-06-24 15:25:33,634: None
[DEBUG]2025-06-24 15:25:33,634: None
[DEBUG]2025-06-24 15:25:33,634: None
[DEBUG]2025-06-24 15:25:33,636: None
[DEBUG]2025-06-24 15:25:33,636: None
[DEBUG]2025-06-24 15:25:33,636: None
[DEBUG]2025-06-24 15:25:33,636: None
[DEBUG]2025-06-24 15:25:33,636: None
[DEBUG]2025-06-24 15:25:33,636: None
[DEBUG]2025-06-24 15:25:33,636: None
[DEBUG]2025-06-24 15:25:33,636: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,384: <re.Match object; span=(1090, 1783), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-24 15:31:46,384: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2025-06-24 15:31:46,384: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-24 15:31:46,387: None
[DEBUG]2025-06-24 15:31:46,387: None
[DEBUG]2025-06-24 15:31:46,388: None
[DEBUG]2025-06-24 15:31:46,388: None
[DEBUG]2025-06-24 15:31:46,388: None
[DEBUG]2025-06-24 15:31:46,389: None
[DEBUG]2025-06-24 15:31:46,389: None
[DEBUG]2025-06-24 15:31:46,389: None
[DEBUG]2025-06-24 15:31:46,389: None
[DEBUG]2025-06-24 15:31:46,390: None
[DEBUG]2025-06-24 15:31:46,390: None
[DEBUG]2025-06-24 15:31:46,390: None
[DEBUG]2025-06-24 15:31:46,390: None
[DEBUG]2025-06-24 15:31:46,390: None
[DEBUG]2025-06-24 15:31:46,391: None
[DEBUG]2025-06-24 15:31:46,391: None
[DEBUG]2025-06-24 15:31:46,391: None
[DEBUG]2025-06-24 15:31:46,391: None
[DEBUG]2025-06-24 15:31:46,391: None
[DEBUG]2025-06-24 15:31:46,391: None
[DEBUG]2025-06-24 15:31:46,392: None
[DEBUG]2025-06-24 15:31:46,392: None
[DEBUG]2025-06-24 15:31:46,392: None
[DEBUG]2025-06-24 15:31:46,392: None
[DEBUG]2025-06-24 15:31:46,392: None
[DEBUG]2025-06-24 15:31:46,392: None
[DEBUG]2025-06-24 15:31:46,392: None
[DEBUG]2025-06-24 15:31:46,393: None
[DEBUG]2025-06-24 15:31:46,393: None
[DEBUG]2025-06-24 15:31:46,393: None
[DEBUG]2025-06-24 15:31:46,393: None
[DEBUG]2025-06-24 15:31:46,393: None
[DEBUG]2025-06-24 15:31:46,393: None
[DEBUG]2025-06-24 15:31:46,393: None
[DEBUG]2025-06-24 15:31:46,393: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:58,567: <re.Match object; span=(1090, 1783), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-24 15:31:58,568: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2025-06-24 15:31:58,569: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-24 15:31:58,573: None
[DEBUG]2025-06-24 15:31:58,573: None
[DEBUG]2025-06-24 15:31:58,574: None
[DEBUG]2025-06-24 15:31:58,574: None
[DEBUG]2025-06-24 15:31:58,574: None
[DEBUG]2025-06-24 15:31:58,575: None
[DEBUG]2025-06-24 15:31:58,575: None
[DEBUG]2025-06-24 15:31:58,575: None
[DEBUG]2025-06-24 15:31:58,575: None
[DEBUG]2025-06-24 15:31:58,576: None
[DEBUG]2025-06-24 15:31:58,576: None
[DEBUG]2025-06-24 15:31:58,576: None
[DEBUG]2025-06-24 15:31:58,576: None
[DEBUG]2025-06-24 15:31:58,576: None
[DEBUG]2025-06-24 15:31:58,577: None
[DEBUG]2025-06-24 15:31:58,577: None
[DEBUG]2025-06-24 15:31:58,577: None
[DEBUG]2025-06-24 15:31:58,577: None
[DEBUG]2025-06-24 15:31:58,577: None
[DEBUG]2025-06-24 15:31:58,577: None
[DEBUG]2025-06-24 15:31:58,578: None
[DEBUG]2025-06-24 15:31:58,578: None
[DEBUG]2025-06-24 15:31:58,578: None
[DEBUG]2025-06-24 15:31:58,578: None
[DEBUG]2025-06-24 15:31:58,578: None
[DEBUG]2025-06-24 15:31:58,578: None
[DEBUG]2025-06-24 15:31:58,578: None
[DEBUG]2025-06-24 15:31:58,580: None
[DEBUG]2025-06-24 15:31:58,580: None
[DEBUG]2025-06-24 15:31:58,580: None
[DEBUG]2025-06-24 15:31:58,580: None
[DEBUG]2025-06-24 15:31:58,580: None
[DEBUG]2025-06-24 15:31:58,580: None
[DEBUG]2025-06-24 15:31:58,580: None
[DEBUG]2025-06-24 15:31:58,580: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-25 14:53:08,333: <re.Match object; span=(1090, 1783), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 14:53:08,334: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 14:53:08,334: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 14:53:08,336: None
[DEBUG]2025-06-25 14:53:08,336: None
[DEBUG]2025-06-25 14:53:08,337: None
[DEBUG]2025-06-25 14:53:08,337: None
[DEBUG]2025-06-25 14:53:08,337: None
[DEBUG]2025-06-25 14:53:08,337: None
[DEBUG]2025-06-25 14:53:08,337: None
[DEBUG]2025-06-25 14:53:08,337: None
[DEBUG]2025-06-25 14:53:08,337: None
[DEBUG]2025-06-25 14:53:08,338: None
[DEBUG]2025-06-25 14:53:08,338: None
[DEBUG]2025-06-25 14:53:08,338: None
[DEBUG]2025-06-25 14:53:08,338: None
[DEBUG]2025-06-25 14:53:08,338: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,340: None
[DEBUG]2025-06-25 14:53:08,340: None
[DEBUG]2025-06-25 14:53:08,340: None
[DEBUG]2025-06-25 14:53:08,340: None
[DEBUG]2025-06-25 14:53:08,340: None
[DEBUG]2025-06-25 14:53:08,340: None
[DEBUG]2025-06-25 14:53:08,340: None
[DEBUG]2025-06-25 14:53:08,340: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 15:11:37,272: <re.Match object; span=(1090, 1793), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:11:37,272: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'TEST', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:11:37,272: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"TEST",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:11:37,275: None
[DEBUG]2025-06-25 15:11:37,275: None
[DEBUG]2025-06-25 15:11:37,277: None
[DEBUG]2025-06-25 15:11:37,277: None
[DEBUG]2025-06-25 15:11:37,277: None
[DEBUG]2025-06-25 15:11:37,278: None
[DEBUG]2025-06-25 15:11:37,278: None
[DEBUG]2025-06-25 15:11:37,278: None
[DEBUG]2025-06-25 15:11:37,278: None
[DEBUG]2025-06-25 15:11:37,279: None
[DEBUG]2025-06-25 15:11:37,279: None
[DEBUG]2025-06-25 15:11:37,279: None
[DEBUG]2025-06-25 15:11:37,279: None
[DEBUG]2025-06-25 15:11:37,279: None
[DEBUG]2025-06-25 15:11:37,280: None
[DEBUG]2025-06-25 15:11:37,280: None
[DEBUG]2025-06-25 15:11:37,280: None
[DEBUG]2025-06-25 15:11:37,280: None
[DEBUG]2025-06-25 15:11:37,280: None
[DEBUG]2025-06-25 15:11:37,280: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:12:36,959: <re.Match object; span=(1088, 1791), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:12:36,959: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'TEST', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:12:36,959: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"TEST",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:12:36,962: None
[DEBUG]2025-06-25 15:12:36,962: None
[DEBUG]2025-06-25 15:12:36,963: None
[DEBUG]2025-06-25 15:12:36,963: None
[DEBUG]2025-06-25 15:12:36,963: None
[DEBUG]2025-06-25 15:12:36,965: None
[DEBUG]2025-06-25 15:12:36,965: None
[DEBUG]2025-06-25 15:12:36,965: None
[DEBUG]2025-06-25 15:12:36,965: None
[DEBUG]2025-06-25 15:12:36,966: None
[DEBUG]2025-06-25 15:12:36,966: None
[DEBUG]2025-06-25 15:12:36,966: None
[DEBUG]2025-06-25 15:12:36,966: None
[DEBUG]2025-06-25 15:12:36,966: None
[DEBUG]2025-06-25 15:12:36,968: None
[DEBUG]2025-06-25 15:12:36,968: None
[DEBUG]2025-06-25 15:12:36,968: None
[DEBUG]2025-06-25 15:12:36,968: None
[DEBUG]2025-06-25 15:12:36,968: None
[DEBUG]2025-06-25 15:12:36,968: None
[DEBUG]2025-06-25 15:12:36,969: None
[DEBUG]2025-06-25 15:12:36,969: None
[DEBUG]2025-06-25 15:12:36,969: None
[DEBUG]2025-06-25 15:12:36,969: None
[DEBUG]2025-06-25 15:12:36,969: None
[DEBUG]2025-06-25 15:12:36,969: None
[DEBUG]2025-06-25 15:12:36,969: None
[DEBUG]2025-06-25 15:12:36,971: None
[DEBUG]2025-06-25 15:12:36,971: None
[DEBUG]2025-06-25 15:12:36,971: None
[DEBUG]2025-06-25 15:12:36,971: None
[DEBUG]2025-06-25 15:12:36,971: None
[DEBUG]2025-06-25 15:12:36,971: None
[DEBUG]2025-06-25 15:12:36,971: None
[DEBUG]2025-06-25 15:12:36,971: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:13:41,932: <re.Match object; span=(1083, 1786), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:13:41,933: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'TEST', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:13:41,933: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"TEST",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:13:41,937: None
[DEBUG]2025-06-25 15:13:41,937: None
[DEBUG]2025-06-25 15:13:41,939: None
[DEBUG]2025-06-25 15:13:41,939: None
[DEBUG]2025-06-25 15:13:41,939: None
[DEBUG]2025-06-25 15:13:41,941: None
[DEBUG]2025-06-25 15:13:41,941: None
[DEBUG]2025-06-25 15:13:41,941: None
[DEBUG]2025-06-25 15:13:41,941: None
[DEBUG]2025-06-25 15:13:41,942: None
[DEBUG]2025-06-25 15:13:41,942: None
[DEBUG]2025-06-25 15:13:41,942: None
[DEBUG]2025-06-25 15:13:41,942: None
[DEBUG]2025-06-25 15:13:41,942: None
[DEBUG]2025-06-25 15:13:41,943: None
[DEBUG]2025-06-25 15:13:41,943: None
[DEBUG]2025-06-25 15:13:41,943: None
[DEBUG]2025-06-25 15:13:41,943: None
[DEBUG]2025-06-25 15:13:41,943: None
[DEBUG]2025-06-25 15:13:41,943: None
[DEBUG]2025-06-25 15:13:41,945: None
[DEBUG]2025-06-25 15:13:41,945: None
[DEBUG]2025-06-25 15:13:41,945: None
[DEBUG]2025-06-25 15:13:41,945: None
[DEBUG]2025-06-25 15:13:41,945: None
[DEBUG]2025-06-25 15:13:41,945: None
[DEBUG]2025-06-25 15:13:41,945: None
[DEBUG]2025-06-25 15:13:41,947: None
[DEBUG]2025-06-25 15:13:41,947: None
[DEBUG]2025-06-25 15:13:41,947: None
[DEBUG]2025-06-25 15:13:41,947: None
[DEBUG]2025-06-25 15:13:41,947: None
[DEBUG]2025-06-25 15:13:41,947: None
[DEBUG]2025-06-25 15:13:41,947: None
[DEBUG]2025-06-25 15:13:41,947: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:16:37,028: <re.Match object; span=(1081, 1836), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:16:37,028: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'FR', 'FL', 'BR', 'BL', 'NB', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:16:37,029: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NB",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:16:37,031: None
[DEBUG]2025-06-25 15:16:37,031: None
[DEBUG]2025-06-25 15:16:37,032: None
[DEBUG]2025-06-25 15:16:37,032: None
[DEBUG]2025-06-25 15:16:37,032: None
[DEBUG]2025-06-25 15:16:37,032: None
[DEBUG]2025-06-25 15:16:37,032: None
[DEBUG]2025-06-25 15:16:37,032: None
[DEBUG]2025-06-25 15:16:37,032: None
[DEBUG]2025-06-25 15:16:37,033: None
[DEBUG]2025-06-25 15:16:37,033: None
[DEBUG]2025-06-25 15:16:37,033: None
[DEBUG]2025-06-25 15:16:37,033: None
[DEBUG]2025-06-25 15:16:37,033: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,035: None
[DEBUG]2025-06-25 15:16:37,035: None
[DEBUG]2025-06-25 15:16:37,035: None
[DEBUG]2025-06-25 15:16:37,035: None
[DEBUG]2025-06-25 15:16:37,035: None
[DEBUG]2025-06-25 15:16:37,035: None
[DEBUG]2025-06-25 15:16:37,035: None
[DEBUG]2025-06-25 15:16:37,035: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:18:19,641: <re.Match object; span=(1081, 1842), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:18:19,641: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:18:19,641: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:18:19,645: None
[DEBUG]2025-06-25 15:18:19,645: None
[DEBUG]2025-06-25 15:18:19,646: None
[DEBUG]2025-06-25 15:18:19,646: None
[DEBUG]2025-06-25 15:18:19,646: None
[DEBUG]2025-06-25 15:18:19,647: None
[DEBUG]2025-06-25 15:18:19,647: None
[DEBUG]2025-06-25 15:18:19,647: None
[DEBUG]2025-06-25 15:18:19,647: None
[DEBUG]2025-06-25 15:18:19,648: None
[DEBUG]2025-06-25 15:18:19,648: None
[DEBUG]2025-06-25 15:18:19,648: None
[DEBUG]2025-06-25 15:18:19,648: None
[DEBUG]2025-06-25 15:18:19,648: None
[DEBUG]2025-06-25 15:18:19,649: None
[DEBUG]2025-06-25 15:18:19,649: None
[DEBUG]2025-06-25 15:18:19,649: None
[DEBUG]2025-06-25 15:18:19,649: None
[DEBUG]2025-06-25 15:18:19,649: None
[DEBUG]2025-06-25 15:18:19,649: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:19:07,989: <re.Match object; span=(1081, 1840), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:19:07,989: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:19:07,989: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:19:07,993: None
[DEBUG]2025-06-25 15:19:07,993: None
[DEBUG]2025-06-25 15:19:07,994: None
[DEBUG]2025-06-25 15:19:07,994: None
[DEBUG]2025-06-25 15:19:07,994: None
[DEBUG]2025-06-25 15:19:07,995: None
[DEBUG]2025-06-25 15:19:07,995: None
[DEBUG]2025-06-25 15:19:07,995: None
[DEBUG]2025-06-25 15:19:07,995: None
[DEBUG]2025-06-25 15:19:07,996: None
[DEBUG]2025-06-25 15:19:07,996: None
[DEBUG]2025-06-25 15:19:07,996: None
[DEBUG]2025-06-25 15:19:07,996: None
[DEBUG]2025-06-25 15:19:07,996: None
[DEBUG]2025-06-25 15:19:07,997: None
[DEBUG]2025-06-25 15:19:07,997: None
[DEBUG]2025-06-25 15:19:07,997: None
[DEBUG]2025-06-25 15:19:07,997: None
[DEBUG]2025-06-25 15:19:07,997: None
[DEBUG]2025-06-25 15:19:07,997: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:20:02,055: <re.Match object; span=(1081, 1840), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:20:02,055: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'FR', 'FL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:20:02,055: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"FR",
	"FL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:20:02,060: None
[DEBUG]2025-06-25 15:20:02,060: None
[DEBUG]2025-06-25 15:20:02,061: None
[DEBUG]2025-06-25 15:20:02,061: None
[DEBUG]2025-06-25 15:20:02,061: None
[DEBUG]2025-06-25 15:20:02,062: None
[DEBUG]2025-06-25 15:20:02,062: None
[DEBUG]2025-06-25 15:20:02,062: None
[DEBUG]2025-06-25 15:20:02,062: None
[DEBUG]2025-06-25 15:20:02,063: None
[DEBUG]2025-06-25 15:20:02,063: None
[DEBUG]2025-06-25 15:20:02,063: None
[DEBUG]2025-06-25 15:20:02,063: None
[DEBUG]2025-06-25 15:20:02,063: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,065: None
[DEBUG]2025-06-25 15:20:02,065: None
[DEBUG]2025-06-25 15:20:02,065: None
[DEBUG]2025-06-25 15:20:02,065: None
[DEBUG]2025-06-25 15:20:02,065: None
[DEBUG]2025-06-25 15:20:02,065: None
[DEBUG]2025-06-25 15:20:02,065: None
[DEBUG]2025-06-25 15:20:02,065: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:43,287: <re.Match object; span=(1081, 1838), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:20:43,287: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:20:43,287: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:20:43,293: None
[DEBUG]2025-06-25 15:20:43,293: None
[DEBUG]2025-06-25 15:20:43,294: None
[DEBUG]2025-06-25 15:20:43,294: None
[DEBUG]2025-06-25 15:20:43,294: None
[DEBUG]2025-06-25 15:20:43,295: None
[DEBUG]2025-06-25 15:20:43,295: None
[DEBUG]2025-06-25 15:20:43,295: None
[DEBUG]2025-06-25 15:20:43,295: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,297: None
[DEBUG]2025-06-25 15:20:43,297: None
[DEBUG]2025-06-25 15:20:43,297: None
[DEBUG]2025-06-25 15:20:43,297: None
[DEBUG]2025-06-25 15:20:43,297: None
[DEBUG]2025-06-25 15:20:43,297: None
[DEBUG]2025-06-25 15:20:43,297: None
[DEBUG]2025-06-25 15:20:43,299: None
[DEBUG]2025-06-25 15:20:43,299: None
[DEBUG]2025-06-25 15:20:43,299: None
[DEBUG]2025-06-25 15:20:43,299: None
[DEBUG]2025-06-25 15:20:43,299: None
[DEBUG]2025-06-25 15:20:43,299: None
[DEBUG]2025-06-25 15:20:43,299: None
[DEBUG]2025-06-25 15:20:43,299: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:21:34,998: <re.Match object; span=(1081, 1836), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:21:34,998: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'FR', 'FL', 'BR', 'BL', 'NB', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:21:34,999: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NB",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:21:35,002: None
[DEBUG]2025-06-25 15:21:35,002: None
[DEBUG]2025-06-25 15:21:35,003: None
[DEBUG]2025-06-25 15:21:35,003: None
[DEBUG]2025-06-25 15:21:35,003: None
[DEBUG]2025-06-25 15:21:35,004: None
[DEBUG]2025-06-25 15:21:35,004: None
[DEBUG]2025-06-25 15:21:35,004: None
[DEBUG]2025-06-25 15:21:35,004: None
[DEBUG]2025-06-25 15:21:35,005: None
[DEBUG]2025-06-25 15:21:35,005: None
[DEBUG]2025-06-25 15:21:35,005: None
[DEBUG]2025-06-25 15:21:35,005: None
[DEBUG]2025-06-25 15:21:35,005: None
[DEBUG]2025-06-25 15:21:35,006: None
[DEBUG]2025-06-25 15:21:35,006: None
[DEBUG]2025-06-25 15:21:35,006: None
[DEBUG]2025-06-25 15:21:35,006: None
[DEBUG]2025-06-25 15:21:35,006: None
[DEBUG]2025-06-25 15:21:35,006: None
[DEBUG]2025-06-25 15:21:35,007: None
[DEBUG]2025-06-25 15:21:35,007: None
[DEBUG]2025-06-25 15:21:35,007: None
[DEBUG]2025-06-25 15:21:35,007: None
[DEBUG]2025-06-25 15:21:35,007: None
[DEBUG]2025-06-25 15:21:35,007: None
[DEBUG]2025-06-25 15:21:35,007: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:22:41,120: <re.Match object; span=(1081, 1838), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:22:41,121: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:22:41,121: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:22:41,124: None
[DEBUG]2025-06-25 15:22:41,124: None
[DEBUG]2025-06-25 15:22:41,124: None
[DEBUG]2025-06-25 15:22:41,124: None
[DEBUG]2025-06-25 15:22:41,124: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:48:38,215: <re.Match object; span=(1081, 1838), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:48:38,215: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:48:38,215: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:48:38,218: None
[DEBUG]2025-06-25 15:48:38,218: None
[DEBUG]2025-06-25 15:48:38,219: None
[DEBUG]2025-06-25 15:48:38,219: None
[DEBUG]2025-06-25 15:48:38,219: None
[DEBUG]2025-06-25 15:48:38,219: None
[DEBUG]2025-06-25 15:48:38,219: None
[DEBUG]2025-06-25 15:48:38,219: None
[DEBUG]2025-06-25 15:48:38,219: None
[DEBUG]2025-06-25 15:48:38,220: None
[DEBUG]2025-06-25 15:48:38,220: None
[DEBUG]2025-06-25 15:48:38,220: None
[DEBUG]2025-06-25 15:48:38,220: None
[DEBUG]2025-06-25 15:48:38,220: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,222: None
[DEBUG]2025-06-25 15:48:38,222: None
[DEBUG]2025-06-25 15:48:38,222: None
[DEBUG]2025-06-25 15:48:38,222: None
[DEBUG]2025-06-25 15:48:38,222: None
[DEBUG]2025-06-25 15:48:38,222: None
[DEBUG]2025-06-25 15:48:38,222: None
[DEBUG]2025-06-25 15:48:38,222: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:50:14,053: <re.Match object; span=(1081, 1838), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:50:14,054: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:50:14,054: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:50:14,056: None
[DEBUG]2025-06-25 15:50:14,056: None
[DEBUG]2025-06-25 15:50:14,057: None
[DEBUG]2025-06-25 15:50:14,057: None
[DEBUG]2025-06-25 15:50:14,057: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,059: None
[DEBUG]2025-06-25 15:50:14,059: None
[DEBUG]2025-06-25 15:50:14,059: None
[DEBUG]2025-06-25 15:50:14,059: None
[DEBUG]2025-06-25 15:50:14,059: None
[DEBUG]2025-06-25 15:50:14,059: None
[DEBUG]2025-06-25 15:50:14,060: None
[DEBUG]2025-06-25 15:50:14,060: None
[DEBUG]2025-06-25 15:50:14,060: None
[DEBUG]2025-06-25 15:50:14,060: None
[DEBUG]2025-06-25 15:50:14,060: None
[DEBUG]2025-06-25 15:50:14,060: None
[DEBUG]2025-06-25 15:50:14,060: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 16:32:59,003: <re.Match object; span=(1081, 1838), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 16:32:59,004: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 16:32:59,004: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 16:32:59,009: None
[DEBUG]2025-06-25 16:32:59,009: None
[DEBUG]2025-06-25 16:32:59,010: None
[DEBUG]2025-06-25 16:32:59,010: None
[DEBUG]2025-06-25 16:32:59,010: None
[DEBUG]2025-06-25 16:32:59,011: None
[DEBUG]2025-06-25 16:32:59,011: None
[DEBUG]2025-06-25 16:32:59,011: None
[DEBUG]2025-06-25 16:32:59,011: None
[DEBUG]2025-06-25 16:32:59,013: None
[DEBUG]2025-06-25 16:32:59,013: None
[DEBUG]2025-06-25 16:32:59,013: None
[DEBUG]2025-06-25 16:32:59,013: None
[DEBUG]2025-06-25 16:32:59,013: None
[DEBUG]2025-06-25 16:32:59,014: None
[DEBUG]2025-06-25 16:32:59,014: None
[DEBUG]2025-06-25 16:32:59,014: None
[DEBUG]2025-06-25 16:32:59,014: None
[DEBUG]2025-06-25 16:32:59,014: None
[DEBUG]2025-06-25 16:32:59,014: None
[DEBUG]2025-06-25 16:32:59,015: None
[DEBUG]2025-06-25 16:32:59,015: None
[DEBUG]2025-06-25 16:32:59,015: None
[DEBUG]2025-06-25 16:32:59,015: None
[DEBUG]2025-06-25 16:32:59,015: None
[DEBUG]2025-06-25 16:32:59,015: None
[DEBUG]2025-06-25 16:32:59,015: None
[DEBUG]2025-06-25 16:32:59,016: None
[DEBUG]2025-06-25 16:32:59,016: None
[DEBUG]2025-06-25 16:32:59,016: None
[DEBUG]2025-06-25 16:32:59,016: None
[DEBUG]2025-06-25 16:32:59,016: None
[DEBUG]2025-06-25 16:32:59,016: None
[DEBUG]2025-06-25 16:32:59,016: None
[DEBUG]2025-06-25 16:32:59,016: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,399: <re.Match object; span=(1081, 1826), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 16:48:17,399: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NO_BUMPER', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 16:48:17,399: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NO_BUMPER",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 16:48:17,402: None
[DEBUG]2025-06-25 16:48:17,402: None
[DEBUG]2025-06-25 16:48:17,403: None
[DEBUG]2025-06-25 16:48:17,403: None
[DEBUG]2025-06-25 16:48:17,403: None
[DEBUG]2025-06-25 16:48:17,403: None
[DEBUG]2025-06-25 16:48:17,403: None
[DEBUG]2025-06-25 16:48:17,403: None
[DEBUG]2025-06-25 16:48:17,403: None
[DEBUG]2025-06-25 16:48:17,404: None
[DEBUG]2025-06-25 16:48:17,404: None
[DEBUG]2025-06-25 16:48:17,404: None
[DEBUG]2025-06-25 16:48:17,404: None
[DEBUG]2025-06-25 16:48:17,404: None
[DEBUG]2025-06-25 16:48:17,405: None
[DEBUG]2025-06-25 16:48:17,405: None
[DEBUG]2025-06-25 16:48:17,405: None
[DEBUG]2025-06-25 16:48:17,405: None
[DEBUG]2025-06-25 16:48:17,405: None
[DEBUG]2025-06-25 16:48:17,405: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:40,990: <re.Match object; span=(1081, 1826), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 16:48:40,990: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NO_BUMPER', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 16:48:40,990: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NO_BUMPER",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 16:48:40,993: None
[DEBUG]2025-06-25 16:48:40,993: None
[DEBUG]2025-06-25 16:48:40,993: None
[DEBUG]2025-06-25 16:48:40,993: None
[DEBUG]2025-06-25 16:48:40,993: None
[DEBUG]2025-06-25 16:48:40,994: None
[DEBUG]2025-06-25 16:48:40,994: None
[DEBUG]2025-06-25 16:48:40,994: None
[DEBUG]2025-06-25 16:48:40,994: None
[DEBUG]2025-06-25 16:48:40,995: None
[DEBUG]2025-06-25 16:48:40,995: None
[DEBUG]2025-06-25 16:48:40,995: None
[DEBUG]2025-06-25 16:48:40,995: None
[DEBUG]2025-06-25 16:48:40,995: None
[DEBUG]2025-06-25 16:48:40,996: None
[DEBUG]2025-06-25 16:48:40,996: None
[DEBUG]2025-06-25 16:48:40,996: None
[DEBUG]2025-06-25 16:48:40,996: None
[DEBUG]2025-06-25 16:48:40,996: None
[DEBUG]2025-06-25 16:48:40,996: None
[DEBUG]2025-06-25 16:48:40,997: None
[DEBUG]2025-06-25 16:48:40,997: None
[DEBUG]2025-06-25 16:48:40,997: None
[DEBUG]2025-06-25 16:48:40,997: None
[DEBUG]2025-06-25 16:48:40,997: None
[DEBUG]2025-06-25 16:48:40,997: None
[DEBUG]2025-06-25 16:48:40,997: None
[DEBUG]2025-06-25 16:48:40,998: None
[DEBUG]2025-06-25 16:48:40,998: None
[DEBUG]2025-06-25 16:48:40,998: None
[DEBUG]2025-06-25 16:48:40,998: None
[DEBUG]2025-06-25 16:48:40,998: None
[DEBUG]2025-06-25 16:48:40,998: None
[DEBUG]2025-06-25 16:48:40,998: None
[DEBUG]2025-06-25 16:48:40,998: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,875: <re.Match object; span=(1081, 1826), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 16:49:23,876: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NO_BUMPER', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 16:49:23,876: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NO_BUMPER",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 16:49:23,881: None
[DEBUG]2025-06-25 16:49:23,881: None
[DEBUG]2025-06-25 16:49:23,882: None
[DEBUG]2025-06-25 16:49:23,882: None
[DEBUG]2025-06-25 16:49:23,882: None
[DEBUG]2025-06-25 16:49:23,884: None
[DEBUG]2025-06-25 16:49:23,884: None
[DEBUG]2025-06-25 16:49:23,884: None
[DEBUG]2025-06-25 16:49:23,884: None
[DEBUG]2025-06-25 16:49:23,886: None
[DEBUG]2025-06-25 16:49:23,886: None
[DEBUG]2025-06-25 16:49:23,886: None
[DEBUG]2025-06-25 16:49:23,886: None
[DEBUG]2025-06-25 16:49:23,886: None
[DEBUG]2025-06-25 16:49:23,887: None
[DEBUG]2025-06-25 16:49:23,887: None
[DEBUG]2025-06-25 16:49:23,887: None
[DEBUG]2025-06-25 16:49:23,887: None
[DEBUG]2025-06-25 16:49:23,887: None
[DEBUG]2025-06-25 16:49:23,887: None
[DEBUG]2025-06-25 16:49:23,889: None
[DEBUG]2025-06-25 16:49:23,889: None
[DEBUG]2025-06-25 16:49:23,889: None
[DEBUG]2025-06-25 16:49:23,889: None
[DEBUG]2025-06-25 16:49:23,889: None
[DEBUG]2025-06-25 16:49:23,889: None
[DEBUG]2025-06-25 16:49:23,889: None
[DEBUG]2025-06-25 16:49:23,891: None
[DEBUG]2025-06-25 16:49:23,891: None
[DEBUG]2025-06-25 16:49:23,891: None
[DEBUG]2025-06-25 16:49:23,891: None
[DEBUG]2025-06-25 16:49:23,891: None
[DEBUG]2025-06-25 16:49:23,891: None
[DEBUG]2025-06-25 16:49:23,891: None
[DEBUG]2025-06-25 16:49:23,891: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,315: <re.Match object; span=(1081, 1803), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:10:07,316: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:10:07,316: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:10:07,319: None
[DEBUG]2025-06-26 09:10:07,319: None
[DEBUG]2025-06-26 09:10:07,320: None
[DEBUG]2025-06-26 09:10:07,320: None
[DEBUG]2025-06-26 09:10:07,320: None
[DEBUG]2025-06-26 09:10:07,321: None
[DEBUG]2025-06-26 09:10:07,321: None
[DEBUG]2025-06-26 09:10:07,321: None
[DEBUG]2025-06-26 09:10:07,321: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,311: <re.Match object; span=(1081, 1811), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:10:47,312: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:10:47,312: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:10:47,315: None
[DEBUG]2025-06-26 09:10:47,315: None
[DEBUG]2025-06-26 09:10:47,316: None
[DEBUG]2025-06-26 09:10:47,316: None
[DEBUG]2025-06-26 09:10:47,316: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,318: None
[DEBUG]2025-06-26 09:10:47,318: None
[DEBUG]2025-06-26 09:10:47,318: None
[DEBUG]2025-06-26 09:10:47,318: None
[DEBUG]2025-06-26 09:10:47,318: None
[DEBUG]2025-06-26 09:10:47,318: None
[DEBUG]2025-06-26 09:10:47,319: None
[DEBUG]2025-06-26 09:10:47,319: None
[DEBUG]2025-06-26 09:10:47,319: None
[DEBUG]2025-06-26 09:10:47,319: None
[DEBUG]2025-06-26 09:10:47,319: None
[DEBUG]2025-06-26 09:10:47,319: None
[DEBUG]2025-06-26 09:10:47,319: None
[DEBUG]2025-06-26 09:10:47,320: None
[DEBUG]2025-06-26 09:10:47,320: None
[DEBUG]2025-06-26 09:10:47,320: None
[DEBUG]2025-06-26 09:10:47,320: None
[DEBUG]2025-06-26 09:10:47,320: None
[DEBUG]2025-06-26 09:10:47,320: None
[DEBUG]2025-06-26 09:10:47,320: None
[DEBUG]2025-06-26 09:10:47,320: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,187: <re.Match object; span=(1081, 1811), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:11:21,188: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:11:21,188: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:11:21,191: None
[DEBUG]2025-06-26 09:11:21,191: None
[DEBUG]2025-06-26 09:11:21,192: None
[DEBUG]2025-06-26 09:11:21,192: None
[DEBUG]2025-06-26 09:11:21,192: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,194: None
[DEBUG]2025-06-26 09:11:21,194: None
[DEBUG]2025-06-26 09:11:21,194: None
[DEBUG]2025-06-26 09:11:21,194: None
[DEBUG]2025-06-26 09:11:21,194: None
[DEBUG]2025-06-26 09:11:21,194: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,770: <re.Match object; span=(1081, 1811), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:12:16,771: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:12:16,771: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:12:16,775: None
[DEBUG]2025-06-26 09:12:16,775: None
[DEBUG]2025-06-26 09:12:16,776: None
[DEBUG]2025-06-26 09:12:16,776: None
[DEBUG]2025-06-26 09:12:16,776: None
[DEBUG]2025-06-26 09:12:16,777: None
[DEBUG]2025-06-26 09:12:16,777: None
[DEBUG]2025-06-26 09:12:16,777: None
[DEBUG]2025-06-26 09:12:16,777: None
[DEBUG]2025-06-26 09:12:16,778: None
[DEBUG]2025-06-26 09:12:16,778: None
[DEBUG]2025-06-26 09:12:16,778: None
[DEBUG]2025-06-26 09:12:16,778: None
[DEBUG]2025-06-26 09:12:16,778: None
[DEBUG]2025-06-26 09:12:16,779: None
[DEBUG]2025-06-26 09:12:16,779: None
[DEBUG]2025-06-26 09:12:16,779: None
[DEBUG]2025-06-26 09:12:16,779: None
[DEBUG]2025-06-26 09:12:16,779: None
[DEBUG]2025-06-26 09:12:16,779: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,736: <re.Match object; span=(1081, 1811), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:12:55,736: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:12:55,736: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:12:55,740: None
[DEBUG]2025-06-26 09:12:55,740: None
[DEBUG]2025-06-26 09:12:55,741: None
[DEBUG]2025-06-26 09:12:55,741: None
[DEBUG]2025-06-26 09:12:55,741: None
[DEBUG]2025-06-26 09:12:55,743: None
[DEBUG]2025-06-26 09:12:55,743: None
[DEBUG]2025-06-26 09:12:55,743: None
[DEBUG]2025-06-26 09:12:55,743: None
[DEBUG]2025-06-26 09:12:55,744: None
[DEBUG]2025-06-26 09:12:55,744: None
[DEBUG]2025-06-26 09:12:55,744: None
[DEBUG]2025-06-26 09:12:55,744: None
[DEBUG]2025-06-26 09:12:55,744: None
[DEBUG]2025-06-26 09:12:55,745: None
[DEBUG]2025-06-26 09:12:55,745: None
[DEBUG]2025-06-26 09:12:55,745: None
[DEBUG]2025-06-26 09:12:55,745: None
[DEBUG]2025-06-26 09:12:55,745: None
[DEBUG]2025-06-26 09:12:55,745: None
[DEBUG]2025-06-26 09:12:55,746: None
[DEBUG]2025-06-26 09:12:55,746: None
[DEBUG]2025-06-26 09:12:55,746: None
[DEBUG]2025-06-26 09:12:55,746: None
[DEBUG]2025-06-26 09:12:55,746: None
[DEBUG]2025-06-26 09:12:55,746: None
[DEBUG]2025-06-26 09:12:55,746: None
[DEBUG]2025-06-26 09:12:55,747: None
[DEBUG]2025-06-26 09:12:55,747: None
[DEBUG]2025-06-26 09:12:55,747: None
[DEBUG]2025-06-26 09:12:55,747: None
[DEBUG]2025-06-26 09:12:55,747: None
[DEBUG]2025-06-26 09:12:55,747: None
[DEBUG]2025-06-26 09:12:55,747: None
[DEBUG]2025-06-26 09:12:55,747: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,261: <re.Match object; span=(1081, 1811), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:26:32,261: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:26:32,262: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:26:32,265: None
[DEBUG]2025-06-26 09:26:32,265: None
[DEBUG]2025-06-26 09:26:32,266: None
[DEBUG]2025-06-26 09:26:32,266: None
[DEBUG]2025-06-26 09:26:32,266: None
[DEBUG]2025-06-26 09:26:32,267: None
[DEBUG]2025-06-26 09:26:32,267: None
[DEBUG]2025-06-26 09:26:32,267: None
[DEBUG]2025-06-26 09:26:32,267: None
[DEBUG]2025-06-26 09:26:32,268: None
[DEBUG]2025-06-26 09:26:32,268: None
[DEBUG]2025-06-26 09:26:32,268: None
[DEBUG]2025-06-26 09:26:32,268: None
[DEBUG]2025-06-26 09:26:32,268: None
[DEBUG]2025-06-26 09:26:32,269: None
[DEBUG]2025-06-26 09:26:32,269: None
[DEBUG]2025-06-26 09:26:32,269: None
[DEBUG]2025-06-26 09:26:32,269: None
[DEBUG]2025-06-26 09:26:32,269: None
[DEBUG]2025-06-26 09:26:32,269: None
[DEBUG]2025-06-26 09:26:32,270: None
[DEBUG]2025-06-26 09:26:32,270: None
[DEBUG]2025-06-26 09:26:32,270: None
[DEBUG]2025-06-26 09:26:32,270: None
[DEBUG]2025-06-26 09:26:32,270: None
[DEBUG]2025-06-26 09:26:32,270: None
[DEBUG]2025-06-26 09:26:32,270: None
[DEBUG]2025-06-26 09:26:32,272: None
[DEBUG]2025-06-26 09:26:32,272: None
[DEBUG]2025-06-26 09:26:32,272: None
[DEBUG]2025-06-26 09:26:32,272: None
[DEBUG]2025-06-26 09:26:32,272: None
[DEBUG]2025-06-26 09:26:32,272: None
[DEBUG]2025-06-26 09:26:32,272: None
[DEBUG]2025-06-26 09:26:32,272: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,505: <re.Match object; span=(1081, 1811), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:30:08,505: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:30:08,505: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:30:08,509: None
[DEBUG]2025-06-26 09:30:08,509: None
[DEBUG]2025-06-26 09:30:08,510: None
[DEBUG]2025-06-26 09:30:08,510: None
[DEBUG]2025-06-26 09:30:08,510: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,512: None
[DEBUG]2025-06-26 09:30:08,512: None
[DEBUG]2025-06-26 09:30:08,512: None
[DEBUG]2025-06-26 09:30:08,512: None
[DEBUG]2025-06-26 09:30:08,512: None
[DEBUG]2025-06-26 09:30:08,512: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,281: <re.Match object; span=(1081, 1762), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:49:04,282: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:49:04,282: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:49:04,287: None
[DEBUG]2025-06-26 09:49:04,287: None
[DEBUG]2025-06-26 09:49:04,288: None
[DEBUG]2025-06-26 09:49:04,288: None
[DEBUG]2025-06-26 09:49:04,288: None
[DEBUG]2025-06-26 09:49:04,289: None
[DEBUG]2025-06-26 09:49:04,289: None
[DEBUG]2025-06-26 09:49:04,289: None
[DEBUG]2025-06-26 09:49:04,289: None
[DEBUG]2025-06-26 09:49:04,290: None
[DEBUG]2025-06-26 09:49:04,290: None
[DEBUG]2025-06-26 09:49:04,290: None
[DEBUG]2025-06-26 09:49:04,290: None
[DEBUG]2025-06-26 09:49:04,290: None
[DEBUG]2025-06-26 09:49:04,291: None
[DEBUG]2025-06-26 09:49:04,291: None
[DEBUG]2025-06-26 09:49:04,291: None
[DEBUG]2025-06-26 09:49:04,291: None
[DEBUG]2025-06-26 09:49:04,291: None
[DEBUG]2025-06-26 09:49:04,291: None
[DEBUG]2025-06-26 09:49:04,292: None
[DEBUG]2025-06-26 09:49:04,292: None
[DEBUG]2025-06-26 09:49:04,292: None
[DEBUG]2025-06-26 09:49:04,292: None
[DEBUG]2025-06-26 09:49:04,292: None
[DEBUG]2025-06-26 09:49:04,292: None
[DEBUG]2025-06-26 09:49:04,292: None
[DEBUG]2025-06-26 09:49:04,293: None
[DEBUG]2025-06-26 09:49:04,293: None
[DEBUG]2025-06-26 09:49:04,293: None
[DEBUG]2025-06-26 09:49:04,293: None
[DEBUG]2025-06-26 09:49:04,293: None
[DEBUG]2025-06-26 09:49:04,293: None
[DEBUG]2025-06-26 09:49:04,293: None
[DEBUG]2025-06-26 09:49:04,293: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,362: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:58:40,362: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:58:40,362: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:58:40,367: None
[DEBUG]2025-06-26 09:58:40,367: None
[DEBUG]2025-06-26 09:58:40,367: None
[DEBUG]2025-06-26 09:58:40,367: None
[DEBUG]2025-06-26 09:58:40,367: None
[DEBUG]2025-06-26 09:58:40,368: None
[DEBUG]2025-06-26 09:58:40,368: None
[DEBUG]2025-06-26 09:58:40,368: None
[DEBUG]2025-06-26 09:58:40,368: None
[DEBUG]2025-06-26 09:58:40,369: None
[DEBUG]2025-06-26 09:58:40,369: None
[DEBUG]2025-06-26 09:58:40,369: None
[DEBUG]2025-06-26 09:58:40,369: None
[DEBUG]2025-06-26 09:58:40,369: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,371: None
[DEBUG]2025-06-26 09:58:40,371: None
[DEBUG]2025-06-26 09:58:40,371: None
[DEBUG]2025-06-26 09:58:40,371: None
[DEBUG]2025-06-26 09:58:40,371: None
[DEBUG]2025-06-26 09:58:40,371: None
[DEBUG]2025-06-26 09:58:40,371: None
[DEBUG]2025-06-26 09:58:40,371: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,101: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 10:00:54,102: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 10:00:54,102: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 10:00:54,107: None
[DEBUG]2025-06-26 10:00:54,107: None
[DEBUG]2025-06-26 10:00:54,109: None
[DEBUG]2025-06-26 10:00:54,109: None
[DEBUG]2025-06-26 10:00:54,109: None
[DEBUG]2025-06-26 10:00:54,110: None
[DEBUG]2025-06-26 10:00:54,110: None
[DEBUG]2025-06-26 10:00:54,110: None
[DEBUG]2025-06-26 10:00:54,110: None
[DEBUG]2025-06-26 10:00:54,112: None
[DEBUG]2025-06-26 10:00:54,112: None
[DEBUG]2025-06-26 10:00:54,112: None
[DEBUG]2025-06-26 10:00:54,112: None
[DEBUG]2025-06-26 10:00:54,112: None
[DEBUG]2025-06-26 10:00:54,113: None
[DEBUG]2025-06-26 10:00:54,113: None
[DEBUG]2025-06-26 10:00:54,113: None
[DEBUG]2025-06-26 10:00:54,113: None
[DEBUG]2025-06-26 10:00:54,113: None
[DEBUG]2025-06-26 10:00:54,113: None
[DEBUG]2025-06-26 10:00:54,115: None
[DEBUG]2025-06-26 10:00:54,115: None
[DEBUG]2025-06-26 10:00:54,115: None
[DEBUG]2025-06-26 10:00:54,115: None
[DEBUG]2025-06-26 10:00:54,115: None
[DEBUG]2025-06-26 10:00:54,115: None
[DEBUG]2025-06-26 10:00:54,115: None
[DEBUG]2025-06-26 10:00:54,117: None
[DEBUG]2025-06-26 10:00:54,117: None
[DEBUG]2025-06-26 10:00:54,117: None
[DEBUG]2025-06-26 10:00:54,117: None
[DEBUG]2025-06-26 10:00:54,117: None
[DEBUG]2025-06-26 10:00:54,117: None
[DEBUG]2025-06-26 10:00:54,117: None
[DEBUG]2025-06-26 10:00:54,117: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,929: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 10:02:03,929: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 10:02:03,930: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 10:02:03,934: None
[DEBUG]2025-06-26 10:02:03,934: None
[DEBUG]2025-06-26 10:02:03,935: None
[DEBUG]2025-06-26 10:02:03,935: None
[DEBUG]2025-06-26 10:02:03,935: None
[DEBUG]2025-06-26 10:02:03,936: None
[DEBUG]2025-06-26 10:02:03,936: None
[DEBUG]2025-06-26 10:02:03,936: None
[DEBUG]2025-06-26 10:02:03,936: None
[DEBUG]2025-06-26 10:02:03,937: None
[DEBUG]2025-06-26 10:02:03,937: None
[DEBUG]2025-06-26 10:02:03,937: None
[DEBUG]2025-06-26 10:02:03,937: None
[DEBUG]2025-06-26 10:02:03,937: None
[DEBUG]2025-06-26 10:02:03,938: None
[DEBUG]2025-06-26 10:02:03,938: None
[DEBUG]2025-06-26 10:02:03,938: None
[DEBUG]2025-06-26 10:02:03,938: None
[DEBUG]2025-06-26 10:02:03,938: None
[DEBUG]2025-06-26 10:02:03,938: None
[DEBUG]2025-06-26 10:02:03,940: None
[DEBUG]2025-06-26 10:02:03,940: None
[DEBUG]2025-06-26 10:02:03,940: None
[DEBUG]2025-06-26 10:02:03,940: None
[DEBUG]2025-06-26 10:02:03,940: None
[DEBUG]2025-06-26 10:02:03,940: None
[DEBUG]2025-06-26 10:02:03,940: None
[DEBUG]2025-06-26 10:02:03,941: None
[DEBUG]2025-06-26 10:02:03,941: None
[DEBUG]2025-06-26 10:02:03,941: None
[DEBUG]2025-06-26 10:02:03,941: None
[DEBUG]2025-06-26 10:02:03,941: None
[DEBUG]2025-06-26 10:02:03,941: None
[DEBUG]2025-06-26 10:02:03,941: None
[DEBUG]2025-06-26 10:02:03,941: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,416: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 10:03:01,417: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 10:03:01,417: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 10:03:01,422: None
[DEBUG]2025-06-26 10:03:01,422: None
[DEBUG]2025-06-26 10:03:01,423: None
[DEBUG]2025-06-26 10:03:01,423: None
[DEBUG]2025-06-26 10:03:01,423: None
[DEBUG]2025-06-26 10:03:01,424: None
[DEBUG]2025-06-26 10:03:01,424: None
[DEBUG]2025-06-26 10:03:01,424: None
[DEBUG]2025-06-26 10:03:01,424: None
[DEBUG]2025-06-26 10:03:01,426: None
[DEBUG]2025-06-26 10:03:01,426: None
[DEBUG]2025-06-26 10:03:01,426: None
[DEBUG]2025-06-26 10:03:01,426: None
[DEBUG]2025-06-26 10:03:01,426: None
[DEBUG]2025-06-26 10:03:01,427: None
[DEBUG]2025-06-26 10:03:01,427: None
[DEBUG]2025-06-26 10:03:01,427: None
[DEBUG]2025-06-26 10:03:01,427: None
[DEBUG]2025-06-26 10:03:01,427: None
[DEBUG]2025-06-26 10:03:01,427: None
[DEBUG]2025-06-26 10:03:01,429: None
[DEBUG]2025-06-26 10:03:01,429: None
[DEBUG]2025-06-26 10:03:01,429: None
[DEBUG]2025-06-26 10:03:01,429: None
[DEBUG]2025-06-26 10:03:01,429: None
[DEBUG]2025-06-26 10:03:01,429: None
[DEBUG]2025-06-26 10:03:01,429: None
[DEBUG]2025-06-26 10:03:01,430: None
[DEBUG]2025-06-26 10:03:01,430: None
[DEBUG]2025-06-26 10:03:01,430: None
[DEBUG]2025-06-26 10:03:01,430: None
[DEBUG]2025-06-26 10:03:01,430: None
[DEBUG]2025-06-26 10:03:01,430: None
[DEBUG]2025-06-26 10:03:01,430: None
[DEBUG]2025-06-26 10:03:01,430: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,265: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 10:03:14,266: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 10:03:14,266: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 10:03:14,270: None
[DEBUG]2025-06-26 10:03:14,270: None
[DEBUG]2025-06-26 10:03:14,271: None
[DEBUG]2025-06-26 10:03:14,271: None
[DEBUG]2025-06-26 10:03:14,271: None
[DEBUG]2025-06-26 10:03:14,272: None
[DEBUG]2025-06-26 10:03:14,272: None
[DEBUG]2025-06-26 10:03:14,272: None
[DEBUG]2025-06-26 10:03:14,272: None
[DEBUG]2025-06-26 10:03:14,273: None
[DEBUG]2025-06-26 10:03:14,273: None
[DEBUG]2025-06-26 10:03:14,273: None
[DEBUG]2025-06-26 10:03:14,273: None
[DEBUG]2025-06-26 10:03:14,273: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,275: None
[DEBUG]2025-06-26 10:03:14,275: None
[DEBUG]2025-06-26 10:03:14,275: None
[DEBUG]2025-06-26 10:03:14,275: None
[DEBUG]2025-06-26 10:03:14,275: None
[DEBUG]2025-06-26 10:03:14,275: None
[DEBUG]2025-06-26 10:03:14,275: None
[DEBUG]2025-06-26 10:03:14,275: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,660: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 10:18:03,660: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 10:18:03,660: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 10:18:03,663: None
[DEBUG]2025-06-26 10:18:03,663: None
[DEBUG]2025-06-26 10:18:03,664: None
[DEBUG]2025-06-26 10:18:03,664: None
[DEBUG]2025-06-26 10:18:03,664: None
[DEBUG]2025-06-26 10:18:03,665: None
[DEBUG]2025-06-26 10:18:03,665: None
[DEBUG]2025-06-26 10:18:03,665: None
[DEBUG]2025-06-26 10:18:03,665: None
[DEBUG]2025-06-26 10:18:03,666: None
[DEBUG]2025-06-26 10:18:03,666: None
[DEBUG]2025-06-26 10:18:03,666: None
[DEBUG]2025-06-26 10:18:03,666: None
[DEBUG]2025-06-26 10:18:03,666: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,227: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 10:18:31,227: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 10:18:31,228: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 10:18:31,230: None
[DEBUG]2025-06-26 10:18:31,230: None
[DEBUG]2025-06-26 10:18:31,231: None
[DEBUG]2025-06-26 10:18:31,231: None
[DEBUG]2025-06-26 10:18:31,231: None
[DEBUG]2025-06-26 10:18:31,231: None
[DEBUG]2025-06-26 10:18:31,231: None
[DEBUG]2025-06-26 10:18:31,231: None
[DEBUG]2025-06-26 10:18:31,231: None
[DEBUG]2025-06-26 10:18:31,232: None
[DEBUG]2025-06-26 10:18:31,232: None
[DEBUG]2025-06-26 10:18:31,232: None
[DEBUG]2025-06-26 10:18:31,232: None
[DEBUG]2025-06-26 10:18:31,232: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,234: None
[DEBUG]2025-06-26 10:18:31,234: None
[DEBUG]2025-06-26 10:18:31,234: None
[DEBUG]2025-06-26 10:18:31,234: None
[DEBUG]2025-06-26 10:18:31,234: None
[DEBUG]2025-06-26 10:18:31,234: None
[DEBUG]2025-06-26 10:18:31,234: None
[DEBUG]2025-06-26 10:18:31,234: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,067: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 13:33:32,067: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 13:33:32,068: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 13:33:32,072: None
[DEBUG]2025-06-26 13:33:32,072: None
[DEBUG]2025-06-26 13:33:32,074: None
[DEBUG]2025-06-26 13:33:32,074: None
[DEBUG]2025-06-26 13:33:32,074: None
[DEBUG]2025-06-26 13:33:32,075: None
[DEBUG]2025-06-26 13:33:32,075: None
[DEBUG]2025-06-26 13:33:32,075: None
[DEBUG]2025-06-26 13:33:32,075: None
[DEBUG]2025-06-26 13:33:32,077: None
[DEBUG]2025-06-26 13:33:32,077: None
[DEBUG]2025-06-26 13:33:32,077: None
[DEBUG]2025-06-26 13:33:32,077: None
[DEBUG]2025-06-26 13:33:32,077: None
[DEBUG]2025-06-26 13:33:32,079: None
[DEBUG]2025-06-26 13:33:32,079: None
[DEBUG]2025-06-26 13:33:32,079: None
[DEBUG]2025-06-26 13:33:32,079: None
[DEBUG]2025-06-26 13:33:32,079: None
[DEBUG]2025-06-26 13:33:32,079: None
[DEBUG]2025-06-26 13:33:32,080: None
[DEBUG]2025-06-26 13:33:32,080: None
[DEBUG]2025-06-26 13:33:32,080: None
[DEBUG]2025-06-26 13:33:32,080: None
[DEBUG]2025-06-26 13:33:32,080: None
[DEBUG]2025-06-26 13:33:32,080: None
[DEBUG]2025-06-26 13:33:32,080: None
[DEBUG]2025-06-26 13:33:32,082: None
[DEBUG]2025-06-26 13:33:32,082: None
[DEBUG]2025-06-26 13:33:32,082: None
[DEBUG]2025-06-26 13:33:32,082: None
[DEBUG]2025-06-26 13:33:32,082: None
[DEBUG]2025-06-26 13:33:32,082: None
[DEBUG]2025-06-26 13:33:32,082: None
[DEBUG]2025-06-26 13:33:32,082: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,528: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 14:07:57,529: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 14:07:57,529: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 14:07:57,534: None
[DEBUG]2025-06-26 14:07:57,534: None
[DEBUG]2025-06-26 14:07:57,535: None
[DEBUG]2025-06-26 14:07:57,535: None
[DEBUG]2025-06-26 14:07:57,535: None
[DEBUG]2025-06-26 14:07:57,537: None
[DEBUG]2025-06-26 14:07:57,537: None
[DEBUG]2025-06-26 14:07:57,537: None
[DEBUG]2025-06-26 14:07:57,537: None
[DEBUG]2025-06-26 14:07:57,538: None
[DEBUG]2025-06-26 14:07:57,538: None
[DEBUG]2025-06-26 14:07:57,538: None
[DEBUG]2025-06-26 14:07:57,538: None
[DEBUG]2025-06-26 14:07:57,538: None
[DEBUG]2025-06-26 14:07:57,540: None
[DEBUG]2025-06-26 14:07:57,540: None
[DEBUG]2025-06-26 14:07:57,540: None
[DEBUG]2025-06-26 14:07:57,540: None
[DEBUG]2025-06-26 14:07:57,540: None
[DEBUG]2025-06-26 14:07:57,540: None
[DEBUG]2025-06-26 14:07:57,542: None
[DEBUG]2025-06-26 14:07:57,542: None
[DEBUG]2025-06-26 14:07:57,542: None
[DEBUG]2025-06-26 14:07:57,542: None
[DEBUG]2025-06-26 14:07:57,542: None
[DEBUG]2025-06-26 14:07:57,542: None
[DEBUG]2025-06-26 14:07:57,542: None
[DEBUG]2025-06-26 14:07:57,544: None
[DEBUG]2025-06-26 14:07:57,544: None
[DEBUG]2025-06-26 14:07:57,544: None
[DEBUG]2025-06-26 14:07:57,544: None
[DEBUG]2025-06-26 14:07:57,544: None
[DEBUG]2025-06-26 14:07:57,544: None
[DEBUG]2025-06-26 14:07:57,544: None
[DEBUG]2025-06-26 14:07:57,544: None
[DEBUG]2025-06-26 14:07:57,546: None
[DEBUG]2025-06-26 14:07:57,546: None
[DEBUG]2025-06-26 14:07:57,546: None
[DEBUG]2025-06-26 14:07:57,546: None
[DEBUG]2025-06-26 14:07:57,546: None
[DEBUG]2025-06-26 14:07:57,546: None
[DEBUG]2025-06-26 14:07:57,546: None
[DEBUG]2025-06-26 14:07:57,546: None
[DEBUG]2025-06-26 14:07:57,546: None
[DEBUG]2025-06-26 14:07:57,547: None
[DEBUG]2025-06-26 14:07:57,547: None
[DEBUG]2025-06-26 14:07:57,547: None
[DEBUG]2025-06-26 14:07:57,547: None
[DEBUG]2025-06-26 14:07:57,547: None
[DEBUG]2025-06-26 14:07:57,547: None
[DEBUG]2025-06-26 14:07:57,547: None
[DEBUG]2025-06-26 14:07:57,547: None
[DEBUG]2025-06-26 14:07:57,547: None
[DEBUG]2025-06-26 14:07:57,547: None
[DEBUG]2025-06-26 14:07:57,549: None
[DEBUG]2025-06-26 14:07:57,549: None
[DEBUG]2025-06-26 14:07:57,549: None
[DEBUG]2025-06-26 14:07:57,549: None
[DEBUG]2025-06-26 14:07:57,549: None
[DEBUG]2025-06-26 14:07:57,549: None
[DEBUG]2025-06-26 14:07:57,549: None
[DEBUG]2025-06-26 14:07:57,549: None
[DEBUG]2025-06-26 14:07:57,549: None
[DEBUG]2025-06-26 14:07:57,549: None
[DEBUG]2025-06-26 14:07:57,549: None
[DEBUG]2025-06-26 14:07:57,551: None
[DEBUG]2025-06-26 14:07:57,551: None
[DEBUG]2025-06-26 14:07:57,551: None
[DEBUG]2025-06-26 14:07:57,551: None
[DEBUG]2025-06-26 14:07:57,551: None
[DEBUG]2025-06-26 14:07:57,551: None
[DEBUG]2025-06-26 14:07:57,551: None
[DEBUG]2025-06-26 14:07:57,551: None
[DEBUG]2025-06-26 14:07:57,551: None
[DEBUG]2025-06-26 14:07:57,551: None
[DEBUG]2025-06-26 14:07:57,551: None
[DEBUG]2025-06-26 14:07:57,551: None
[DEBUG]2025-06-26 14:07:57,553: None
[DEBUG]2025-06-26 14:07:57,553: None
[DEBUG]2025-06-26 14:07:57,553: None
[DEBUG]2025-06-26 14:07:57,553: None
[DEBUG]2025-06-26 14:07:57,553: None
[DEBUG]2025-06-26 14:07:57,553: None
[DEBUG]2025-06-26 14:07:57,553: None
[DEBUG]2025-06-26 14:07:57,553: None
[DEBUG]2025-06-26 14:07:57,553: None
[DEBUG]2025-06-26 14:07:57,553: None
[DEBUG]2025-06-26 14:07:57,553: None
[DEBUG]2025-06-26 14:07:57,553: None
[DEBUG]2025-06-26 14:07:57,553: None
[DEBUG]2025-06-26 14:07:57,555: None
[DEBUG]2025-06-26 14:07:57,555: None
[DEBUG]2025-06-26 14:07:57,555: None
[DEBUG]2025-06-26 14:07:57,555: None
[DEBUG]2025-06-26 14:07:57,555: None
[DEBUG]2025-06-26 14:07:57,555: None
[DEBUG]2025-06-26 14:07:57,555: None
[DEBUG]2025-06-26 14:07:57,555: None
[DEBUG]2025-06-26 14:07:57,555: None
[DEBUG]2025-06-26 14:07:57,555: None
[DEBUG]2025-06-26 14:07:57,555: None
[DEBUG]2025-06-26 14:07:57,555: None
[DEBUG]2025-06-26 14:07:57,555: None
[DEBUG]2025-06-26 14:07:57,555: None
[DEBUG]2025-06-26 14:07:57,556: None
[DEBUG]2025-06-26 14:07:57,556: None
[DEBUG]2025-06-26 14:07:57,556: None
[DEBUG]2025-06-26 14:07:57,556: None
[DEBUG]2025-06-26 14:07:57,556: None
[DEBUG]2025-06-26 14:07:57,556: None
[DEBUG]2025-06-26 14:07:57,556: None
[DEBUG]2025-06-26 14:07:57,556: None
[DEBUG]2025-06-26 14:07:57,556: None
[DEBUG]2025-06-26 14:07:57,556: None
[DEBUG]2025-06-26 14:07:57,556: None
[DEBUG]2025-06-26 14:07:57,556: None
[DEBUG]2025-06-26 14:07:57,556: None
[DEBUG]2025-06-26 14:07:57,556: None
[DEBUG]2025-06-26 14:07:57,556: None
[DEBUG]2025-06-26 14:07:57,558: None
[DEBUG]2025-06-26 14:07:57,558: None
[DEBUG]2025-06-26 14:07:57,558: None
[DEBUG]2025-06-26 14:07:57,558: None
[DEBUG]2025-06-26 14:07:57,558: None
[DEBUG]2025-06-26 14:07:57,558: None
[DEBUG]2025-06-26 14:07:57,558: None
[DEBUG]2025-06-26 14:07:57,558: None
[DEBUG]2025-06-26 14:07:57,558: None
[DEBUG]2025-06-26 14:07:57,558: None
[DEBUG]2025-06-26 14:07:57,558: None
[DEBUG]2025-06-26 14:07:57,558: None
[DEBUG]2025-06-26 14:07:57,558: None
[DEBUG]2025-06-26 14:07:57,558: None
[DEBUG]2025-06-26 14:07:57,558: None
[DEBUG]2025-06-26 14:07:57,558: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,561: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,563: None
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,565: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,566: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,567: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,570: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,573: None
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,576: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,577: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,578: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,581: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,582: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:07:57,583: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,943: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 14:08:11,943: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 14:08:11,944: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 14:08:11,948: None
[DEBUG]2025-06-26 14:08:11,948: None
[DEBUG]2025-06-26 14:08:11,950: None
[DEBUG]2025-06-26 14:08:11,950: None
[DEBUG]2025-06-26 14:08:11,950: None
[DEBUG]2025-06-26 14:08:11,951: None
[DEBUG]2025-06-26 14:08:11,951: None
[DEBUG]2025-06-26 14:08:11,951: None
[DEBUG]2025-06-26 14:08:11,951: None
[DEBUG]2025-06-26 14:08:11,952: None
[DEBUG]2025-06-26 14:08:11,952: None
[DEBUG]2025-06-26 14:08:11,952: None
[DEBUG]2025-06-26 14:08:11,952: None
[DEBUG]2025-06-26 14:08:11,952: None
[DEBUG]2025-06-26 14:08:11,953: None
[DEBUG]2025-06-26 14:08:11,953: None
[DEBUG]2025-06-26 14:08:11,953: None
[DEBUG]2025-06-26 14:08:11,953: None
[DEBUG]2025-06-26 14:08:11,953: None
[DEBUG]2025-06-26 14:08:11,953: None
[DEBUG]2025-06-26 14:08:11,954: None
[DEBUG]2025-06-26 14:08:11,954: None
[DEBUG]2025-06-26 14:08:11,954: None
[DEBUG]2025-06-26 14:08:11,954: None
[DEBUG]2025-06-26 14:08:11,954: None
[DEBUG]2025-06-26 14:08:11,954: None
[DEBUG]2025-06-26 14:08:11,954: None
[DEBUG]2025-06-26 14:08:11,955: None
[DEBUG]2025-06-26 14:08:11,955: None
[DEBUG]2025-06-26 14:08:11,955: None
[DEBUG]2025-06-26 14:08:11,955: None
[DEBUG]2025-06-26 14:08:11,955: None
[DEBUG]2025-06-26 14:08:11,955: None
[DEBUG]2025-06-26 14:08:11,955: None
[DEBUG]2025-06-26 14:08:11,955: None
[DEBUG]2025-06-26 14:08:11,956: None
[DEBUG]2025-06-26 14:08:11,956: None
[DEBUG]2025-06-26 14:08:11,956: None
[DEBUG]2025-06-26 14:08:11,956: None
[DEBUG]2025-06-26 14:08:11,956: None
[DEBUG]2025-06-26 14:08:11,956: None
[DEBUG]2025-06-26 14:08:11,956: None
[DEBUG]2025-06-26 14:08:11,956: None
[DEBUG]2025-06-26 14:08:11,956: None
[DEBUG]2025-06-26 14:08:11,957: None
[DEBUG]2025-06-26 14:08:11,957: None
[DEBUG]2025-06-26 14:08:11,957: None
[DEBUG]2025-06-26 14:08:11,957: None
[DEBUG]2025-06-26 14:08:11,957: None
[DEBUG]2025-06-26 14:08:11,957: None
[DEBUG]2025-06-26 14:08:11,957: None
[DEBUG]2025-06-26 14:08:11,957: None
[DEBUG]2025-06-26 14:08:11,957: None
[DEBUG]2025-06-26 14:08:11,957: None
[DEBUG]2025-06-26 14:08:11,958: None
[DEBUG]2025-06-26 14:08:11,958: None
[DEBUG]2025-06-26 14:08:11,958: None
[DEBUG]2025-06-26 14:08:11,958: None
[DEBUG]2025-06-26 14:08:11,958: None
[DEBUG]2025-06-26 14:08:11,958: None
[DEBUG]2025-06-26 14:08:11,958: None
[DEBUG]2025-06-26 14:08:11,958: None
[DEBUG]2025-06-26 14:08:11,958: None
[DEBUG]2025-06-26 14:08:11,958: None
[DEBUG]2025-06-26 14:08:11,958: None
[DEBUG]2025-06-26 14:08:11,960: None
[DEBUG]2025-06-26 14:08:11,960: None
[DEBUG]2025-06-26 14:08:11,960: None
[DEBUG]2025-06-26 14:08:11,960: None
[DEBUG]2025-06-26 14:08:11,960: None
[DEBUG]2025-06-26 14:08:11,960: None
[DEBUG]2025-06-26 14:08:11,960: None
[DEBUG]2025-06-26 14:08:11,960: None
[DEBUG]2025-06-26 14:08:11,960: None
[DEBUG]2025-06-26 14:08:11,960: None
[DEBUG]2025-06-26 14:08:11,960: None
[DEBUG]2025-06-26 14:08:11,960: None
[DEBUG]2025-06-26 14:08:11,961: None
[DEBUG]2025-06-26 14:08:11,961: None
[DEBUG]2025-06-26 14:08:11,961: None
[DEBUG]2025-06-26 14:08:11,961: None
[DEBUG]2025-06-26 14:08:11,961: None
[DEBUG]2025-06-26 14:08:11,961: None
[DEBUG]2025-06-26 14:08:11,961: None
[DEBUG]2025-06-26 14:08:11,961: None
[DEBUG]2025-06-26 14:08:11,961: None
[DEBUG]2025-06-26 14:08:11,961: None
[DEBUG]2025-06-26 14:08:11,961: None
[DEBUG]2025-06-26 14:08:11,961: None
[DEBUG]2025-06-26 14:08:11,961: None
[DEBUG]2025-06-26 14:08:11,963: None
[DEBUG]2025-06-26 14:08:11,963: None
[DEBUG]2025-06-26 14:08:11,963: None
[DEBUG]2025-06-26 14:08:11,963: None
[DEBUG]2025-06-26 14:08:11,963: None
[DEBUG]2025-06-26 14:08:11,963: None
[DEBUG]2025-06-26 14:08:11,963: None
[DEBUG]2025-06-26 14:08:11,963: None
[DEBUG]2025-06-26 14:08:11,963: None
[DEBUG]2025-06-26 14:08:11,963: None
[DEBUG]2025-06-26 14:08:11,963: None
[DEBUG]2025-06-26 14:08:11,963: None
[DEBUG]2025-06-26 14:08:11,963: None
[DEBUG]2025-06-26 14:08:11,963: None
[DEBUG]2025-06-26 14:08:11,964: None
[DEBUG]2025-06-26 14:08:11,964: None
[DEBUG]2025-06-26 14:08:11,964: None
[DEBUG]2025-06-26 14:08:11,964: None
[DEBUG]2025-06-26 14:08:11,964: None
[DEBUG]2025-06-26 14:08:11,964: None
[DEBUG]2025-06-26 14:08:11,964: None
[DEBUG]2025-06-26 14:08:11,964: None
[DEBUG]2025-06-26 14:08:11,964: None
[DEBUG]2025-06-26 14:08:11,964: None
[DEBUG]2025-06-26 14:08:11,964: None
[DEBUG]2025-06-26 14:08:11,964: None
[DEBUG]2025-06-26 14:08:11,964: None
[DEBUG]2025-06-26 14:08:11,964: None
[DEBUG]2025-06-26 14:08:11,964: None
[DEBUG]2025-06-26 14:08:11,965: None
[DEBUG]2025-06-26 14:08:11,965: None
[DEBUG]2025-06-26 14:08:11,965: None
[DEBUG]2025-06-26 14:08:11,965: None
[DEBUG]2025-06-26 14:08:11,965: None
[DEBUG]2025-06-26 14:08:11,965: None
[DEBUG]2025-06-26 14:08:11,965: None
[DEBUG]2025-06-26 14:08:11,965: None
[DEBUG]2025-06-26 14:08:11,965: None
[DEBUG]2025-06-26 14:08:11,965: None
[DEBUG]2025-06-26 14:08:11,965: None
[DEBUG]2025-06-26 14:08:11,965: None
[DEBUG]2025-06-26 14:08:11,965: None
[DEBUG]2025-06-26 14:08:11,965: None
[DEBUG]2025-06-26 14:08:11,965: None
[DEBUG]2025-06-26 14:08:11,965: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,966: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,967: None
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,968: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,969: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,970: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,971: None
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,972: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,973: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,974: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,975: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,976: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 14:08:11,977: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:55,443: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 09:52:55,445: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 09:52:55,445: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 09:52:55,467: None
[DEBUG]2025-06-27 09:52:55,467: None
[DEBUG]2025-06-27 09:52:55,496: None
[DEBUG]2025-06-27 09:52:55,496: None
[DEBUG]2025-06-27 09:52:55,496: None
[DEBUG]2025-06-27 09:52:55,522: None
[DEBUG]2025-06-27 09:52:55,522: None
[DEBUG]2025-06-27 09:52:55,522: None
[DEBUG]2025-06-27 09:52:55,522: None
[DEBUG]2025-06-27 09:52:55,551: None
[DEBUG]2025-06-27 09:52:55,551: None
[DEBUG]2025-06-27 09:52:55,551: None
[DEBUG]2025-06-27 09:52:55,551: None
[DEBUG]2025-06-27 09:52:55,551: None
[DEBUG]2025-06-27 09:52:55,587: None
[DEBUG]2025-06-27 09:52:55,587: None
[DEBUG]2025-06-27 09:52:55,587: None
[DEBUG]2025-06-27 09:52:55,587: None
[DEBUG]2025-06-27 09:52:55,587: None
[DEBUG]2025-06-27 09:52:55,587: None
[DEBUG]2025-06-27 09:52:55,625: None
[DEBUG]2025-06-27 09:52:55,625: None
[DEBUG]2025-06-27 09:52:55,625: None
[DEBUG]2025-06-27 09:52:55,625: None
[DEBUG]2025-06-27 09:52:55,625: None
[DEBUG]2025-06-27 09:52:55,625: None
[DEBUG]2025-06-27 09:52:55,625: None
[DEBUG]2025-06-27 09:52:55,648: None
[DEBUG]2025-06-27 09:52:55,648: None
[DEBUG]2025-06-27 09:52:55,648: None
[DEBUG]2025-06-27 09:52:55,648: None
[DEBUG]2025-06-27 09:52:55,648: None
[DEBUG]2025-06-27 09:52:55,648: None
[DEBUG]2025-06-27 09:52:55,648: None
[DEBUG]2025-06-27 09:52:55,648: None
[DEBUG]2025-06-27 09:52:55,682: None
[DEBUG]2025-06-27 09:52:55,682: None
[DEBUG]2025-06-27 09:52:55,682: None
[DEBUG]2025-06-27 09:52:55,682: None
[DEBUG]2025-06-27 09:52:55,682: None
[DEBUG]2025-06-27 09:52:55,682: None
[DEBUG]2025-06-27 09:52:55,682: None
[DEBUG]2025-06-27 09:52:55,682: None
[DEBUG]2025-06-27 09:52:55,682: None
[DEBUG]2025-06-27 09:52:55,709: None
[DEBUG]2025-06-27 09:52:55,709: None
[DEBUG]2025-06-27 09:52:55,709: None
[DEBUG]2025-06-27 09:52:55,709: None
[DEBUG]2025-06-27 09:52:55,709: None
[DEBUG]2025-06-27 09:52:55,709: None
[DEBUG]2025-06-27 09:52:55,709: None
[DEBUG]2025-06-27 09:52:55,709: None
[DEBUG]2025-06-27 09:52:55,709: None
[DEBUG]2025-06-27 09:52:55,709: None
[DEBUG]2025-06-27 09:52:55,736: None
[DEBUG]2025-06-27 09:52:55,736: None
[DEBUG]2025-06-27 09:52:55,736: None
[DEBUG]2025-06-27 09:52:55,736: None
[DEBUG]2025-06-27 09:52:55,736: None
[DEBUG]2025-06-27 09:52:55,736: None
[DEBUG]2025-06-27 09:52:55,736: None
[DEBUG]2025-06-27 09:52:55,736: None
[DEBUG]2025-06-27 09:52:55,736: None
[DEBUG]2025-06-27 09:52:55,736: None
[DEBUG]2025-06-27 09:52:55,736: None
[DEBUG]2025-06-27 09:52:55,768: None
[DEBUG]2025-06-27 09:52:55,768: None
[DEBUG]2025-06-27 09:52:55,768: None
[DEBUG]2025-06-27 09:52:55,768: None
[DEBUG]2025-06-27 09:52:55,768: None
[DEBUG]2025-06-27 09:52:55,768: None
[DEBUG]2025-06-27 09:52:55,768: None
[DEBUG]2025-06-27 09:52:55,768: None
[DEBUG]2025-06-27 09:52:55,768: None
[DEBUG]2025-06-27 09:52:55,768: None
[DEBUG]2025-06-27 09:52:55,768: None
[DEBUG]2025-06-27 09:52:55,768: None
[DEBUG]2025-06-27 09:52:55,809: None
[DEBUG]2025-06-27 09:52:55,809: None
[DEBUG]2025-06-27 09:52:55,809: None
[DEBUG]2025-06-27 09:52:55,809: None
[DEBUG]2025-06-27 09:52:55,809: None
[DEBUG]2025-06-27 09:52:55,809: None
[DEBUG]2025-06-27 09:52:55,809: None
[DEBUG]2025-06-27 09:52:55,809: None
[DEBUG]2025-06-27 09:52:55,809: None
[DEBUG]2025-06-27 09:52:55,809: None
[DEBUG]2025-06-27 09:52:55,809: None
[DEBUG]2025-06-27 09:52:55,809: None
[DEBUG]2025-06-27 09:52:55,809: None
[DEBUG]2025-06-27 09:52:55,836: None
[DEBUG]2025-06-27 09:52:55,836: None
[DEBUG]2025-06-27 09:52:55,836: None
[DEBUG]2025-06-27 09:52:55,836: None
[DEBUG]2025-06-27 09:52:55,836: None
[DEBUG]2025-06-27 09:52:55,836: None
[DEBUG]2025-06-27 09:52:55,836: None
[DEBUG]2025-06-27 09:52:55,836: None
[DEBUG]2025-06-27 09:52:55,836: None
[DEBUG]2025-06-27 09:52:55,836: None
[DEBUG]2025-06-27 09:52:55,836: None
[DEBUG]2025-06-27 09:52:55,836: None
[DEBUG]2025-06-27 09:52:55,836: None
[DEBUG]2025-06-27 09:52:55,836: None
[DEBUG]2025-06-27 09:52:55,869: None
[DEBUG]2025-06-27 09:52:55,869: None
[DEBUG]2025-06-27 09:52:55,869: None
[DEBUG]2025-06-27 09:52:55,869: None
[DEBUG]2025-06-27 09:52:55,869: None
[DEBUG]2025-06-27 09:52:55,869: None
[DEBUG]2025-06-27 09:52:55,869: None
[DEBUG]2025-06-27 09:52:55,869: None
[DEBUG]2025-06-27 09:52:55,869: None
[DEBUG]2025-06-27 09:52:55,869: None
[DEBUG]2025-06-27 09:52:55,869: None
[DEBUG]2025-06-27 09:52:55,869: None
[DEBUG]2025-06-27 09:52:55,869: None
[DEBUG]2025-06-27 09:52:55,869: None
[DEBUG]2025-06-27 09:52:55,869: None
[DEBUG]2025-06-27 09:52:55,899: None
[DEBUG]2025-06-27 09:52:55,899: None
[DEBUG]2025-06-27 09:52:55,899: None
[DEBUG]2025-06-27 09:52:55,899: None
[DEBUG]2025-06-27 09:52:55,899: None
[DEBUG]2025-06-27 09:52:55,899: None
[DEBUG]2025-06-27 09:52:55,899: None
[DEBUG]2025-06-27 09:52:55,899: None
[DEBUG]2025-06-27 09:52:55,899: None
[DEBUG]2025-06-27 09:52:55,899: None
[DEBUG]2025-06-27 09:52:55,899: None
[DEBUG]2025-06-27 09:52:55,899: None
[DEBUG]2025-06-27 09:52:55,899: None
[DEBUG]2025-06-27 09:52:55,899: None
[DEBUG]2025-06-27 09:52:55,899: None
[DEBUG]2025-06-27 09:52:55,899: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,932: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,967: None
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,997: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:55,998: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,030: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,059: None
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,084: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,085: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,116: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,117: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:52:56,118: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,014: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 09:53:18,015: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 09:53:18,015: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 09:53:18,020: None
[DEBUG]2025-06-27 09:53:18,020: None
[DEBUG]2025-06-27 09:53:18,021: None
[DEBUG]2025-06-27 09:53:18,021: None
[DEBUG]2025-06-27 09:53:18,021: None
[DEBUG]2025-06-27 09:53:18,023: None
[DEBUG]2025-06-27 09:53:18,023: None
[DEBUG]2025-06-27 09:53:18,023: None
[DEBUG]2025-06-27 09:53:18,023: None
[DEBUG]2025-06-27 09:53:18,024: None
[DEBUG]2025-06-27 09:53:18,024: None
[DEBUG]2025-06-27 09:53:18,024: None
[DEBUG]2025-06-27 09:53:18,024: None
[DEBUG]2025-06-27 09:53:18,024: None
[DEBUG]2025-06-27 09:53:18,026: None
[DEBUG]2025-06-27 09:53:18,026: None
[DEBUG]2025-06-27 09:53:18,026: None
[DEBUG]2025-06-27 09:53:18,026: None
[DEBUG]2025-06-27 09:53:18,026: None
[DEBUG]2025-06-27 09:53:18,026: None
[DEBUG]2025-06-27 09:53:18,027: None
[DEBUG]2025-06-27 09:53:18,027: None
[DEBUG]2025-06-27 09:53:18,027: None
[DEBUG]2025-06-27 09:53:18,027: None
[DEBUG]2025-06-27 09:53:18,027: None
[DEBUG]2025-06-27 09:53:18,027: None
[DEBUG]2025-06-27 09:53:18,027: None
[DEBUG]2025-06-27 09:53:18,028: None
[DEBUG]2025-06-27 09:53:18,028: None
[DEBUG]2025-06-27 09:53:18,028: None
[DEBUG]2025-06-27 09:53:18,028: None
[DEBUG]2025-06-27 09:53:18,028: None
[DEBUG]2025-06-27 09:53:18,028: None
[DEBUG]2025-06-27 09:53:18,028: None
[DEBUG]2025-06-27 09:53:18,028: None
[DEBUG]2025-06-27 09:53:18,030: None
[DEBUG]2025-06-27 09:53:18,030: None
[DEBUG]2025-06-27 09:53:18,030: None
[DEBUG]2025-06-27 09:53:18,030: None
[DEBUG]2025-06-27 09:53:18,030: None
[DEBUG]2025-06-27 09:53:18,030: None
[DEBUG]2025-06-27 09:53:18,030: None
[DEBUG]2025-06-27 09:53:18,030: None
[DEBUG]2025-06-27 09:53:18,030: None
[DEBUG]2025-06-27 09:53:18,032: None
[DEBUG]2025-06-27 09:53:18,032: None
[DEBUG]2025-06-27 09:53:18,032: None
[DEBUG]2025-06-27 09:53:18,032: None
[DEBUG]2025-06-27 09:53:18,032: None
[DEBUG]2025-06-27 09:53:18,032: None
[DEBUG]2025-06-27 09:53:18,032: None
[DEBUG]2025-06-27 09:53:18,032: None
[DEBUG]2025-06-27 09:53:18,032: None
[DEBUG]2025-06-27 09:53:18,032: None
[DEBUG]2025-06-27 09:53:18,034: None
[DEBUG]2025-06-27 09:53:18,034: None
[DEBUG]2025-06-27 09:53:18,034: None
[DEBUG]2025-06-27 09:53:18,034: None
[DEBUG]2025-06-27 09:53:18,034: None
[DEBUG]2025-06-27 09:53:18,034: None
[DEBUG]2025-06-27 09:53:18,034: None
[DEBUG]2025-06-27 09:53:18,034: None
[DEBUG]2025-06-27 09:53:18,034: None
[DEBUG]2025-06-27 09:53:18,034: None
[DEBUG]2025-06-27 09:53:18,034: None
[DEBUG]2025-06-27 09:53:18,036: None
[DEBUG]2025-06-27 09:53:18,036: None
[DEBUG]2025-06-27 09:53:18,036: None
[DEBUG]2025-06-27 09:53:18,036: None
[DEBUG]2025-06-27 09:53:18,036: None
[DEBUG]2025-06-27 09:53:18,036: None
[DEBUG]2025-06-27 09:53:18,036: None
[DEBUG]2025-06-27 09:53:18,036: None
[DEBUG]2025-06-27 09:53:18,036: None
[DEBUG]2025-06-27 09:53:18,036: None
[DEBUG]2025-06-27 09:53:18,036: None
[DEBUG]2025-06-27 09:53:18,036: None
[DEBUG]2025-06-27 09:53:18,038: None
[DEBUG]2025-06-27 09:53:18,038: None
[DEBUG]2025-06-27 09:53:18,038: None
[DEBUG]2025-06-27 09:53:18,038: None
[DEBUG]2025-06-27 09:53:18,038: None
[DEBUG]2025-06-27 09:53:18,038: None
[DEBUG]2025-06-27 09:53:18,038: None
[DEBUG]2025-06-27 09:53:18,038: None
[DEBUG]2025-06-27 09:53:18,038: None
[DEBUG]2025-06-27 09:53:18,038: None
[DEBUG]2025-06-27 09:53:18,038: None
[DEBUG]2025-06-27 09:53:18,038: None
[DEBUG]2025-06-27 09:53:18,038: None
[DEBUG]2025-06-27 09:53:18,040: None
[DEBUG]2025-06-27 09:53:18,040: None
[DEBUG]2025-06-27 09:53:18,040: None
[DEBUG]2025-06-27 09:53:18,040: None
[DEBUG]2025-06-27 09:53:18,040: None
[DEBUG]2025-06-27 09:53:18,040: None
[DEBUG]2025-06-27 09:53:18,040: None
[DEBUG]2025-06-27 09:53:18,040: None
[DEBUG]2025-06-27 09:53:18,040: None
[DEBUG]2025-06-27 09:53:18,040: None
[DEBUG]2025-06-27 09:53:18,040: None
[DEBUG]2025-06-27 09:53:18,040: None
[DEBUG]2025-06-27 09:53:18,040: None
[DEBUG]2025-06-27 09:53:18,040: None
[DEBUG]2025-06-27 09:53:18,042: None
[DEBUG]2025-06-27 09:53:18,042: None
[DEBUG]2025-06-27 09:53:18,042: None
[DEBUG]2025-06-27 09:53:18,042: None
[DEBUG]2025-06-27 09:53:18,042: None
[DEBUG]2025-06-27 09:53:18,042: None
[DEBUG]2025-06-27 09:53:18,042: None
[DEBUG]2025-06-27 09:53:18,042: None
[DEBUG]2025-06-27 09:53:18,042: None
[DEBUG]2025-06-27 09:53:18,042: None
[DEBUG]2025-06-27 09:53:18,042: None
[DEBUG]2025-06-27 09:53:18,042: None
[DEBUG]2025-06-27 09:53:18,042: None
[DEBUG]2025-06-27 09:53:18,042: None
[DEBUG]2025-06-27 09:53:18,042: None
[DEBUG]2025-06-27 09:53:18,044: None
[DEBUG]2025-06-27 09:53:18,044: None
[DEBUG]2025-06-27 09:53:18,044: None
[DEBUG]2025-06-27 09:53:18,044: None
[DEBUG]2025-06-27 09:53:18,044: None
[DEBUG]2025-06-27 09:53:18,044: None
[DEBUG]2025-06-27 09:53:18,044: None
[DEBUG]2025-06-27 09:53:18,044: None
[DEBUG]2025-06-27 09:53:18,044: None
[DEBUG]2025-06-27 09:53:18,044: None
[DEBUG]2025-06-27 09:53:18,044: None
[DEBUG]2025-06-27 09:53:18,044: None
[DEBUG]2025-06-27 09:53:18,044: None
[DEBUG]2025-06-27 09:53:18,044: None
[DEBUG]2025-06-27 09:53:18,044: None
[DEBUG]2025-06-27 09:53:18,044: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,046: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,048: None
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,050: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,051: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,052: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,055: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,057: None
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,059: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,062: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,063: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,066: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,067: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 09:53:18,069: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:12,977: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:00:12,978: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:00:12,978: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:00:12,985: None
[DEBUG]2025-06-27 10:00:12,985: None
[DEBUG]2025-06-27 10:00:12,986: None
[DEBUG]2025-06-27 10:00:12,986: None
[DEBUG]2025-06-27 10:00:12,986: None
[DEBUG]2025-06-27 10:00:12,988: None
[DEBUG]2025-06-27 10:00:12,988: None
[DEBUG]2025-06-27 10:00:12,988: None
[DEBUG]2025-06-27 10:00:12,988: None
[DEBUG]2025-06-27 10:00:12,990: None
[DEBUG]2025-06-27 10:00:12,990: None
[DEBUG]2025-06-27 10:00:12,990: None
[DEBUG]2025-06-27 10:00:12,990: None
[DEBUG]2025-06-27 10:00:12,990: None
[DEBUG]2025-06-27 10:00:12,991: None
[DEBUG]2025-06-27 10:00:12,991: None
[DEBUG]2025-06-27 10:00:12,991: None
[DEBUG]2025-06-27 10:00:12,991: None
[DEBUG]2025-06-27 10:00:12,991: None
[DEBUG]2025-06-27 10:00:12,991: None
[DEBUG]2025-06-27 10:00:12,993: None
[DEBUG]2025-06-27 10:00:12,993: None
[DEBUG]2025-06-27 10:00:12,993: None
[DEBUG]2025-06-27 10:00:12,993: None
[DEBUG]2025-06-27 10:00:12,993: None
[DEBUG]2025-06-27 10:00:12,993: None
[DEBUG]2025-06-27 10:00:12,993: None
[DEBUG]2025-06-27 10:00:12,994: None
[DEBUG]2025-06-27 10:00:12,994: None
[DEBUG]2025-06-27 10:00:12,994: None
[DEBUG]2025-06-27 10:00:12,994: None
[DEBUG]2025-06-27 10:00:12,994: None
[DEBUG]2025-06-27 10:00:12,994: None
[DEBUG]2025-06-27 10:00:12,994: None
[DEBUG]2025-06-27 10:00:12,994: None
[DEBUG]2025-06-27 10:00:12,996: None
[DEBUG]2025-06-27 10:00:12,996: None
[DEBUG]2025-06-27 10:00:12,996: None
[DEBUG]2025-06-27 10:00:12,996: None
[DEBUG]2025-06-27 10:00:12,996: None
[DEBUG]2025-06-27 10:00:12,996: None
[DEBUG]2025-06-27 10:00:12,996: None
[DEBUG]2025-06-27 10:00:12,996: None
[DEBUG]2025-06-27 10:00:12,996: None
[DEBUG]2025-06-27 10:00:12,998: None
[DEBUG]2025-06-27 10:00:12,998: None
[DEBUG]2025-06-27 10:00:12,998: None
[DEBUG]2025-06-27 10:00:12,998: None
[DEBUG]2025-06-27 10:00:12,998: None
[DEBUG]2025-06-27 10:00:12,998: None
[DEBUG]2025-06-27 10:00:12,998: None
[DEBUG]2025-06-27 10:00:12,998: None
[DEBUG]2025-06-27 10:00:12,998: None
[DEBUG]2025-06-27 10:00:12,998: None
[DEBUG]2025-06-27 10:00:13,000: None
[DEBUG]2025-06-27 10:00:13,000: None
[DEBUG]2025-06-27 10:00:13,000: None
[DEBUG]2025-06-27 10:00:13,000: None
[DEBUG]2025-06-27 10:00:13,000: None
[DEBUG]2025-06-27 10:00:13,000: None
[DEBUG]2025-06-27 10:00:13,000: None
[DEBUG]2025-06-27 10:00:13,000: None
[DEBUG]2025-06-27 10:00:13,000: None
[DEBUG]2025-06-27 10:00:13,000: None
[DEBUG]2025-06-27 10:00:13,000: None
[DEBUG]2025-06-27 10:00:13,002: None
[DEBUG]2025-06-27 10:00:13,002: None
[DEBUG]2025-06-27 10:00:13,002: None
[DEBUG]2025-06-27 10:00:13,002: None
[DEBUG]2025-06-27 10:00:13,002: None
[DEBUG]2025-06-27 10:00:13,002: None
[DEBUG]2025-06-27 10:00:13,002: None
[DEBUG]2025-06-27 10:00:13,002: None
[DEBUG]2025-06-27 10:00:13,002: None
[DEBUG]2025-06-27 10:00:13,002: None
[DEBUG]2025-06-27 10:00:13,002: None
[DEBUG]2025-06-27 10:00:13,002: None
[DEBUG]2025-06-27 10:00:13,004: None
[DEBUG]2025-06-27 10:00:13,004: None
[DEBUG]2025-06-27 10:00:13,004: None
[DEBUG]2025-06-27 10:00:13,004: None
[DEBUG]2025-06-27 10:00:13,004: None
[DEBUG]2025-06-27 10:00:13,004: None
[DEBUG]2025-06-27 10:00:13,004: None
[DEBUG]2025-06-27 10:00:13,004: None
[DEBUG]2025-06-27 10:00:13,004: None
[DEBUG]2025-06-27 10:00:13,004: None
[DEBUG]2025-06-27 10:00:13,004: None
[DEBUG]2025-06-27 10:00:13,004: None
[DEBUG]2025-06-27 10:00:13,004: None
[DEBUG]2025-06-27 10:00:13,006: None
[DEBUG]2025-06-27 10:00:13,006: None
[DEBUG]2025-06-27 10:00:13,006: None
[DEBUG]2025-06-27 10:00:13,006: None
[DEBUG]2025-06-27 10:00:13,006: None
[DEBUG]2025-06-27 10:00:13,006: None
[DEBUG]2025-06-27 10:00:13,006: None
[DEBUG]2025-06-27 10:00:13,006: None
[DEBUG]2025-06-27 10:00:13,006: None
[DEBUG]2025-06-27 10:00:13,006: None
[DEBUG]2025-06-27 10:00:13,006: None
[DEBUG]2025-06-27 10:00:13,006: None
[DEBUG]2025-06-27 10:00:13,006: None
[DEBUG]2025-06-27 10:00:13,006: None
[DEBUG]2025-06-27 10:00:13,007: None
[DEBUG]2025-06-27 10:00:13,007: None
[DEBUG]2025-06-27 10:00:13,007: None
[DEBUG]2025-06-27 10:00:13,007: None
[DEBUG]2025-06-27 10:00:13,007: None
[DEBUG]2025-06-27 10:00:13,007: None
[DEBUG]2025-06-27 10:00:13,007: None
[DEBUG]2025-06-27 10:00:13,007: None
[DEBUG]2025-06-27 10:00:13,007: None
[DEBUG]2025-06-27 10:00:13,007: None
[DEBUG]2025-06-27 10:00:13,007: None
[DEBUG]2025-06-27 10:00:13,007: None
[DEBUG]2025-06-27 10:00:13,007: None
[DEBUG]2025-06-27 10:00:13,007: None
[DEBUG]2025-06-27 10:00:13,007: None
[DEBUG]2025-06-27 10:00:13,009: None
[DEBUG]2025-06-27 10:00:13,009: None
[DEBUG]2025-06-27 10:00:13,009: None
[DEBUG]2025-06-27 10:00:13,009: None
[DEBUG]2025-06-27 10:00:13,009: None
[DEBUG]2025-06-27 10:00:13,009: None
[DEBUG]2025-06-27 10:00:13,009: None
[DEBUG]2025-06-27 10:00:13,009: None
[DEBUG]2025-06-27 10:00:13,009: None
[DEBUG]2025-06-27 10:00:13,009: None
[DEBUG]2025-06-27 10:00:13,009: None
[DEBUG]2025-06-27 10:00:13,009: None
[DEBUG]2025-06-27 10:00:13,009: None
[DEBUG]2025-06-27 10:00:13,009: None
[DEBUG]2025-06-27 10:00:13,009: None
[DEBUG]2025-06-27 10:00:13,009: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,011: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,013: None
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,016: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,017: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,018: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,021: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,023: None
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,026: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,027: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,028: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,031: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,033: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:00:13,034: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,045: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:04:26,046: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:04:26,046: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:04:26,052: None
[DEBUG]2025-06-27 10:04:26,052: None
[DEBUG]2025-06-27 10:04:26,053: None
[DEBUG]2025-06-27 10:04:26,053: None
[DEBUG]2025-06-27 10:04:26,053: None
[DEBUG]2025-06-27 10:04:26,055: None
[DEBUG]2025-06-27 10:04:26,055: None
[DEBUG]2025-06-27 10:04:26,055: None
[DEBUG]2025-06-27 10:04:26,055: None
[DEBUG]2025-06-27 10:04:26,056: None
[DEBUG]2025-06-27 10:04:26,056: None
[DEBUG]2025-06-27 10:04:26,056: None
[DEBUG]2025-06-27 10:04:26,056: None
[DEBUG]2025-06-27 10:04:26,056: None
[DEBUG]2025-06-27 10:04:26,058: None
[DEBUG]2025-06-27 10:04:26,058: None
[DEBUG]2025-06-27 10:04:26,058: None
[DEBUG]2025-06-27 10:04:26,058: None
[DEBUG]2025-06-27 10:04:26,058: None
[DEBUG]2025-06-27 10:04:26,058: None
[DEBUG]2025-06-27 10:04:26,059: None
[DEBUG]2025-06-27 10:04:26,059: None
[DEBUG]2025-06-27 10:04:26,059: None
[DEBUG]2025-06-27 10:04:26,059: None
[DEBUG]2025-06-27 10:04:26,059: None
[DEBUG]2025-06-27 10:04:26,059: None
[DEBUG]2025-06-27 10:04:26,059: None
[DEBUG]2025-06-27 10:04:26,061: None
[DEBUG]2025-06-27 10:04:26,061: None
[DEBUG]2025-06-27 10:04:26,061: None
[DEBUG]2025-06-27 10:04:26,061: None
[DEBUG]2025-06-27 10:04:26,061: None
[DEBUG]2025-06-27 10:04:26,061: None
[DEBUG]2025-06-27 10:04:26,061: None
[DEBUG]2025-06-27 10:04:26,061: None
[DEBUG]2025-06-27 10:04:26,062: None
[DEBUG]2025-06-27 10:04:26,062: None
[DEBUG]2025-06-27 10:04:26,062: None
[DEBUG]2025-06-27 10:04:26,062: None
[DEBUG]2025-06-27 10:04:26,062: None
[DEBUG]2025-06-27 10:04:26,062: None
[DEBUG]2025-06-27 10:04:26,062: None
[DEBUG]2025-06-27 10:04:26,062: None
[DEBUG]2025-06-27 10:04:26,062: None
[DEBUG]2025-06-27 10:04:26,064: None
[DEBUG]2025-06-27 10:04:26,064: None
[DEBUG]2025-06-27 10:04:26,064: None
[DEBUG]2025-06-27 10:04:26,064: None
[DEBUG]2025-06-27 10:04:26,064: None
[DEBUG]2025-06-27 10:04:26,064: None
[DEBUG]2025-06-27 10:04:26,064: None
[DEBUG]2025-06-27 10:04:26,064: None
[DEBUG]2025-06-27 10:04:26,064: None
[DEBUG]2025-06-27 10:04:26,064: None
[DEBUG]2025-06-27 10:04:26,066: None
[DEBUG]2025-06-27 10:04:26,066: None
[DEBUG]2025-06-27 10:04:26,066: None
[DEBUG]2025-06-27 10:04:26,066: None
[DEBUG]2025-06-27 10:04:26,066: None
[DEBUG]2025-06-27 10:04:26,066: None
[DEBUG]2025-06-27 10:04:26,066: None
[DEBUG]2025-06-27 10:04:26,066: None
[DEBUG]2025-06-27 10:04:26,066: None
[DEBUG]2025-06-27 10:04:26,066: None
[DEBUG]2025-06-27 10:04:26,066: None
[DEBUG]2025-06-27 10:04:26,067: None
[DEBUG]2025-06-27 10:04:26,067: None
[DEBUG]2025-06-27 10:04:26,067: None
[DEBUG]2025-06-27 10:04:26,067: None
[DEBUG]2025-06-27 10:04:26,067: None
[DEBUG]2025-06-27 10:04:26,067: None
[DEBUG]2025-06-27 10:04:26,067: None
[DEBUG]2025-06-27 10:04:26,067: None
[DEBUG]2025-06-27 10:04:26,067: None
[DEBUG]2025-06-27 10:04:26,067: None
[DEBUG]2025-06-27 10:04:26,067: None
[DEBUG]2025-06-27 10:04:26,067: None
[DEBUG]2025-06-27 10:04:26,070: None
[DEBUG]2025-06-27 10:04:26,070: None
[DEBUG]2025-06-27 10:04:26,070: None
[DEBUG]2025-06-27 10:04:26,070: None
[DEBUG]2025-06-27 10:04:26,070: None
[DEBUG]2025-06-27 10:04:26,070: None
[DEBUG]2025-06-27 10:04:26,070: None
[DEBUG]2025-06-27 10:04:26,070: None
[DEBUG]2025-06-27 10:04:26,070: None
[DEBUG]2025-06-27 10:04:26,070: None
[DEBUG]2025-06-27 10:04:26,070: None
[DEBUG]2025-06-27 10:04:26,070: None
[DEBUG]2025-06-27 10:04:26,070: None
[DEBUG]2025-06-27 10:04:26,072: None
[DEBUG]2025-06-27 10:04:26,072: None
[DEBUG]2025-06-27 10:04:26,072: None
[DEBUG]2025-06-27 10:04:26,072: None
[DEBUG]2025-06-27 10:04:26,072: None
[DEBUG]2025-06-27 10:04:26,072: None
[DEBUG]2025-06-27 10:04:26,072: None
[DEBUG]2025-06-27 10:04:26,072: None
[DEBUG]2025-06-27 10:04:26,072: None
[DEBUG]2025-06-27 10:04:26,072: None
[DEBUG]2025-06-27 10:04:26,072: None
[DEBUG]2025-06-27 10:04:26,072: None
[DEBUG]2025-06-27 10:04:26,072: None
[DEBUG]2025-06-27 10:04:26,072: None
[DEBUG]2025-06-27 10:04:26,073: None
[DEBUG]2025-06-27 10:04:26,073: None
[DEBUG]2025-06-27 10:04:26,073: None
[DEBUG]2025-06-27 10:04:26,073: None
[DEBUG]2025-06-27 10:04:26,073: None
[DEBUG]2025-06-27 10:04:26,073: None
[DEBUG]2025-06-27 10:04:26,073: None
[DEBUG]2025-06-27 10:04:26,073: None
[DEBUG]2025-06-27 10:04:26,073: None
[DEBUG]2025-06-27 10:04:26,073: None
[DEBUG]2025-06-27 10:04:26,073: None
[DEBUG]2025-06-27 10:04:26,073: None
[DEBUG]2025-06-27 10:04:26,073: None
[DEBUG]2025-06-27 10:04:26,073: None
[DEBUG]2025-06-27 10:04:26,073: None
[DEBUG]2025-06-27 10:04:26,075: None
[DEBUG]2025-06-27 10:04:26,075: None
[DEBUG]2025-06-27 10:04:26,075: None
[DEBUG]2025-06-27 10:04:26,075: None
[DEBUG]2025-06-27 10:04:26,075: None
[DEBUG]2025-06-27 10:04:26,075: None
[DEBUG]2025-06-27 10:04:26,075: None
[DEBUG]2025-06-27 10:04:26,075: None
[DEBUG]2025-06-27 10:04:26,075: None
[DEBUG]2025-06-27 10:04:26,075: None
[DEBUG]2025-06-27 10:04:26,075: None
[DEBUG]2025-06-27 10:04:26,075: None
[DEBUG]2025-06-27 10:04:26,075: None
[DEBUG]2025-06-27 10:04:26,075: None
[DEBUG]2025-06-27 10:04:26,075: None
[DEBUG]2025-06-27 10:04:26,075: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,077: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,079: None
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,081: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,082: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,083: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,085: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,087: None
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,089: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,090: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,091: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,094: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,095: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:04:26,096: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,223: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:09:44,223: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:09:44,224: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:09:44,226: None
[DEBUG]2025-06-27 10:09:44,226: None
[DEBUG]2025-06-27 10:09:44,227: None
[DEBUG]2025-06-27 10:09:44,227: None
[DEBUG]2025-06-27 10:09:44,227: None
[DEBUG]2025-06-27 10:09:44,227: None
[DEBUG]2025-06-27 10:09:44,227: None
[DEBUG]2025-06-27 10:09:44,227: None
[DEBUG]2025-06-27 10:09:44,227: None
[DEBUG]2025-06-27 10:09:44,228: None
[DEBUG]2025-06-27 10:09:44,228: None
[DEBUG]2025-06-27 10:09:44,228: None
[DEBUG]2025-06-27 10:09:44,228: None
[DEBUG]2025-06-27 10:09:44,228: None
[DEBUG]2025-06-27 10:09:44,229: None
[DEBUG]2025-06-27 10:09:44,229: None
[DEBUG]2025-06-27 10:09:44,229: None
[DEBUG]2025-06-27 10:09:44,229: None
[DEBUG]2025-06-27 10:09:44,229: None
[DEBUG]2025-06-27 10:09:44,229: None
[DEBUG]2025-06-27 10:09:44,229: None
[DEBUG]2025-06-27 10:09:44,229: None
[DEBUG]2025-06-27 10:09:44,229: None
[DEBUG]2025-06-27 10:09:44,229: None
[DEBUG]2025-06-27 10:09:44,229: None
[DEBUG]2025-06-27 10:09:44,229: None
[DEBUG]2025-06-27 10:09:44,229: None
[DEBUG]2025-06-27 10:09:44,230: None
[DEBUG]2025-06-27 10:09:44,230: None
[DEBUG]2025-06-27 10:09:44,230: None
[DEBUG]2025-06-27 10:09:44,230: None
[DEBUG]2025-06-27 10:09:44,230: None
[DEBUG]2025-06-27 10:09:44,230: None
[DEBUG]2025-06-27 10:09:44,230: None
[DEBUG]2025-06-27 10:09:44,230: None
[DEBUG]2025-06-27 10:09:44,231: None
[DEBUG]2025-06-27 10:09:44,231: None
[DEBUG]2025-06-27 10:09:44,231: None
[DEBUG]2025-06-27 10:09:44,231: None
[DEBUG]2025-06-27 10:09:44,231: None
[DEBUG]2025-06-27 10:09:44,231: None
[DEBUG]2025-06-27 10:09:44,231: None
[DEBUG]2025-06-27 10:09:44,231: None
[DEBUG]2025-06-27 10:09:44,231: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,232: None
[DEBUG]2025-06-27 10:09:44,233: None
[DEBUG]2025-06-27 10:09:44,233: None
[DEBUG]2025-06-27 10:09:44,233: None
[DEBUG]2025-06-27 10:09:44,233: None
[DEBUG]2025-06-27 10:09:44,233: None
[DEBUG]2025-06-27 10:09:44,233: None
[DEBUG]2025-06-27 10:09:44,233: None
[DEBUG]2025-06-27 10:09:44,233: None
[DEBUG]2025-06-27 10:09:44,233: None
[DEBUG]2025-06-27 10:09:44,233: None
[DEBUG]2025-06-27 10:09:44,233: None
[DEBUG]2025-06-27 10:09:44,233: None
[DEBUG]2025-06-27 10:09:44,234: None
[DEBUG]2025-06-27 10:09:44,234: None
[DEBUG]2025-06-27 10:09:44,234: None
[DEBUG]2025-06-27 10:09:44,234: None
[DEBUG]2025-06-27 10:09:44,234: None
[DEBUG]2025-06-27 10:09:44,234: None
[DEBUG]2025-06-27 10:09:44,234: None
[DEBUG]2025-06-27 10:09:44,234: None
[DEBUG]2025-06-27 10:09:44,234: None
[DEBUG]2025-06-27 10:09:44,234: None
[DEBUG]2025-06-27 10:09:44,234: None
[DEBUG]2025-06-27 10:09:44,234: None
[DEBUG]2025-06-27 10:09:44,234: None
[DEBUG]2025-06-27 10:09:44,235: None
[DEBUG]2025-06-27 10:09:44,235: None
[DEBUG]2025-06-27 10:09:44,235: None
[DEBUG]2025-06-27 10:09:44,235: None
[DEBUG]2025-06-27 10:09:44,235: None
[DEBUG]2025-06-27 10:09:44,235: None
[DEBUG]2025-06-27 10:09:44,235: None
[DEBUG]2025-06-27 10:09:44,235: None
[DEBUG]2025-06-27 10:09:44,235: None
[DEBUG]2025-06-27 10:09:44,235: None
[DEBUG]2025-06-27 10:09:44,235: None
[DEBUG]2025-06-27 10:09:44,235: None
[DEBUG]2025-06-27 10:09:44,235: None
[DEBUG]2025-06-27 10:09:44,235: None
[DEBUG]2025-06-27 10:09:44,236: None
[DEBUG]2025-06-27 10:09:44,236: None
[DEBUG]2025-06-27 10:09:44,236: None
[DEBUG]2025-06-27 10:09:44,236: None
[DEBUG]2025-06-27 10:09:44,236: None
[DEBUG]2025-06-27 10:09:44,236: None
[DEBUG]2025-06-27 10:09:44,236: None
[DEBUG]2025-06-27 10:09:44,236: None
[DEBUG]2025-06-27 10:09:44,236: None
[DEBUG]2025-06-27 10:09:44,236: None
[DEBUG]2025-06-27 10:09:44,236: None
[DEBUG]2025-06-27 10:09:44,236: None
[DEBUG]2025-06-27 10:09:44,236: None
[DEBUG]2025-06-27 10:09:44,236: None
[DEBUG]2025-06-27 10:09:44,236: None
[DEBUG]2025-06-27 10:09:44,237: None
[DEBUG]2025-06-27 10:09:44,237: None
[DEBUG]2025-06-27 10:09:44,237: None
[DEBUG]2025-06-27 10:09:44,237: None
[DEBUG]2025-06-27 10:09:44,237: None
[DEBUG]2025-06-27 10:09:44,237: None
[DEBUG]2025-06-27 10:09:44,237: None
[DEBUG]2025-06-27 10:09:44,237: None
[DEBUG]2025-06-27 10:09:44,237: None
[DEBUG]2025-06-27 10:09:44,237: None
[DEBUG]2025-06-27 10:09:44,237: None
[DEBUG]2025-06-27 10:09:44,237: None
[DEBUG]2025-06-27 10:09:44,237: None
[DEBUG]2025-06-27 10:09:44,237: None
[DEBUG]2025-06-27 10:09:44,237: None
[DEBUG]2025-06-27 10:09:44,237: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,238: None
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,239: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,241: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,242: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,243: None
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,244: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,247: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:09:44,248: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,211: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:12:20,247: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:12:20,247: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:12:20,253: None
[DEBUG]2025-06-27 10:12:20,253: None
[DEBUG]2025-06-27 10:12:20,255: None
[DEBUG]2025-06-27 10:12:20,255: None
[DEBUG]2025-06-27 10:12:20,255: None
[DEBUG]2025-06-27 10:12:20,256: None
[DEBUG]2025-06-27 10:12:20,256: None
[DEBUG]2025-06-27 10:12:20,256: None
[DEBUG]2025-06-27 10:12:20,256: None
[DEBUG]2025-06-27 10:12:20,258: None
[DEBUG]2025-06-27 10:12:20,258: None
[DEBUG]2025-06-27 10:12:20,258: None
[DEBUG]2025-06-27 10:12:20,258: None
[DEBUG]2025-06-27 10:12:20,258: None
[DEBUG]2025-06-27 10:12:20,259: None
[DEBUG]2025-06-27 10:12:20,259: None
[DEBUG]2025-06-27 10:12:20,259: None
[DEBUG]2025-06-27 10:12:20,259: None
[DEBUG]2025-06-27 10:12:20,259: None
[DEBUG]2025-06-27 10:12:20,259: None
[DEBUG]2025-06-27 10:12:20,261: None
[DEBUG]2025-06-27 10:12:20,261: None
[DEBUG]2025-06-27 10:12:20,261: None
[DEBUG]2025-06-27 10:12:20,261: None
[DEBUG]2025-06-27 10:12:20,261: None
[DEBUG]2025-06-27 10:12:20,261: None
[DEBUG]2025-06-27 10:12:20,261: None
[DEBUG]2025-06-27 10:12:20,263: None
[DEBUG]2025-06-27 10:12:20,263: None
[DEBUG]2025-06-27 10:12:20,263: None
[DEBUG]2025-06-27 10:12:20,263: None
[DEBUG]2025-06-27 10:12:20,263: None
[DEBUG]2025-06-27 10:12:20,263: None
[DEBUG]2025-06-27 10:12:20,263: None
[DEBUG]2025-06-27 10:12:20,263: None
[DEBUG]2025-06-27 10:12:20,264: None
[DEBUG]2025-06-27 10:12:20,264: None
[DEBUG]2025-06-27 10:12:20,264: None
[DEBUG]2025-06-27 10:12:20,264: None
[DEBUG]2025-06-27 10:12:20,264: None
[DEBUG]2025-06-27 10:12:20,264: None
[DEBUG]2025-06-27 10:12:20,264: None
[DEBUG]2025-06-27 10:12:20,264: None
[DEBUG]2025-06-27 10:12:20,264: None
[DEBUG]2025-06-27 10:12:20,266: None
[DEBUG]2025-06-27 10:12:20,266: None
[DEBUG]2025-06-27 10:12:20,266: None
[DEBUG]2025-06-27 10:12:20,266: None
[DEBUG]2025-06-27 10:12:20,266: None
[DEBUG]2025-06-27 10:12:20,266: None
[DEBUG]2025-06-27 10:12:20,266: None
[DEBUG]2025-06-27 10:12:20,266: None
[DEBUG]2025-06-27 10:12:20,266: None
[DEBUG]2025-06-27 10:12:20,266: None
[DEBUG]2025-06-27 10:12:20,268: None
[DEBUG]2025-06-27 10:12:20,268: None
[DEBUG]2025-06-27 10:12:20,268: None
[DEBUG]2025-06-27 10:12:20,268: None
[DEBUG]2025-06-27 10:12:20,268: None
[DEBUG]2025-06-27 10:12:20,268: None
[DEBUG]2025-06-27 10:12:20,268: None
[DEBUG]2025-06-27 10:12:20,268: None
[DEBUG]2025-06-27 10:12:20,268: None
[DEBUG]2025-06-27 10:12:20,268: None
[DEBUG]2025-06-27 10:12:20,268: None
[DEBUG]2025-06-27 10:12:20,270: None
[DEBUG]2025-06-27 10:12:20,270: None
[DEBUG]2025-06-27 10:12:20,270: None
[DEBUG]2025-06-27 10:12:20,270: None
[DEBUG]2025-06-27 10:12:20,270: None
[DEBUG]2025-06-27 10:12:20,270: None
[DEBUG]2025-06-27 10:12:20,270: None
[DEBUG]2025-06-27 10:12:20,270: None
[DEBUG]2025-06-27 10:12:20,270: None
[DEBUG]2025-06-27 10:12:20,270: None
[DEBUG]2025-06-27 10:12:20,270: None
[DEBUG]2025-06-27 10:12:20,270: None
[DEBUG]2025-06-27 10:12:20,272: None
[DEBUG]2025-06-27 10:12:20,272: None
[DEBUG]2025-06-27 10:12:20,272: None
[DEBUG]2025-06-27 10:12:20,272: None
[DEBUG]2025-06-27 10:12:20,272: None
[DEBUG]2025-06-27 10:12:20,272: None
[DEBUG]2025-06-27 10:12:20,272: None
[DEBUG]2025-06-27 10:12:20,272: None
[DEBUG]2025-06-27 10:12:20,272: None
[DEBUG]2025-06-27 10:12:20,272: None
[DEBUG]2025-06-27 10:12:20,272: None
[DEBUG]2025-06-27 10:12:20,272: None
[DEBUG]2025-06-27 10:12:20,272: None
[DEBUG]2025-06-27 10:12:20,274: None
[DEBUG]2025-06-27 10:12:20,274: None
[DEBUG]2025-06-27 10:12:20,274: None
[DEBUG]2025-06-27 10:12:20,274: None
[DEBUG]2025-06-27 10:12:20,274: None
[DEBUG]2025-06-27 10:12:20,274: None
[DEBUG]2025-06-27 10:12:20,274: None
[DEBUG]2025-06-27 10:12:20,274: None
[DEBUG]2025-06-27 10:12:20,274: None
[DEBUG]2025-06-27 10:12:20,274: None
[DEBUG]2025-06-27 10:12:20,274: None
[DEBUG]2025-06-27 10:12:20,274: None
[DEBUG]2025-06-27 10:12:20,274: None
[DEBUG]2025-06-27 10:12:20,274: None
[DEBUG]2025-06-27 10:12:20,277: None
[DEBUG]2025-06-27 10:12:20,277: None
[DEBUG]2025-06-27 10:12:20,277: None
[DEBUG]2025-06-27 10:12:20,277: None
[DEBUG]2025-06-27 10:12:20,277: None
[DEBUG]2025-06-27 10:12:20,277: None
[DEBUG]2025-06-27 10:12:20,277: None
[DEBUG]2025-06-27 10:12:20,277: None
[DEBUG]2025-06-27 10:12:20,277: None
[DEBUG]2025-06-27 10:12:20,277: None
[DEBUG]2025-06-27 10:12:20,277: None
[DEBUG]2025-06-27 10:12:20,277: None
[DEBUG]2025-06-27 10:12:20,277: None
[DEBUG]2025-06-27 10:12:20,277: None
[DEBUG]2025-06-27 10:12:20,277: None
[DEBUG]2025-06-27 10:12:20,279: None
[DEBUG]2025-06-27 10:12:20,279: None
[DEBUG]2025-06-27 10:12:20,279: None
[DEBUG]2025-06-27 10:12:20,279: None
[DEBUG]2025-06-27 10:12:20,279: None
[DEBUG]2025-06-27 10:12:20,279: None
[DEBUG]2025-06-27 10:12:20,279: None
[DEBUG]2025-06-27 10:12:20,279: None
[DEBUG]2025-06-27 10:12:20,279: None
[DEBUG]2025-06-27 10:12:20,279: None
[DEBUG]2025-06-27 10:12:20,279: None
[DEBUG]2025-06-27 10:12:20,279: None
[DEBUG]2025-06-27 10:12:20,279: None
[DEBUG]2025-06-27 10:12:20,279: None
[DEBUG]2025-06-27 10:12:20,279: None
[DEBUG]2025-06-27 10:12:20,279: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,281: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,283: None
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,286: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,287: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,288: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,291: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,294: None
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,296: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,297: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,298: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,301: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,302: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:12:20,303: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,333: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:14:05,334: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:14:05,334: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:14:05,336: None
[DEBUG]2025-06-27 10:14:05,336: None
[DEBUG]2025-06-27 10:14:05,336: None
[DEBUG]2025-06-27 10:14:05,336: None
[DEBUG]2025-06-27 10:14:05,336: None
[DEBUG]2025-06-27 10:14:05,337: None
[DEBUG]2025-06-27 10:14:05,337: None
[DEBUG]2025-06-27 10:14:05,337: None
[DEBUG]2025-06-27 10:14:05,337: None
[DEBUG]2025-06-27 10:14:05,337: None
[DEBUG]2025-06-27 10:14:05,337: None
[DEBUG]2025-06-27 10:14:05,337: None
[DEBUG]2025-06-27 10:14:05,337: None
[DEBUG]2025-06-27 10:14:05,337: None
[DEBUG]2025-06-27 10:14:05,338: None
[DEBUG]2025-06-27 10:14:05,338: None
[DEBUG]2025-06-27 10:14:05,338: None
[DEBUG]2025-06-27 10:14:05,338: None
[DEBUG]2025-06-27 10:14:05,338: None
[DEBUG]2025-06-27 10:14:05,338: None
[DEBUG]2025-06-27 10:14:05,338: None
[DEBUG]2025-06-27 10:14:05,338: None
[DEBUG]2025-06-27 10:14:05,338: None
[DEBUG]2025-06-27 10:14:05,338: None
[DEBUG]2025-06-27 10:14:05,338: None
[DEBUG]2025-06-27 10:14:05,338: None
[DEBUG]2025-06-27 10:14:05,338: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,339: None
[DEBUG]2025-06-27 10:14:05,340: None
[DEBUG]2025-06-27 10:14:05,340: None
[DEBUG]2025-06-27 10:14:05,340: None
[DEBUG]2025-06-27 10:14:05,340: None
[DEBUG]2025-06-27 10:14:05,340: None
[DEBUG]2025-06-27 10:14:05,340: None
[DEBUG]2025-06-27 10:14:05,340: None
[DEBUG]2025-06-27 10:14:05,340: None
[DEBUG]2025-06-27 10:14:05,340: None
[DEBUG]2025-06-27 10:14:05,340: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,341: None
[DEBUG]2025-06-27 10:14:05,342: None
[DEBUG]2025-06-27 10:14:05,342: None
[DEBUG]2025-06-27 10:14:05,342: None
[DEBUG]2025-06-27 10:14:05,342: None
[DEBUG]2025-06-27 10:14:05,342: None
[DEBUG]2025-06-27 10:14:05,342: None
[DEBUG]2025-06-27 10:14:05,342: None
[DEBUG]2025-06-27 10:14:05,342: None
[DEBUG]2025-06-27 10:14:05,342: None
[DEBUG]2025-06-27 10:14:05,342: None
[DEBUG]2025-06-27 10:14:05,342: None
[DEBUG]2025-06-27 10:14:05,342: None
[DEBUG]2025-06-27 10:14:05,342: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,343: None
[DEBUG]2025-06-27 10:14:05,344: None
[DEBUG]2025-06-27 10:14:05,344: None
[DEBUG]2025-06-27 10:14:05,344: None
[DEBUG]2025-06-27 10:14:05,344: None
[DEBUG]2025-06-27 10:14:05,344: None
[DEBUG]2025-06-27 10:14:05,344: None
[DEBUG]2025-06-27 10:14:05,344: None
[DEBUG]2025-06-27 10:14:05,344: None
[DEBUG]2025-06-27 10:14:05,344: None
[DEBUG]2025-06-27 10:14:05,344: None
[DEBUG]2025-06-27 10:14:05,344: None
[DEBUG]2025-06-27 10:14:05,344: None
[DEBUG]2025-06-27 10:14:05,344: None
[DEBUG]2025-06-27 10:14:05,344: None
[DEBUG]2025-06-27 10:14:05,344: None
[DEBUG]2025-06-27 10:14:05,344: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,345: None
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,346: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,347: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,349: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,350: None
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,352: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,354: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,355: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:14:05,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,052: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:16:03,053: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:16:03,053: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:16:03,058: None
[DEBUG]2025-06-27 10:16:03,058: None
[DEBUG]2025-06-27 10:16:03,060: None
[DEBUG]2025-06-27 10:16:03,060: None
[DEBUG]2025-06-27 10:16:03,060: None
[DEBUG]2025-06-27 10:16:03,061: None
[DEBUG]2025-06-27 10:16:03,061: None
[DEBUG]2025-06-27 10:16:03,061: None
[DEBUG]2025-06-27 10:16:03,061: None
[DEBUG]2025-06-27 10:16:03,062: None
[DEBUG]2025-06-27 10:16:03,062: None
[DEBUG]2025-06-27 10:16:03,062: None
[DEBUG]2025-06-27 10:16:03,062: None
[DEBUG]2025-06-27 10:16:03,062: None
[DEBUG]2025-06-27 10:16:03,063: None
[DEBUG]2025-06-27 10:16:03,063: None
[DEBUG]2025-06-27 10:16:03,063: None
[DEBUG]2025-06-27 10:16:03,063: None
[DEBUG]2025-06-27 10:16:03,063: None
[DEBUG]2025-06-27 10:16:03,063: None
[DEBUG]2025-06-27 10:16:03,065: None
[DEBUG]2025-06-27 10:16:03,065: None
[DEBUG]2025-06-27 10:16:03,065: None
[DEBUG]2025-06-27 10:16:03,065: None
[DEBUG]2025-06-27 10:16:03,065: None
[DEBUG]2025-06-27 10:16:03,065: None
[DEBUG]2025-06-27 10:16:03,065: None
[DEBUG]2025-06-27 10:16:03,066: None
[DEBUG]2025-06-27 10:16:03,066: None
[DEBUG]2025-06-27 10:16:03,066: None
[DEBUG]2025-06-27 10:16:03,066: None
[DEBUG]2025-06-27 10:16:03,066: None
[DEBUG]2025-06-27 10:16:03,066: None
[DEBUG]2025-06-27 10:16:03,066: None
[DEBUG]2025-06-27 10:16:03,066: None
[DEBUG]2025-06-27 10:16:03,068: None
[DEBUG]2025-06-27 10:16:03,068: None
[DEBUG]2025-06-27 10:16:03,068: None
[DEBUG]2025-06-27 10:16:03,068: None
[DEBUG]2025-06-27 10:16:03,068: None
[DEBUG]2025-06-27 10:16:03,068: None
[DEBUG]2025-06-27 10:16:03,068: None
[DEBUG]2025-06-27 10:16:03,068: None
[DEBUG]2025-06-27 10:16:03,068: None
[DEBUG]2025-06-27 10:16:03,069: None
[DEBUG]2025-06-27 10:16:03,069: None
[DEBUG]2025-06-27 10:16:03,069: None
[DEBUG]2025-06-27 10:16:03,069: None
[DEBUG]2025-06-27 10:16:03,069: None
[DEBUG]2025-06-27 10:16:03,069: None
[DEBUG]2025-06-27 10:16:03,069: None
[DEBUG]2025-06-27 10:16:03,069: None
[DEBUG]2025-06-27 10:16:03,069: None
[DEBUG]2025-06-27 10:16:03,069: None
[DEBUG]2025-06-27 10:16:03,071: None
[DEBUG]2025-06-27 10:16:03,071: None
[DEBUG]2025-06-27 10:16:03,071: None
[DEBUG]2025-06-27 10:16:03,071: None
[DEBUG]2025-06-27 10:16:03,071: None
[DEBUG]2025-06-27 10:16:03,071: None
[DEBUG]2025-06-27 10:16:03,071: None
[DEBUG]2025-06-27 10:16:03,071: None
[DEBUG]2025-06-27 10:16:03,071: None
[DEBUG]2025-06-27 10:16:03,071: None
[DEBUG]2025-06-27 10:16:03,071: None
[DEBUG]2025-06-27 10:16:03,072: None
[DEBUG]2025-06-27 10:16:03,072: None
[DEBUG]2025-06-27 10:16:03,072: None
[DEBUG]2025-06-27 10:16:03,072: None
[DEBUG]2025-06-27 10:16:03,072: None
[DEBUG]2025-06-27 10:16:03,072: None
[DEBUG]2025-06-27 10:16:03,072: None
[DEBUG]2025-06-27 10:16:03,072: None
[DEBUG]2025-06-27 10:16:03,072: None
[DEBUG]2025-06-27 10:16:03,072: None
[DEBUG]2025-06-27 10:16:03,072: None
[DEBUG]2025-06-27 10:16:03,072: None
[DEBUG]2025-06-27 10:16:03,075: None
[DEBUG]2025-06-27 10:16:03,075: None
[DEBUG]2025-06-27 10:16:03,075: None
[DEBUG]2025-06-27 10:16:03,075: None
[DEBUG]2025-06-27 10:16:03,075: None
[DEBUG]2025-06-27 10:16:03,075: None
[DEBUG]2025-06-27 10:16:03,075: None
[DEBUG]2025-06-27 10:16:03,075: None
[DEBUG]2025-06-27 10:16:03,075: None
[DEBUG]2025-06-27 10:16:03,075: None
[DEBUG]2025-06-27 10:16:03,075: None
[DEBUG]2025-06-27 10:16:03,075: None
[DEBUG]2025-06-27 10:16:03,075: None
[DEBUG]2025-06-27 10:16:03,076: None
[DEBUG]2025-06-27 10:16:03,076: None
[DEBUG]2025-06-27 10:16:03,076: None
[DEBUG]2025-06-27 10:16:03,076: None
[DEBUG]2025-06-27 10:16:03,076: None
[DEBUG]2025-06-27 10:16:03,076: None
[DEBUG]2025-06-27 10:16:03,076: None
[DEBUG]2025-06-27 10:16:03,076: None
[DEBUG]2025-06-27 10:16:03,076: None
[DEBUG]2025-06-27 10:16:03,076: None
[DEBUG]2025-06-27 10:16:03,076: None
[DEBUG]2025-06-27 10:16:03,076: None
[DEBUG]2025-06-27 10:16:03,076: None
[DEBUG]2025-06-27 10:16:03,076: None
[DEBUG]2025-06-27 10:16:03,078: None
[DEBUG]2025-06-27 10:16:03,078: None
[DEBUG]2025-06-27 10:16:03,078: None
[DEBUG]2025-06-27 10:16:03,078: None
[DEBUG]2025-06-27 10:16:03,078: None
[DEBUG]2025-06-27 10:16:03,078: None
[DEBUG]2025-06-27 10:16:03,078: None
[DEBUG]2025-06-27 10:16:03,078: None
[DEBUG]2025-06-27 10:16:03,078: None
[DEBUG]2025-06-27 10:16:03,078: None
[DEBUG]2025-06-27 10:16:03,078: None
[DEBUG]2025-06-27 10:16:03,078: None
[DEBUG]2025-06-27 10:16:03,078: None
[DEBUG]2025-06-27 10:16:03,078: None
[DEBUG]2025-06-27 10:16:03,078: None
[DEBUG]2025-06-27 10:16:03,079: None
[DEBUG]2025-06-27 10:16:03,079: None
[DEBUG]2025-06-27 10:16:03,079: None
[DEBUG]2025-06-27 10:16:03,079: None
[DEBUG]2025-06-27 10:16:03,079: None
[DEBUG]2025-06-27 10:16:03,079: None
[DEBUG]2025-06-27 10:16:03,079: None
[DEBUG]2025-06-27 10:16:03,079: None
[DEBUG]2025-06-27 10:16:03,079: None
[DEBUG]2025-06-27 10:16:03,079: None
[DEBUG]2025-06-27 10:16:03,079: None
[DEBUG]2025-06-27 10:16:03,079: None
[DEBUG]2025-06-27 10:16:03,079: None
[DEBUG]2025-06-27 10:16:03,079: None
[DEBUG]2025-06-27 10:16:03,079: None
[DEBUG]2025-06-27 10:16:03,079: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,081: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,082: None
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,084: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,085: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,086: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,088: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,090: None
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,092: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,093: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,094: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,096: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,097: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:03,098: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,634: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:16:15,635: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:16:15,635: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:16:15,641: None
[DEBUG]2025-06-27 10:16:15,641: None
[DEBUG]2025-06-27 10:16:15,643: None
[DEBUG]2025-06-27 10:16:15,643: None
[DEBUG]2025-06-27 10:16:15,643: None
[DEBUG]2025-06-27 10:16:15,644: None
[DEBUG]2025-06-27 10:16:15,644: None
[DEBUG]2025-06-27 10:16:15,644: None
[DEBUG]2025-06-27 10:16:15,644: None
[DEBUG]2025-06-27 10:16:15,646: None
[DEBUG]2025-06-27 10:16:15,646: None
[DEBUG]2025-06-27 10:16:15,646: None
[DEBUG]2025-06-27 10:16:15,646: None
[DEBUG]2025-06-27 10:16:15,646: None
[DEBUG]2025-06-27 10:16:15,648: None
[DEBUG]2025-06-27 10:16:15,648: None
[DEBUG]2025-06-27 10:16:15,648: None
[DEBUG]2025-06-27 10:16:15,648: None
[DEBUG]2025-06-27 10:16:15,648: None
[DEBUG]2025-06-27 10:16:15,648: None
[DEBUG]2025-06-27 10:16:15,650: None
[DEBUG]2025-06-27 10:16:15,650: None
[DEBUG]2025-06-27 10:16:15,650: None
[DEBUG]2025-06-27 10:16:15,650: None
[DEBUG]2025-06-27 10:16:15,650: None
[DEBUG]2025-06-27 10:16:15,650: None
[DEBUG]2025-06-27 10:16:15,650: None
[DEBUG]2025-06-27 10:16:15,651: None
[DEBUG]2025-06-27 10:16:15,651: None
[DEBUG]2025-06-27 10:16:15,651: None
[DEBUG]2025-06-27 10:16:15,651: None
[DEBUG]2025-06-27 10:16:15,651: None
[DEBUG]2025-06-27 10:16:15,651: None
[DEBUG]2025-06-27 10:16:15,651: None
[DEBUG]2025-06-27 10:16:15,651: None
[DEBUG]2025-06-27 10:16:15,654: None
[DEBUG]2025-06-27 10:16:15,654: None
[DEBUG]2025-06-27 10:16:15,654: None
[DEBUG]2025-06-27 10:16:15,654: None
[DEBUG]2025-06-27 10:16:15,654: None
[DEBUG]2025-06-27 10:16:15,654: None
[DEBUG]2025-06-27 10:16:15,654: None
[DEBUG]2025-06-27 10:16:15,654: None
[DEBUG]2025-06-27 10:16:15,654: None
[DEBUG]2025-06-27 10:16:15,656: None
[DEBUG]2025-06-27 10:16:15,656: None
[DEBUG]2025-06-27 10:16:15,656: None
[DEBUG]2025-06-27 10:16:15,656: None
[DEBUG]2025-06-27 10:16:15,656: None
[DEBUG]2025-06-27 10:16:15,656: None
[DEBUG]2025-06-27 10:16:15,656: None
[DEBUG]2025-06-27 10:16:15,656: None
[DEBUG]2025-06-27 10:16:15,656: None
[DEBUG]2025-06-27 10:16:15,656: None
[DEBUG]2025-06-27 10:16:15,658: None
[DEBUG]2025-06-27 10:16:15,658: None
[DEBUG]2025-06-27 10:16:15,658: None
[DEBUG]2025-06-27 10:16:15,658: None
[DEBUG]2025-06-27 10:16:15,658: None
[DEBUG]2025-06-27 10:16:15,658: None
[DEBUG]2025-06-27 10:16:15,658: None
[DEBUG]2025-06-27 10:16:15,658: None
[DEBUG]2025-06-27 10:16:15,658: None
[DEBUG]2025-06-27 10:16:15,658: None
[DEBUG]2025-06-27 10:16:15,658: None
[DEBUG]2025-06-27 10:16:15,661: None
[DEBUG]2025-06-27 10:16:15,661: None
[DEBUG]2025-06-27 10:16:15,661: None
[DEBUG]2025-06-27 10:16:15,661: None
[DEBUG]2025-06-27 10:16:15,661: None
[DEBUG]2025-06-27 10:16:15,661: None
[DEBUG]2025-06-27 10:16:15,661: None
[DEBUG]2025-06-27 10:16:15,661: None
[DEBUG]2025-06-27 10:16:15,661: None
[DEBUG]2025-06-27 10:16:15,661: None
[DEBUG]2025-06-27 10:16:15,661: None
[DEBUG]2025-06-27 10:16:15,661: None
[DEBUG]2025-06-27 10:16:15,663: None
[DEBUG]2025-06-27 10:16:15,663: None
[DEBUG]2025-06-27 10:16:15,663: None
[DEBUG]2025-06-27 10:16:15,663: None
[DEBUG]2025-06-27 10:16:15,663: None
[DEBUG]2025-06-27 10:16:15,663: None
[DEBUG]2025-06-27 10:16:15,663: None
[DEBUG]2025-06-27 10:16:15,663: None
[DEBUG]2025-06-27 10:16:15,663: None
[DEBUG]2025-06-27 10:16:15,663: None
[DEBUG]2025-06-27 10:16:15,663: None
[DEBUG]2025-06-27 10:16:15,663: None
[DEBUG]2025-06-27 10:16:15,663: None
[DEBUG]2025-06-27 10:16:15,665: None
[DEBUG]2025-06-27 10:16:15,665: None
[DEBUG]2025-06-27 10:16:15,665: None
[DEBUG]2025-06-27 10:16:15,665: None
[DEBUG]2025-06-27 10:16:15,665: None
[DEBUG]2025-06-27 10:16:15,665: None
[DEBUG]2025-06-27 10:16:15,665: None
[DEBUG]2025-06-27 10:16:15,665: None
[DEBUG]2025-06-27 10:16:15,665: None
[DEBUG]2025-06-27 10:16:15,665: None
[DEBUG]2025-06-27 10:16:15,665: None
[DEBUG]2025-06-27 10:16:15,665: None
[DEBUG]2025-06-27 10:16:15,665: None
[DEBUG]2025-06-27 10:16:15,665: None
[DEBUG]2025-06-27 10:16:15,667: None
[DEBUG]2025-06-27 10:16:15,667: None
[DEBUG]2025-06-27 10:16:15,667: None
[DEBUG]2025-06-27 10:16:15,667: None
[DEBUG]2025-06-27 10:16:15,667: None
[DEBUG]2025-06-27 10:16:15,667: None
[DEBUG]2025-06-27 10:16:15,667: None
[DEBUG]2025-06-27 10:16:15,667: None
[DEBUG]2025-06-27 10:16:15,667: None
[DEBUG]2025-06-27 10:16:15,667: None
[DEBUG]2025-06-27 10:16:15,667: None
[DEBUG]2025-06-27 10:16:15,667: None
[DEBUG]2025-06-27 10:16:15,667: None
[DEBUG]2025-06-27 10:16:15,667: None
[DEBUG]2025-06-27 10:16:15,667: None
[DEBUG]2025-06-27 10:16:15,669: None
[DEBUG]2025-06-27 10:16:15,669: None
[DEBUG]2025-06-27 10:16:15,669: None
[DEBUG]2025-06-27 10:16:15,669: None
[DEBUG]2025-06-27 10:16:15,669: None
[DEBUG]2025-06-27 10:16:15,669: None
[DEBUG]2025-06-27 10:16:15,669: None
[DEBUG]2025-06-27 10:16:15,669: None
[DEBUG]2025-06-27 10:16:15,669: None
[DEBUG]2025-06-27 10:16:15,669: None
[DEBUG]2025-06-27 10:16:15,669: None
[DEBUG]2025-06-27 10:16:15,669: None
[DEBUG]2025-06-27 10:16:15,669: None
[DEBUG]2025-06-27 10:16:15,669: None
[DEBUG]2025-06-27 10:16:15,669: None
[DEBUG]2025-06-27 10:16:15,669: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,672: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,675: None
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,678: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,680: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,681: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,685: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,687: None
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,690: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,691: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,693: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,695: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,697: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:16:15,698: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,400: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:18:02,400: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:18:02,401: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:18:02,409: None
[DEBUG]2025-06-27 10:18:02,409: None
[DEBUG]2025-06-27 10:18:02,411: None
[DEBUG]2025-06-27 10:18:02,411: None
[DEBUG]2025-06-27 10:18:02,411: None
[DEBUG]2025-06-27 10:18:02,413: None
[DEBUG]2025-06-27 10:18:02,413: None
[DEBUG]2025-06-27 10:18:02,413: None
[DEBUG]2025-06-27 10:18:02,413: None
[DEBUG]2025-06-27 10:18:02,415: None
[DEBUG]2025-06-27 10:18:02,415: None
[DEBUG]2025-06-27 10:18:02,415: None
[DEBUG]2025-06-27 10:18:02,415: None
[DEBUG]2025-06-27 10:18:02,415: None
[DEBUG]2025-06-27 10:18:02,417: None
[DEBUG]2025-06-27 10:18:02,417: None
[DEBUG]2025-06-27 10:18:02,417: None
[DEBUG]2025-06-27 10:18:02,417: None
[DEBUG]2025-06-27 10:18:02,417: None
[DEBUG]2025-06-27 10:18:02,417: None
[DEBUG]2025-06-27 10:18:02,419: None
[DEBUG]2025-06-27 10:18:02,419: None
[DEBUG]2025-06-27 10:18:02,419: None
[DEBUG]2025-06-27 10:18:02,419: None
[DEBUG]2025-06-27 10:18:02,419: None
[DEBUG]2025-06-27 10:18:02,419: None
[DEBUG]2025-06-27 10:18:02,419: None
[DEBUG]2025-06-27 10:18:02,421: None
[DEBUG]2025-06-27 10:18:02,421: None
[DEBUG]2025-06-27 10:18:02,421: None
[DEBUG]2025-06-27 10:18:02,421: None
[DEBUG]2025-06-27 10:18:02,421: None
[DEBUG]2025-06-27 10:18:02,421: None
[DEBUG]2025-06-27 10:18:02,421: None
[DEBUG]2025-06-27 10:18:02,421: None
[DEBUG]2025-06-27 10:18:02,424: None
[DEBUG]2025-06-27 10:18:02,424: None
[DEBUG]2025-06-27 10:18:02,424: None
[DEBUG]2025-06-27 10:18:02,424: None
[DEBUG]2025-06-27 10:18:02,424: None
[DEBUG]2025-06-27 10:18:02,424: None
[DEBUG]2025-06-27 10:18:02,424: None
[DEBUG]2025-06-27 10:18:02,424: None
[DEBUG]2025-06-27 10:18:02,424: None
[DEBUG]2025-06-27 10:18:02,426: None
[DEBUG]2025-06-27 10:18:02,426: None
[DEBUG]2025-06-27 10:18:02,426: None
[DEBUG]2025-06-27 10:18:02,426: None
[DEBUG]2025-06-27 10:18:02,426: None
[DEBUG]2025-06-27 10:18:02,426: None
[DEBUG]2025-06-27 10:18:02,426: None
[DEBUG]2025-06-27 10:18:02,426: None
[DEBUG]2025-06-27 10:18:02,426: None
[DEBUG]2025-06-27 10:18:02,426: None
[DEBUG]2025-06-27 10:18:02,429: None
[DEBUG]2025-06-27 10:18:02,429: None
[DEBUG]2025-06-27 10:18:02,429: None
[DEBUG]2025-06-27 10:18:02,429: None
[DEBUG]2025-06-27 10:18:02,429: None
[DEBUG]2025-06-27 10:18:02,429: None
[DEBUG]2025-06-27 10:18:02,429: None
[DEBUG]2025-06-27 10:18:02,429: None
[DEBUG]2025-06-27 10:18:02,429: None
[DEBUG]2025-06-27 10:18:02,429: None
[DEBUG]2025-06-27 10:18:02,429: None
[DEBUG]2025-06-27 10:18:02,433: None
[DEBUG]2025-06-27 10:18:02,433: None
[DEBUG]2025-06-27 10:18:02,433: None
[DEBUG]2025-06-27 10:18:02,433: None
[DEBUG]2025-06-27 10:18:02,433: None
[DEBUG]2025-06-27 10:18:02,433: None
[DEBUG]2025-06-27 10:18:02,433: None
[DEBUG]2025-06-27 10:18:02,433: None
[DEBUG]2025-06-27 10:18:02,433: None
[DEBUG]2025-06-27 10:18:02,433: None
[DEBUG]2025-06-27 10:18:02,433: None
[DEBUG]2025-06-27 10:18:02,433: None
[DEBUG]2025-06-27 10:18:02,437: None
[DEBUG]2025-06-27 10:18:02,437: None
[DEBUG]2025-06-27 10:18:02,437: None
[DEBUG]2025-06-27 10:18:02,437: None
[DEBUG]2025-06-27 10:18:02,437: None
[DEBUG]2025-06-27 10:18:02,437: None
[DEBUG]2025-06-27 10:18:02,437: None
[DEBUG]2025-06-27 10:18:02,437: None
[DEBUG]2025-06-27 10:18:02,437: None
[DEBUG]2025-06-27 10:18:02,437: None
[DEBUG]2025-06-27 10:18:02,437: None
[DEBUG]2025-06-27 10:18:02,437: None
[DEBUG]2025-06-27 10:18:02,437: None
[DEBUG]2025-06-27 10:18:02,439: None
[DEBUG]2025-06-27 10:18:02,439: None
[DEBUG]2025-06-27 10:18:02,439: None
[DEBUG]2025-06-27 10:18:02,439: None
[DEBUG]2025-06-27 10:18:02,439: None
[DEBUG]2025-06-27 10:18:02,439: None
[DEBUG]2025-06-27 10:18:02,439: None
[DEBUG]2025-06-27 10:18:02,439: None
[DEBUG]2025-06-27 10:18:02,439: None
[DEBUG]2025-06-27 10:18:02,439: None
[DEBUG]2025-06-27 10:18:02,439: None
[DEBUG]2025-06-27 10:18:02,439: None
[DEBUG]2025-06-27 10:18:02,439: None
[DEBUG]2025-06-27 10:18:02,439: None
[DEBUG]2025-06-27 10:18:02,442: None
[DEBUG]2025-06-27 10:18:02,442: None
[DEBUG]2025-06-27 10:18:02,442: None
[DEBUG]2025-06-27 10:18:02,442: None
[DEBUG]2025-06-27 10:18:02,442: None
[DEBUG]2025-06-27 10:18:02,442: None
[DEBUG]2025-06-27 10:18:02,442: None
[DEBUG]2025-06-27 10:18:02,442: None
[DEBUG]2025-06-27 10:18:02,442: None
[DEBUG]2025-06-27 10:18:02,442: None
[DEBUG]2025-06-27 10:18:02,442: None
[DEBUG]2025-06-27 10:18:02,442: None
[DEBUG]2025-06-27 10:18:02,442: None
[DEBUG]2025-06-27 10:18:02,442: None
[DEBUG]2025-06-27 10:18:02,442: None
[DEBUG]2025-06-27 10:18:02,444: None
[DEBUG]2025-06-27 10:18:02,444: None
[DEBUG]2025-06-27 10:18:02,444: None
[DEBUG]2025-06-27 10:18:02,444: None
[DEBUG]2025-06-27 10:18:02,444: None
[DEBUG]2025-06-27 10:18:02,444: None
[DEBUG]2025-06-27 10:18:02,444: None
[DEBUG]2025-06-27 10:18:02,444: None
[DEBUG]2025-06-27 10:18:02,444: None
[DEBUG]2025-06-27 10:18:02,444: None
[DEBUG]2025-06-27 10:18:02,444: None
[DEBUG]2025-06-27 10:18:02,444: None
[DEBUG]2025-06-27 10:18:02,444: None
[DEBUG]2025-06-27 10:18:02,444: None
[DEBUG]2025-06-27 10:18:02,444: None
[DEBUG]2025-06-27 10:18:02,444: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,446: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,451: None
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,454: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,455: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,456: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,459: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,461: None
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,463: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,465: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,466: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,469: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,471: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:18:02,472: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,350: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:19:15,350: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:19:15,350: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:19:15,355: None
[DEBUG]2025-06-27 10:19:15,355: None
[DEBUG]2025-06-27 10:19:15,357: None
[DEBUG]2025-06-27 10:19:15,357: None
[DEBUG]2025-06-27 10:19:15,357: None
[DEBUG]2025-06-27 10:19:15,358: None
[DEBUG]2025-06-27 10:19:15,358: None
[DEBUG]2025-06-27 10:19:15,358: None
[DEBUG]2025-06-27 10:19:15,358: None
[DEBUG]2025-06-27 10:19:15,359: None
[DEBUG]2025-06-27 10:19:15,359: None
[DEBUG]2025-06-27 10:19:15,359: None
[DEBUG]2025-06-27 10:19:15,359: None
[DEBUG]2025-06-27 10:19:15,359: None
[DEBUG]2025-06-27 10:19:15,360: None
[DEBUG]2025-06-27 10:19:15,360: None
[DEBUG]2025-06-27 10:19:15,360: None
[DEBUG]2025-06-27 10:19:15,360: None
[DEBUG]2025-06-27 10:19:15,360: None
[DEBUG]2025-06-27 10:19:15,360: None
[DEBUG]2025-06-27 10:19:15,361: None
[DEBUG]2025-06-27 10:19:15,361: None
[DEBUG]2025-06-27 10:19:15,361: None
[DEBUG]2025-06-27 10:19:15,361: None
[DEBUG]2025-06-27 10:19:15,361: None
[DEBUG]2025-06-27 10:19:15,361: None
[DEBUG]2025-06-27 10:19:15,361: None
[DEBUG]2025-06-27 10:19:15,362: None
[DEBUG]2025-06-27 10:19:15,362: None
[DEBUG]2025-06-27 10:19:15,362: None
[DEBUG]2025-06-27 10:19:15,362: None
[DEBUG]2025-06-27 10:19:15,362: None
[DEBUG]2025-06-27 10:19:15,362: None
[DEBUG]2025-06-27 10:19:15,362: None
[DEBUG]2025-06-27 10:19:15,362: None
[DEBUG]2025-06-27 10:19:15,363: None
[DEBUG]2025-06-27 10:19:15,363: None
[DEBUG]2025-06-27 10:19:15,363: None
[DEBUG]2025-06-27 10:19:15,363: None
[DEBUG]2025-06-27 10:19:15,363: None
[DEBUG]2025-06-27 10:19:15,363: None
[DEBUG]2025-06-27 10:19:15,363: None
[DEBUG]2025-06-27 10:19:15,363: None
[DEBUG]2025-06-27 10:19:15,363: None
[DEBUG]2025-06-27 10:19:15,365: None
[DEBUG]2025-06-27 10:19:15,365: None
[DEBUG]2025-06-27 10:19:15,365: None
[DEBUG]2025-06-27 10:19:15,365: None
[DEBUG]2025-06-27 10:19:15,365: None
[DEBUG]2025-06-27 10:19:15,365: None
[DEBUG]2025-06-27 10:19:15,365: None
[DEBUG]2025-06-27 10:19:15,365: None
[DEBUG]2025-06-27 10:19:15,365: None
[DEBUG]2025-06-27 10:19:15,365: None
[DEBUG]2025-06-27 10:19:15,366: None
[DEBUG]2025-06-27 10:19:15,366: None
[DEBUG]2025-06-27 10:19:15,366: None
[DEBUG]2025-06-27 10:19:15,366: None
[DEBUG]2025-06-27 10:19:15,366: None
[DEBUG]2025-06-27 10:19:15,366: None
[DEBUG]2025-06-27 10:19:15,366: None
[DEBUG]2025-06-27 10:19:15,366: None
[DEBUG]2025-06-27 10:19:15,366: None
[DEBUG]2025-06-27 10:19:15,366: None
[DEBUG]2025-06-27 10:19:15,366: None
[DEBUG]2025-06-27 10:19:15,368: None
[DEBUG]2025-06-27 10:19:15,368: None
[DEBUG]2025-06-27 10:19:15,368: None
[DEBUG]2025-06-27 10:19:15,368: None
[DEBUG]2025-06-27 10:19:15,368: None
[DEBUG]2025-06-27 10:19:15,368: None
[DEBUG]2025-06-27 10:19:15,368: None
[DEBUG]2025-06-27 10:19:15,368: None
[DEBUG]2025-06-27 10:19:15,368: None
[DEBUG]2025-06-27 10:19:15,368: None
[DEBUG]2025-06-27 10:19:15,368: None
[DEBUG]2025-06-27 10:19:15,368: None
[DEBUG]2025-06-27 10:19:15,370: None
[DEBUG]2025-06-27 10:19:15,370: None
[DEBUG]2025-06-27 10:19:15,370: None
[DEBUG]2025-06-27 10:19:15,370: None
[DEBUG]2025-06-27 10:19:15,370: None
[DEBUG]2025-06-27 10:19:15,370: None
[DEBUG]2025-06-27 10:19:15,370: None
[DEBUG]2025-06-27 10:19:15,370: None
[DEBUG]2025-06-27 10:19:15,370: None
[DEBUG]2025-06-27 10:19:15,370: None
[DEBUG]2025-06-27 10:19:15,370: None
[DEBUG]2025-06-27 10:19:15,370: None
[DEBUG]2025-06-27 10:19:15,370: None
[DEBUG]2025-06-27 10:19:15,371: None
[DEBUG]2025-06-27 10:19:15,371: None
[DEBUG]2025-06-27 10:19:15,371: None
[DEBUG]2025-06-27 10:19:15,371: None
[DEBUG]2025-06-27 10:19:15,371: None
[DEBUG]2025-06-27 10:19:15,371: None
[DEBUG]2025-06-27 10:19:15,371: None
[DEBUG]2025-06-27 10:19:15,371: None
[DEBUG]2025-06-27 10:19:15,371: None
[DEBUG]2025-06-27 10:19:15,371: None
[DEBUG]2025-06-27 10:19:15,371: None
[DEBUG]2025-06-27 10:19:15,371: None
[DEBUG]2025-06-27 10:19:15,371: None
[DEBUG]2025-06-27 10:19:15,371: None
[DEBUG]2025-06-27 10:19:15,372: None
[DEBUG]2025-06-27 10:19:15,372: None
[DEBUG]2025-06-27 10:19:15,372: None
[DEBUG]2025-06-27 10:19:15,372: None
[DEBUG]2025-06-27 10:19:15,372: None
[DEBUG]2025-06-27 10:19:15,372: None
[DEBUG]2025-06-27 10:19:15,372: None
[DEBUG]2025-06-27 10:19:15,372: None
[DEBUG]2025-06-27 10:19:15,372: None
[DEBUG]2025-06-27 10:19:15,372: None
[DEBUG]2025-06-27 10:19:15,372: None
[DEBUG]2025-06-27 10:19:15,372: None
[DEBUG]2025-06-27 10:19:15,372: None
[DEBUG]2025-06-27 10:19:15,372: None
[DEBUG]2025-06-27 10:19:15,372: None
[DEBUG]2025-06-27 10:19:15,373: None
[DEBUG]2025-06-27 10:19:15,373: None
[DEBUG]2025-06-27 10:19:15,373: None
[DEBUG]2025-06-27 10:19:15,373: None
[DEBUG]2025-06-27 10:19:15,373: None
[DEBUG]2025-06-27 10:19:15,373: None
[DEBUG]2025-06-27 10:19:15,373: None
[DEBUG]2025-06-27 10:19:15,373: None
[DEBUG]2025-06-27 10:19:15,373: None
[DEBUG]2025-06-27 10:19:15,373: None
[DEBUG]2025-06-27 10:19:15,373: None
[DEBUG]2025-06-27 10:19:15,373: None
[DEBUG]2025-06-27 10:19:15,373: None
[DEBUG]2025-06-27 10:19:15,373: None
[DEBUG]2025-06-27 10:19:15,373: None
[DEBUG]2025-06-27 10:19:15,373: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,375: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,376: None
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,377: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,379: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,381: None
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,383: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,388: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,389: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:19:15,390: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,883: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:20:49,931: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:20:49,931: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:20:49,937: None
[DEBUG]2025-06-27 10:20:49,937: None
[DEBUG]2025-06-27 10:20:49,939: None
[DEBUG]2025-06-27 10:20:49,939: None
[DEBUG]2025-06-27 10:20:49,939: None
[DEBUG]2025-06-27 10:20:49,941: None
[DEBUG]2025-06-27 10:20:49,941: None
[DEBUG]2025-06-27 10:20:49,941: None
[DEBUG]2025-06-27 10:20:49,941: None
[DEBUG]2025-06-27 10:20:49,943: None
[DEBUG]2025-06-27 10:20:49,943: None
[DEBUG]2025-06-27 10:20:49,943: None
[DEBUG]2025-06-27 10:20:49,943: None
[DEBUG]2025-06-27 10:20:49,943: None
[DEBUG]2025-06-27 10:20:49,945: None
[DEBUG]2025-06-27 10:20:49,945: None
[DEBUG]2025-06-27 10:20:49,945: None
[DEBUG]2025-06-27 10:20:49,945: None
[DEBUG]2025-06-27 10:20:49,945: None
[DEBUG]2025-06-27 10:20:49,945: None
[DEBUG]2025-06-27 10:20:49,947: None
[DEBUG]2025-06-27 10:20:49,947: None
[DEBUG]2025-06-27 10:20:49,947: None
[DEBUG]2025-06-27 10:20:49,947: None
[DEBUG]2025-06-27 10:20:49,947: None
[DEBUG]2025-06-27 10:20:49,947: None
[DEBUG]2025-06-27 10:20:49,947: None
[DEBUG]2025-06-27 10:20:49,949: None
[DEBUG]2025-06-27 10:20:49,949: None
[DEBUG]2025-06-27 10:20:49,949: None
[DEBUG]2025-06-27 10:20:49,949: None
[DEBUG]2025-06-27 10:20:49,949: None
[DEBUG]2025-06-27 10:20:49,949: None
[DEBUG]2025-06-27 10:20:49,949: None
[DEBUG]2025-06-27 10:20:49,949: None
[DEBUG]2025-06-27 10:20:49,951: None
[DEBUG]2025-06-27 10:20:49,951: None
[DEBUG]2025-06-27 10:20:49,951: None
[DEBUG]2025-06-27 10:20:49,951: None
[DEBUG]2025-06-27 10:20:49,951: None
[DEBUG]2025-06-27 10:20:49,951: None
[DEBUG]2025-06-27 10:20:49,951: None
[DEBUG]2025-06-27 10:20:49,951: None
[DEBUG]2025-06-27 10:20:49,951: None
[DEBUG]2025-06-27 10:20:49,954: None
[DEBUG]2025-06-27 10:20:49,954: None
[DEBUG]2025-06-27 10:20:49,954: None
[DEBUG]2025-06-27 10:20:49,954: None
[DEBUG]2025-06-27 10:20:49,954: None
[DEBUG]2025-06-27 10:20:49,954: None
[DEBUG]2025-06-27 10:20:49,954: None
[DEBUG]2025-06-27 10:20:49,954: None
[DEBUG]2025-06-27 10:20:49,954: None
[DEBUG]2025-06-27 10:20:49,954: None
[DEBUG]2025-06-27 10:20:49,957: None
[DEBUG]2025-06-27 10:20:49,957: None
[DEBUG]2025-06-27 10:20:49,957: None
[DEBUG]2025-06-27 10:20:49,957: None
[DEBUG]2025-06-27 10:20:49,957: None
[DEBUG]2025-06-27 10:20:49,957: None
[DEBUG]2025-06-27 10:20:49,957: None
[DEBUG]2025-06-27 10:20:49,957: None
[DEBUG]2025-06-27 10:20:49,957: None
[DEBUG]2025-06-27 10:20:49,957: None
[DEBUG]2025-06-27 10:20:49,957: None
[DEBUG]2025-06-27 10:20:49,959: None
[DEBUG]2025-06-27 10:20:49,959: None
[DEBUG]2025-06-27 10:20:49,959: None
[DEBUG]2025-06-27 10:20:49,959: None
[DEBUG]2025-06-27 10:20:49,959: None
[DEBUG]2025-06-27 10:20:49,959: None
[DEBUG]2025-06-27 10:20:49,959: None
[DEBUG]2025-06-27 10:20:49,959: None
[DEBUG]2025-06-27 10:20:49,959: None
[DEBUG]2025-06-27 10:20:49,959: None
[DEBUG]2025-06-27 10:20:49,959: None
[DEBUG]2025-06-27 10:20:49,959: None
[DEBUG]2025-06-27 10:20:49,961: None
[DEBUG]2025-06-27 10:20:49,961: None
[DEBUG]2025-06-27 10:20:49,961: None
[DEBUG]2025-06-27 10:20:49,961: None
[DEBUG]2025-06-27 10:20:49,961: None
[DEBUG]2025-06-27 10:20:49,961: None
[DEBUG]2025-06-27 10:20:49,961: None
[DEBUG]2025-06-27 10:20:49,961: None
[DEBUG]2025-06-27 10:20:49,961: None
[DEBUG]2025-06-27 10:20:49,961: None
[DEBUG]2025-06-27 10:20:49,961: None
[DEBUG]2025-06-27 10:20:49,961: None
[DEBUG]2025-06-27 10:20:49,961: None
[DEBUG]2025-06-27 10:20:49,963: None
[DEBUG]2025-06-27 10:20:49,963: None
[DEBUG]2025-06-27 10:20:49,963: None
[DEBUG]2025-06-27 10:20:49,963: None
[DEBUG]2025-06-27 10:20:49,963: None
[DEBUG]2025-06-27 10:20:49,963: None
[DEBUG]2025-06-27 10:20:49,963: None
[DEBUG]2025-06-27 10:20:49,963: None
[DEBUG]2025-06-27 10:20:49,963: None
[DEBUG]2025-06-27 10:20:49,963: None
[DEBUG]2025-06-27 10:20:49,963: None
[DEBUG]2025-06-27 10:20:49,963: None
[DEBUG]2025-06-27 10:20:49,963: None
[DEBUG]2025-06-27 10:20:49,963: None
[DEBUG]2025-06-27 10:20:49,965: None
[DEBUG]2025-06-27 10:20:49,965: None
[DEBUG]2025-06-27 10:20:49,965: None
[DEBUG]2025-06-27 10:20:49,965: None
[DEBUG]2025-06-27 10:20:49,965: None
[DEBUG]2025-06-27 10:20:49,965: None
[DEBUG]2025-06-27 10:20:49,965: None
[DEBUG]2025-06-27 10:20:49,965: None
[DEBUG]2025-06-27 10:20:49,965: None
[DEBUG]2025-06-27 10:20:49,965: None
[DEBUG]2025-06-27 10:20:49,965: None
[DEBUG]2025-06-27 10:20:49,965: None
[DEBUG]2025-06-27 10:20:49,965: None
[DEBUG]2025-06-27 10:20:49,965: None
[DEBUG]2025-06-27 10:20:49,965: None
[DEBUG]2025-06-27 10:20:49,967: None
[DEBUG]2025-06-27 10:20:49,967: None
[DEBUG]2025-06-27 10:20:49,967: None
[DEBUG]2025-06-27 10:20:49,967: None
[DEBUG]2025-06-27 10:20:49,967: None
[DEBUG]2025-06-27 10:20:49,967: None
[DEBUG]2025-06-27 10:20:49,967: None
[DEBUG]2025-06-27 10:20:49,967: None
[DEBUG]2025-06-27 10:20:49,967: None
[DEBUG]2025-06-27 10:20:49,967: None
[DEBUG]2025-06-27 10:20:49,967: None
[DEBUG]2025-06-27 10:20:49,967: None
[DEBUG]2025-06-27 10:20:49,967: None
[DEBUG]2025-06-27 10:20:49,967: None
[DEBUG]2025-06-27 10:20:49,967: None
[DEBUG]2025-06-27 10:20:49,967: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,969: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,971: None
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,978: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,980: None
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,982: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,983: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:20:49,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,585: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:22:28,585: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:22:28,585: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:22:28,588: None
[DEBUG]2025-06-27 10:22:28,588: None
[DEBUG]2025-06-27 10:22:28,589: None
[DEBUG]2025-06-27 10:22:28,589: None
[DEBUG]2025-06-27 10:22:28,589: None
[DEBUG]2025-06-27 10:22:28,589: None
[DEBUG]2025-06-27 10:22:28,589: None
[DEBUG]2025-06-27 10:22:28,589: None
[DEBUG]2025-06-27 10:22:28,589: None
[DEBUG]2025-06-27 10:22:28,590: None
[DEBUG]2025-06-27 10:22:28,590: None
[DEBUG]2025-06-27 10:22:28,590: None
[DEBUG]2025-06-27 10:22:28,590: None
[DEBUG]2025-06-27 10:22:28,590: None
[DEBUG]2025-06-27 10:22:28,591: None
[DEBUG]2025-06-27 10:22:28,591: None
[DEBUG]2025-06-27 10:22:28,591: None
[DEBUG]2025-06-27 10:22:28,591: None
[DEBUG]2025-06-27 10:22:28,591: None
[DEBUG]2025-06-27 10:22:28,591: None
[DEBUG]2025-06-27 10:22:28,592: None
[DEBUG]2025-06-27 10:22:28,592: None
[DEBUG]2025-06-27 10:22:28,592: None
[DEBUG]2025-06-27 10:22:28,592: None
[DEBUG]2025-06-27 10:22:28,592: None
[DEBUG]2025-06-27 10:22:28,592: None
[DEBUG]2025-06-27 10:22:28,592: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,594: None
[DEBUG]2025-06-27 10:22:28,595: None
[DEBUG]2025-06-27 10:22:28,595: None
[DEBUG]2025-06-27 10:22:28,595: None
[DEBUG]2025-06-27 10:22:28,595: None
[DEBUG]2025-06-27 10:22:28,595: None
[DEBUG]2025-06-27 10:22:28,595: None
[DEBUG]2025-06-27 10:22:28,595: None
[DEBUG]2025-06-27 10:22:28,595: None
[DEBUG]2025-06-27 10:22:28,595: None
[DEBUG]2025-06-27 10:22:28,595: None
[DEBUG]2025-06-27 10:22:28,596: None
[DEBUG]2025-06-27 10:22:28,596: None
[DEBUG]2025-06-27 10:22:28,596: None
[DEBUG]2025-06-27 10:22:28,596: None
[DEBUG]2025-06-27 10:22:28,596: None
[DEBUG]2025-06-27 10:22:28,596: None
[DEBUG]2025-06-27 10:22:28,596: None
[DEBUG]2025-06-27 10:22:28,596: None
[DEBUG]2025-06-27 10:22:28,596: None
[DEBUG]2025-06-27 10:22:28,596: None
[DEBUG]2025-06-27 10:22:28,596: None
[DEBUG]2025-06-27 10:22:28,597: None
[DEBUG]2025-06-27 10:22:28,597: None
[DEBUG]2025-06-27 10:22:28,597: None
[DEBUG]2025-06-27 10:22:28,597: None
[DEBUG]2025-06-27 10:22:28,597: None
[DEBUG]2025-06-27 10:22:28,597: None
[DEBUG]2025-06-27 10:22:28,597: None
[DEBUG]2025-06-27 10:22:28,597: None
[DEBUG]2025-06-27 10:22:28,597: None
[DEBUG]2025-06-27 10:22:28,597: None
[DEBUG]2025-06-27 10:22:28,597: None
[DEBUG]2025-06-27 10:22:28,597: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,598: None
[DEBUG]2025-06-27 10:22:28,599: None
[DEBUG]2025-06-27 10:22:28,599: None
[DEBUG]2025-06-27 10:22:28,599: None
[DEBUG]2025-06-27 10:22:28,599: None
[DEBUG]2025-06-27 10:22:28,599: None
[DEBUG]2025-06-27 10:22:28,599: None
[DEBUG]2025-06-27 10:22:28,599: None
[DEBUG]2025-06-27 10:22:28,599: None
[DEBUG]2025-06-27 10:22:28,599: None
[DEBUG]2025-06-27 10:22:28,599: None
[DEBUG]2025-06-27 10:22:28,599: None
[DEBUG]2025-06-27 10:22:28,599: None
[DEBUG]2025-06-27 10:22:28,599: None
[DEBUG]2025-06-27 10:22:28,599: None
[DEBUG]2025-06-27 10:22:28,599: None
[DEBUG]2025-06-27 10:22:28,600: None
[DEBUG]2025-06-27 10:22:28,600: None
[DEBUG]2025-06-27 10:22:28,600: None
[DEBUG]2025-06-27 10:22:28,600: None
[DEBUG]2025-06-27 10:22:28,600: None
[DEBUG]2025-06-27 10:22:28,600: None
[DEBUG]2025-06-27 10:22:28,600: None
[DEBUG]2025-06-27 10:22:28,600: None
[DEBUG]2025-06-27 10:22:28,600: None
[DEBUG]2025-06-27 10:22:28,600: None
[DEBUG]2025-06-27 10:22:28,600: None
[DEBUG]2025-06-27 10:22:28,600: None
[DEBUG]2025-06-27 10:22:28,600: None
[DEBUG]2025-06-27 10:22:28,600: None
[DEBUG]2025-06-27 10:22:28,600: None
[DEBUG]2025-06-27 10:22:28,600: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,601: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,602: None
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,603: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,604: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,605: None
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:22:28,608: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,256: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:27:56,257: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:27:56,258: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:27:56,264: None
[DEBUG]2025-06-27 10:27:56,264: None
[DEBUG]2025-06-27 10:27:56,266: None
[DEBUG]2025-06-27 10:27:56,266: None
[DEBUG]2025-06-27 10:27:56,266: None
[DEBUG]2025-06-27 10:27:56,267: None
[DEBUG]2025-06-27 10:27:56,267: None
[DEBUG]2025-06-27 10:27:56,267: None
[DEBUG]2025-06-27 10:27:56,267: None
[DEBUG]2025-06-27 10:27:56,269: None
[DEBUG]2025-06-27 10:27:56,269: None
[DEBUG]2025-06-27 10:27:56,269: None
[DEBUG]2025-06-27 10:27:56,269: None
[DEBUG]2025-06-27 10:27:56,269: None
[DEBUG]2025-06-27 10:27:56,270: None
[DEBUG]2025-06-27 10:27:56,270: None
[DEBUG]2025-06-27 10:27:56,270: None
[DEBUG]2025-06-27 10:27:56,270: None
[DEBUG]2025-06-27 10:27:56,270: None
[DEBUG]2025-06-27 10:27:56,270: None
[DEBUG]2025-06-27 10:27:56,272: None
[DEBUG]2025-06-27 10:27:56,272: None
[DEBUG]2025-06-27 10:27:56,272: None
[DEBUG]2025-06-27 10:27:56,272: None
[DEBUG]2025-06-27 10:27:56,272: None
[DEBUG]2025-06-27 10:27:56,272: None
[DEBUG]2025-06-27 10:27:56,272: None
[DEBUG]2025-06-27 10:27:56,274: None
[DEBUG]2025-06-27 10:27:56,274: None
[DEBUG]2025-06-27 10:27:56,274: None
[DEBUG]2025-06-27 10:27:56,274: None
[DEBUG]2025-06-27 10:27:56,274: None
[DEBUG]2025-06-27 10:27:56,274: None
[DEBUG]2025-06-27 10:27:56,274: None
[DEBUG]2025-06-27 10:27:56,274: None
[DEBUG]2025-06-27 10:27:56,276: None
[DEBUG]2025-06-27 10:27:56,276: None
[DEBUG]2025-06-27 10:27:56,276: None
[DEBUG]2025-06-27 10:27:56,276: None
[DEBUG]2025-06-27 10:27:56,276: None
[DEBUG]2025-06-27 10:27:56,276: None
[DEBUG]2025-06-27 10:27:56,276: None
[DEBUG]2025-06-27 10:27:56,276: None
[DEBUG]2025-06-27 10:27:56,276: None
[DEBUG]2025-06-27 10:27:56,278: None
[DEBUG]2025-06-27 10:27:56,278: None
[DEBUG]2025-06-27 10:27:56,278: None
[DEBUG]2025-06-27 10:27:56,278: None
[DEBUG]2025-06-27 10:27:56,278: None
[DEBUG]2025-06-27 10:27:56,278: None
[DEBUG]2025-06-27 10:27:56,278: None
[DEBUG]2025-06-27 10:27:56,278: None
[DEBUG]2025-06-27 10:27:56,278: None
[DEBUG]2025-06-27 10:27:56,278: None
[DEBUG]2025-06-27 10:27:56,280: None
[DEBUG]2025-06-27 10:27:56,280: None
[DEBUG]2025-06-27 10:27:56,280: None
[DEBUG]2025-06-27 10:27:56,280: None
[DEBUG]2025-06-27 10:27:56,280: None
[DEBUG]2025-06-27 10:27:56,280: None
[DEBUG]2025-06-27 10:27:56,280: None
[DEBUG]2025-06-27 10:27:56,280: None
[DEBUG]2025-06-27 10:27:56,280: None
[DEBUG]2025-06-27 10:27:56,280: None
[DEBUG]2025-06-27 10:27:56,280: None
[DEBUG]2025-06-27 10:27:56,282: None
[DEBUG]2025-06-27 10:27:56,282: None
[DEBUG]2025-06-27 10:27:56,282: None
[DEBUG]2025-06-27 10:27:56,282: None
[DEBUG]2025-06-27 10:27:56,282: None
[DEBUG]2025-06-27 10:27:56,282: None
[DEBUG]2025-06-27 10:27:56,282: None
[DEBUG]2025-06-27 10:27:56,282: None
[DEBUG]2025-06-27 10:27:56,282: None
[DEBUG]2025-06-27 10:27:56,282: None
[DEBUG]2025-06-27 10:27:56,282: None
[DEBUG]2025-06-27 10:27:56,282: None
[DEBUG]2025-06-27 10:27:56,286: None
[DEBUG]2025-06-27 10:27:56,286: None
[DEBUG]2025-06-27 10:27:56,286: None
[DEBUG]2025-06-27 10:27:56,286: None
[DEBUG]2025-06-27 10:27:56,286: None
[DEBUG]2025-06-27 10:27:56,286: None
[DEBUG]2025-06-27 10:27:56,286: None
[DEBUG]2025-06-27 10:27:56,286: None
[DEBUG]2025-06-27 10:27:56,286: None
[DEBUG]2025-06-27 10:27:56,286: None
[DEBUG]2025-06-27 10:27:56,286: None
[DEBUG]2025-06-27 10:27:56,286: None
[DEBUG]2025-06-27 10:27:56,286: None
[DEBUG]2025-06-27 10:27:56,288: None
[DEBUG]2025-06-27 10:27:56,288: None
[DEBUG]2025-06-27 10:27:56,288: None
[DEBUG]2025-06-27 10:27:56,288: None
[DEBUG]2025-06-27 10:27:56,288: None
[DEBUG]2025-06-27 10:27:56,288: None
[DEBUG]2025-06-27 10:27:56,288: None
[DEBUG]2025-06-27 10:27:56,288: None
[DEBUG]2025-06-27 10:27:56,288: None
[DEBUG]2025-06-27 10:27:56,288: None
[DEBUG]2025-06-27 10:27:56,288: None
[DEBUG]2025-06-27 10:27:56,288: None
[DEBUG]2025-06-27 10:27:56,288: None
[DEBUG]2025-06-27 10:27:56,288: None
[DEBUG]2025-06-27 10:27:56,290: None
[DEBUG]2025-06-27 10:27:56,290: None
[DEBUG]2025-06-27 10:27:56,290: None
[DEBUG]2025-06-27 10:27:56,290: None
[DEBUG]2025-06-27 10:27:56,290: None
[DEBUG]2025-06-27 10:27:56,290: None
[DEBUG]2025-06-27 10:27:56,290: None
[DEBUG]2025-06-27 10:27:56,290: None
[DEBUG]2025-06-27 10:27:56,290: None
[DEBUG]2025-06-27 10:27:56,290: None
[DEBUG]2025-06-27 10:27:56,290: None
[DEBUG]2025-06-27 10:27:56,290: None
[DEBUG]2025-06-27 10:27:56,290: None
[DEBUG]2025-06-27 10:27:56,290: None
[DEBUG]2025-06-27 10:27:56,290: None
[DEBUG]2025-06-27 10:27:56,292: None
[DEBUG]2025-06-27 10:27:56,292: None
[DEBUG]2025-06-27 10:27:56,292: None
[DEBUG]2025-06-27 10:27:56,292: None
[DEBUG]2025-06-27 10:27:56,292: None
[DEBUG]2025-06-27 10:27:56,292: None
[DEBUG]2025-06-27 10:27:56,292: None
[DEBUG]2025-06-27 10:27:56,292: None
[DEBUG]2025-06-27 10:27:56,292: None
[DEBUG]2025-06-27 10:27:56,292: None
[DEBUG]2025-06-27 10:27:56,292: None
[DEBUG]2025-06-27 10:27:56,292: None
[DEBUG]2025-06-27 10:27:56,292: None
[DEBUG]2025-06-27 10:27:56,292: None
[DEBUG]2025-06-27 10:27:56,292: None
[DEBUG]2025-06-27 10:27:56,292: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,294: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,296: None
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,298: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,299: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,300: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,303: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,305: None
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,307: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,310: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,314: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,315: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:27:56,316: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,509: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:30:45,532: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:30:45,533: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:30:45,540: None
[DEBUG]2025-06-27 10:30:45,540: None
[DEBUG]2025-06-27 10:30:45,542: None
[DEBUG]2025-06-27 10:30:45,542: None
[DEBUG]2025-06-27 10:30:45,542: None
[DEBUG]2025-06-27 10:30:45,544: None
[DEBUG]2025-06-27 10:30:45,544: None
[DEBUG]2025-06-27 10:30:45,544: None
[DEBUG]2025-06-27 10:30:45,544: None
[DEBUG]2025-06-27 10:30:45,546: None
[DEBUG]2025-06-27 10:30:45,546: None
[DEBUG]2025-06-27 10:30:45,546: None
[DEBUG]2025-06-27 10:30:45,546: None
[DEBUG]2025-06-27 10:30:45,546: None
[DEBUG]2025-06-27 10:30:45,548: None
[DEBUG]2025-06-27 10:30:45,548: None
[DEBUG]2025-06-27 10:30:45,548: None
[DEBUG]2025-06-27 10:30:45,548: None
[DEBUG]2025-06-27 10:30:45,548: None
[DEBUG]2025-06-27 10:30:45,548: None
[DEBUG]2025-06-27 10:30:45,550: None
[DEBUG]2025-06-27 10:30:45,550: None
[DEBUG]2025-06-27 10:30:45,550: None
[DEBUG]2025-06-27 10:30:45,550: None
[DEBUG]2025-06-27 10:30:45,550: None
[DEBUG]2025-06-27 10:30:45,550: None
[DEBUG]2025-06-27 10:30:45,550: None
[DEBUG]2025-06-27 10:30:45,552: None
[DEBUG]2025-06-27 10:30:45,552: None
[DEBUG]2025-06-27 10:30:45,552: None
[DEBUG]2025-06-27 10:30:45,552: None
[DEBUG]2025-06-27 10:30:45,552: None
[DEBUG]2025-06-27 10:30:45,552: None
[DEBUG]2025-06-27 10:30:45,552: None
[DEBUG]2025-06-27 10:30:45,552: None
[DEBUG]2025-06-27 10:30:45,554: None
[DEBUG]2025-06-27 10:30:45,554: None
[DEBUG]2025-06-27 10:30:45,554: None
[DEBUG]2025-06-27 10:30:45,554: None
[DEBUG]2025-06-27 10:30:45,554: None
[DEBUG]2025-06-27 10:30:45,554: None
[DEBUG]2025-06-27 10:30:45,554: None
[DEBUG]2025-06-27 10:30:45,554: None
[DEBUG]2025-06-27 10:30:45,554: None
[DEBUG]2025-06-27 10:30:45,557: None
[DEBUG]2025-06-27 10:30:45,557: None
[DEBUG]2025-06-27 10:30:45,557: None
[DEBUG]2025-06-27 10:30:45,557: None
[DEBUG]2025-06-27 10:30:45,557: None
[DEBUG]2025-06-27 10:30:45,557: None
[DEBUG]2025-06-27 10:30:45,557: None
[DEBUG]2025-06-27 10:30:45,557: None
[DEBUG]2025-06-27 10:30:45,557: None
[DEBUG]2025-06-27 10:30:45,557: None
[DEBUG]2025-06-27 10:30:45,560: None
[DEBUG]2025-06-27 10:30:45,560: None
[DEBUG]2025-06-27 10:30:45,560: None
[DEBUG]2025-06-27 10:30:45,560: None
[DEBUG]2025-06-27 10:30:45,560: None
[DEBUG]2025-06-27 10:30:45,560: None
[DEBUG]2025-06-27 10:30:45,560: None
[DEBUG]2025-06-27 10:30:45,560: None
[DEBUG]2025-06-27 10:30:45,560: None
[DEBUG]2025-06-27 10:30:45,560: None
[DEBUG]2025-06-27 10:30:45,560: None
[DEBUG]2025-06-27 10:30:45,563: None
[DEBUG]2025-06-27 10:30:45,563: None
[DEBUG]2025-06-27 10:30:45,563: None
[DEBUG]2025-06-27 10:30:45,563: None
[DEBUG]2025-06-27 10:30:45,563: None
[DEBUG]2025-06-27 10:30:45,563: None
[DEBUG]2025-06-27 10:30:45,563: None
[DEBUG]2025-06-27 10:30:45,563: None
[DEBUG]2025-06-27 10:30:45,563: None
[DEBUG]2025-06-27 10:30:45,563: None
[DEBUG]2025-06-27 10:30:45,563: None
[DEBUG]2025-06-27 10:30:45,563: None
[DEBUG]2025-06-27 10:30:45,566: None
[DEBUG]2025-06-27 10:30:45,566: None
[DEBUG]2025-06-27 10:30:45,566: None
[DEBUG]2025-06-27 10:30:45,566: None
[DEBUG]2025-06-27 10:30:45,566: None
[DEBUG]2025-06-27 10:30:45,566: None
[DEBUG]2025-06-27 10:30:45,566: None
[DEBUG]2025-06-27 10:30:45,566: None
[DEBUG]2025-06-27 10:30:45,566: None
[DEBUG]2025-06-27 10:30:45,566: None
[DEBUG]2025-06-27 10:30:45,566: None
[DEBUG]2025-06-27 10:30:45,566: None
[DEBUG]2025-06-27 10:30:45,566: None
[DEBUG]2025-06-27 10:30:45,568: None
[DEBUG]2025-06-27 10:30:45,568: None
[DEBUG]2025-06-27 10:30:45,568: None
[DEBUG]2025-06-27 10:30:45,568: None
[DEBUG]2025-06-27 10:30:45,568: None
[DEBUG]2025-06-27 10:30:45,568: None
[DEBUG]2025-06-27 10:30:45,568: None
[DEBUG]2025-06-27 10:30:45,568: None
[DEBUG]2025-06-27 10:30:45,568: None
[DEBUG]2025-06-27 10:30:45,568: None
[DEBUG]2025-06-27 10:30:45,568: None
[DEBUG]2025-06-27 10:30:45,568: None
[DEBUG]2025-06-27 10:30:45,568: None
[DEBUG]2025-06-27 10:30:45,568: None
[DEBUG]2025-06-27 10:30:45,570: None
[DEBUG]2025-06-27 10:30:45,570: None
[DEBUG]2025-06-27 10:30:45,570: None
[DEBUG]2025-06-27 10:30:45,570: None
[DEBUG]2025-06-27 10:30:45,570: None
[DEBUG]2025-06-27 10:30:45,570: None
[DEBUG]2025-06-27 10:30:45,570: None
[DEBUG]2025-06-27 10:30:45,570: None
[DEBUG]2025-06-27 10:30:45,570: None
[DEBUG]2025-06-27 10:30:45,570: None
[DEBUG]2025-06-27 10:30:45,570: None
[DEBUG]2025-06-27 10:30:45,570: None
[DEBUG]2025-06-27 10:30:45,570: None
[DEBUG]2025-06-27 10:30:45,570: None
[DEBUG]2025-06-27 10:30:45,570: None
[DEBUG]2025-06-27 10:30:45,572: None
[DEBUG]2025-06-27 10:30:45,572: None
[DEBUG]2025-06-27 10:30:45,572: None
[DEBUG]2025-06-27 10:30:45,572: None
[DEBUG]2025-06-27 10:30:45,572: None
[DEBUG]2025-06-27 10:30:45,572: None
[DEBUG]2025-06-27 10:30:45,572: None
[DEBUG]2025-06-27 10:30:45,572: None
[DEBUG]2025-06-27 10:30:45,572: None
[DEBUG]2025-06-27 10:30:45,572: None
[DEBUG]2025-06-27 10:30:45,572: None
[DEBUG]2025-06-27 10:30:45,572: None
[DEBUG]2025-06-27 10:30:45,572: None
[DEBUG]2025-06-27 10:30:45,572: None
[DEBUG]2025-06-27 10:30:45,572: None
[DEBUG]2025-06-27 10:30:45,572: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,574: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,575: None
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,577: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,578: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,579: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,581: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,583: None
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,585: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,587: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,588: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,590: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:30:45,592: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,123: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:36:22,123: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:36:22,124: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:36:22,128: None
[DEBUG]2025-06-27 10:36:22,128: None
[DEBUG]2025-06-27 10:36:22,130: None
[DEBUG]2025-06-27 10:36:22,130: None
[DEBUG]2025-06-27 10:36:22,130: None
[DEBUG]2025-06-27 10:36:22,132: None
[DEBUG]2025-06-27 10:36:22,132: None
[DEBUG]2025-06-27 10:36:22,132: None
[DEBUG]2025-06-27 10:36:22,132: None
[DEBUG]2025-06-27 10:36:22,133: None
[DEBUG]2025-06-27 10:36:22,133: None
[DEBUG]2025-06-27 10:36:22,133: None
[DEBUG]2025-06-27 10:36:22,133: None
[DEBUG]2025-06-27 10:36:22,133: None
[DEBUG]2025-06-27 10:36:22,134: None
[DEBUG]2025-06-27 10:36:22,134: None
[DEBUG]2025-06-27 10:36:22,134: None
[DEBUG]2025-06-27 10:36:22,134: None
[DEBUG]2025-06-27 10:36:22,134: None
[DEBUG]2025-06-27 10:36:22,134: None
[DEBUG]2025-06-27 10:36:22,136: None
[DEBUG]2025-06-27 10:36:22,136: None
[DEBUG]2025-06-27 10:36:22,136: None
[DEBUG]2025-06-27 10:36:22,136: None
[DEBUG]2025-06-27 10:36:22,136: None
[DEBUG]2025-06-27 10:36:22,136: None
[DEBUG]2025-06-27 10:36:22,136: None
[DEBUG]2025-06-27 10:36:22,137: None
[DEBUG]2025-06-27 10:36:22,137: None
[DEBUG]2025-06-27 10:36:22,137: None
[DEBUG]2025-06-27 10:36:22,137: None
[DEBUG]2025-06-27 10:36:22,137: None
[DEBUG]2025-06-27 10:36:22,137: None
[DEBUG]2025-06-27 10:36:22,137: None
[DEBUG]2025-06-27 10:36:22,137: None
[DEBUG]2025-06-27 10:36:22,139: None
[DEBUG]2025-06-27 10:36:22,139: None
[DEBUG]2025-06-27 10:36:22,139: None
[DEBUG]2025-06-27 10:36:22,139: None
[DEBUG]2025-06-27 10:36:22,139: None
[DEBUG]2025-06-27 10:36:22,139: None
[DEBUG]2025-06-27 10:36:22,139: None
[DEBUG]2025-06-27 10:36:22,139: None
[DEBUG]2025-06-27 10:36:22,139: None
[DEBUG]2025-06-27 10:36:22,141: None
[DEBUG]2025-06-27 10:36:22,141: None
[DEBUG]2025-06-27 10:36:22,141: None
[DEBUG]2025-06-27 10:36:22,141: None
[DEBUG]2025-06-27 10:36:22,141: None
[DEBUG]2025-06-27 10:36:22,141: None
[DEBUG]2025-06-27 10:36:22,141: None
[DEBUG]2025-06-27 10:36:22,141: None
[DEBUG]2025-06-27 10:36:22,141: None
[DEBUG]2025-06-27 10:36:22,141: None
[DEBUG]2025-06-27 10:36:22,143: None
[DEBUG]2025-06-27 10:36:22,143: None
[DEBUG]2025-06-27 10:36:22,143: None
[DEBUG]2025-06-27 10:36:22,143: None
[DEBUG]2025-06-27 10:36:22,143: None
[DEBUG]2025-06-27 10:36:22,143: None
[DEBUG]2025-06-27 10:36:22,143: None
[DEBUG]2025-06-27 10:36:22,143: None
[DEBUG]2025-06-27 10:36:22,143: None
[DEBUG]2025-06-27 10:36:22,143: None
[DEBUG]2025-06-27 10:36:22,143: None
[DEBUG]2025-06-27 10:36:22,145: None
[DEBUG]2025-06-27 10:36:22,145: None
[DEBUG]2025-06-27 10:36:22,145: None
[DEBUG]2025-06-27 10:36:22,145: None
[DEBUG]2025-06-27 10:36:22,145: None
[DEBUG]2025-06-27 10:36:22,145: None
[DEBUG]2025-06-27 10:36:22,145: None
[DEBUG]2025-06-27 10:36:22,145: None
[DEBUG]2025-06-27 10:36:22,145: None
[DEBUG]2025-06-27 10:36:22,145: None
[DEBUG]2025-06-27 10:36:22,145: None
[DEBUG]2025-06-27 10:36:22,145: None
[DEBUG]2025-06-27 10:36:22,148: None
[DEBUG]2025-06-27 10:36:22,148: None
[DEBUG]2025-06-27 10:36:22,148: None
[DEBUG]2025-06-27 10:36:22,148: None
[DEBUG]2025-06-27 10:36:22,148: None
[DEBUG]2025-06-27 10:36:22,148: None
[DEBUG]2025-06-27 10:36:22,148: None
[DEBUG]2025-06-27 10:36:22,148: None
[DEBUG]2025-06-27 10:36:22,148: None
[DEBUG]2025-06-27 10:36:22,148: None
[DEBUG]2025-06-27 10:36:22,148: None
[DEBUG]2025-06-27 10:36:22,148: None
[DEBUG]2025-06-27 10:36:22,148: None
[DEBUG]2025-06-27 10:36:22,150: None
[DEBUG]2025-06-27 10:36:22,150: None
[DEBUG]2025-06-27 10:36:22,150: None
[DEBUG]2025-06-27 10:36:22,150: None
[DEBUG]2025-06-27 10:36:22,150: None
[DEBUG]2025-06-27 10:36:22,150: None
[DEBUG]2025-06-27 10:36:22,150: None
[DEBUG]2025-06-27 10:36:22,150: None
[DEBUG]2025-06-27 10:36:22,150: None
[DEBUG]2025-06-27 10:36:22,150: None
[DEBUG]2025-06-27 10:36:22,150: None
[DEBUG]2025-06-27 10:36:22,150: None
[DEBUG]2025-06-27 10:36:22,150: None
[DEBUG]2025-06-27 10:36:22,150: None
[DEBUG]2025-06-27 10:36:22,152: None
[DEBUG]2025-06-27 10:36:22,152: None
[DEBUG]2025-06-27 10:36:22,152: None
[DEBUG]2025-06-27 10:36:22,152: None
[DEBUG]2025-06-27 10:36:22,152: None
[DEBUG]2025-06-27 10:36:22,152: None
[DEBUG]2025-06-27 10:36:22,152: None
[DEBUG]2025-06-27 10:36:22,152: None
[DEBUG]2025-06-27 10:36:22,152: None
[DEBUG]2025-06-27 10:36:22,152: None
[DEBUG]2025-06-27 10:36:22,152: None
[DEBUG]2025-06-27 10:36:22,152: None
[DEBUG]2025-06-27 10:36:22,152: None
[DEBUG]2025-06-27 10:36:22,152: None
[DEBUG]2025-06-27 10:36:22,152: None
[DEBUG]2025-06-27 10:36:22,154: None
[DEBUG]2025-06-27 10:36:22,154: None
[DEBUG]2025-06-27 10:36:22,154: None
[DEBUG]2025-06-27 10:36:22,154: None
[DEBUG]2025-06-27 10:36:22,154: None
[DEBUG]2025-06-27 10:36:22,154: None
[DEBUG]2025-06-27 10:36:22,154: None
[DEBUG]2025-06-27 10:36:22,154: None
[DEBUG]2025-06-27 10:36:22,154: None
[DEBUG]2025-06-27 10:36:22,154: None
[DEBUG]2025-06-27 10:36:22,154: None
[DEBUG]2025-06-27 10:36:22,154: None
[DEBUG]2025-06-27 10:36:22,154: None
[DEBUG]2025-06-27 10:36:22,154: None
[DEBUG]2025-06-27 10:36:22,154: None
[DEBUG]2025-06-27 10:36:22,154: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,156: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,158: None
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,159: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,160: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,162: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,164: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,166: None
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,169: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,170: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,171: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,173: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,175: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:36:22,176: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,253: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:38:21,254: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:38:21,254: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:38:21,261: None
[DEBUG]2025-06-27 10:38:21,261: None
[DEBUG]2025-06-27 10:38:21,262: None
[DEBUG]2025-06-27 10:38:21,262: None
[DEBUG]2025-06-27 10:38:21,262: None
[DEBUG]2025-06-27 10:38:21,263: None
[DEBUG]2025-06-27 10:38:21,263: None
[DEBUG]2025-06-27 10:38:21,263: None
[DEBUG]2025-06-27 10:38:21,263: None
[DEBUG]2025-06-27 10:38:21,265: None
[DEBUG]2025-06-27 10:38:21,265: None
[DEBUG]2025-06-27 10:38:21,265: None
[DEBUG]2025-06-27 10:38:21,265: None
[DEBUG]2025-06-27 10:38:21,265: None
[DEBUG]2025-06-27 10:38:21,266: None
[DEBUG]2025-06-27 10:38:21,266: None
[DEBUG]2025-06-27 10:38:21,266: None
[DEBUG]2025-06-27 10:38:21,266: None
[DEBUG]2025-06-27 10:38:21,266: None
[DEBUG]2025-06-27 10:38:21,266: None
[DEBUG]2025-06-27 10:38:21,268: None
[DEBUG]2025-06-27 10:38:21,268: None
[DEBUG]2025-06-27 10:38:21,268: None
[DEBUG]2025-06-27 10:38:21,268: None
[DEBUG]2025-06-27 10:38:21,268: None
[DEBUG]2025-06-27 10:38:21,268: None
[DEBUG]2025-06-27 10:38:21,268: None
[DEBUG]2025-06-27 10:38:21,269: None
[DEBUG]2025-06-27 10:38:21,269: None
[DEBUG]2025-06-27 10:38:21,269: None
[DEBUG]2025-06-27 10:38:21,269: None
[DEBUG]2025-06-27 10:38:21,269: None
[DEBUG]2025-06-27 10:38:21,269: None
[DEBUG]2025-06-27 10:38:21,269: None
[DEBUG]2025-06-27 10:38:21,269: None
[DEBUG]2025-06-27 10:38:21,271: None
[DEBUG]2025-06-27 10:38:21,271: None
[DEBUG]2025-06-27 10:38:21,271: None
[DEBUG]2025-06-27 10:38:21,271: None
[DEBUG]2025-06-27 10:38:21,271: None
[DEBUG]2025-06-27 10:38:21,271: None
[DEBUG]2025-06-27 10:38:21,271: None
[DEBUG]2025-06-27 10:38:21,271: None
[DEBUG]2025-06-27 10:38:21,271: None
[DEBUG]2025-06-27 10:38:21,274: None
[DEBUG]2025-06-27 10:38:21,274: None
[DEBUG]2025-06-27 10:38:21,274: None
[DEBUG]2025-06-27 10:38:21,274: None
[DEBUG]2025-06-27 10:38:21,274: None
[DEBUG]2025-06-27 10:38:21,274: None
[DEBUG]2025-06-27 10:38:21,274: None
[DEBUG]2025-06-27 10:38:21,274: None
[DEBUG]2025-06-27 10:38:21,274: None
[DEBUG]2025-06-27 10:38:21,274: None
[DEBUG]2025-06-27 10:38:21,276: None
[DEBUG]2025-06-27 10:38:21,276: None
[DEBUG]2025-06-27 10:38:21,276: None
[DEBUG]2025-06-27 10:38:21,276: None
[DEBUG]2025-06-27 10:38:21,276: None
[DEBUG]2025-06-27 10:38:21,276: None
[DEBUG]2025-06-27 10:38:21,276: None
[DEBUG]2025-06-27 10:38:21,276: None
[DEBUG]2025-06-27 10:38:21,276: None
[DEBUG]2025-06-27 10:38:21,276: None
[DEBUG]2025-06-27 10:38:21,276: None
[DEBUG]2025-06-27 10:38:21,278: None
[DEBUG]2025-06-27 10:38:21,278: None
[DEBUG]2025-06-27 10:38:21,278: None
[DEBUG]2025-06-27 10:38:21,278: None
[DEBUG]2025-06-27 10:38:21,278: None
[DEBUG]2025-06-27 10:38:21,278: None
[DEBUG]2025-06-27 10:38:21,278: None
[DEBUG]2025-06-27 10:38:21,278: None
[DEBUG]2025-06-27 10:38:21,278: None
[DEBUG]2025-06-27 10:38:21,278: None
[DEBUG]2025-06-27 10:38:21,278: None
[DEBUG]2025-06-27 10:38:21,278: None
[DEBUG]2025-06-27 10:38:21,281: None
[DEBUG]2025-06-27 10:38:21,281: None
[DEBUG]2025-06-27 10:38:21,281: None
[DEBUG]2025-06-27 10:38:21,281: None
[DEBUG]2025-06-27 10:38:21,281: None
[DEBUG]2025-06-27 10:38:21,281: None
[DEBUG]2025-06-27 10:38:21,281: None
[DEBUG]2025-06-27 10:38:21,281: None
[DEBUG]2025-06-27 10:38:21,281: None
[DEBUG]2025-06-27 10:38:21,281: None
[DEBUG]2025-06-27 10:38:21,281: None
[DEBUG]2025-06-27 10:38:21,281: None
[DEBUG]2025-06-27 10:38:21,281: None
[DEBUG]2025-06-27 10:38:21,284: None
[DEBUG]2025-06-27 10:38:21,284: None
[DEBUG]2025-06-27 10:38:21,284: None
[DEBUG]2025-06-27 10:38:21,284: None
[DEBUG]2025-06-27 10:38:21,284: None
[DEBUG]2025-06-27 10:38:21,284: None
[DEBUG]2025-06-27 10:38:21,284: None
[DEBUG]2025-06-27 10:38:21,284: None
[DEBUG]2025-06-27 10:38:21,284: None
[DEBUG]2025-06-27 10:38:21,284: None
[DEBUG]2025-06-27 10:38:21,284: None
[DEBUG]2025-06-27 10:38:21,284: None
[DEBUG]2025-06-27 10:38:21,284: None
[DEBUG]2025-06-27 10:38:21,284: None
[DEBUG]2025-06-27 10:38:21,287: None
[DEBUG]2025-06-27 10:38:21,287: None
[DEBUG]2025-06-27 10:38:21,287: None
[DEBUG]2025-06-27 10:38:21,287: None
[DEBUG]2025-06-27 10:38:21,287: None
[DEBUG]2025-06-27 10:38:21,287: None
[DEBUG]2025-06-27 10:38:21,287: None
[DEBUG]2025-06-27 10:38:21,287: None
[DEBUG]2025-06-27 10:38:21,287: None
[DEBUG]2025-06-27 10:38:21,287: None
[DEBUG]2025-06-27 10:38:21,287: None
[DEBUG]2025-06-27 10:38:21,287: None
[DEBUG]2025-06-27 10:38:21,287: None
[DEBUG]2025-06-27 10:38:21,287: None
[DEBUG]2025-06-27 10:38:21,287: None
[DEBUG]2025-06-27 10:38:21,292: None
[DEBUG]2025-06-27 10:38:21,292: None
[DEBUG]2025-06-27 10:38:21,292: None
[DEBUG]2025-06-27 10:38:21,292: None
[DEBUG]2025-06-27 10:38:21,292: None
[DEBUG]2025-06-27 10:38:21,292: None
[DEBUG]2025-06-27 10:38:21,292: None
[DEBUG]2025-06-27 10:38:21,292: None
[DEBUG]2025-06-27 10:38:21,292: None
[DEBUG]2025-06-27 10:38:21,292: None
[DEBUG]2025-06-27 10:38:21,292: None
[DEBUG]2025-06-27 10:38:21,292: None
[DEBUG]2025-06-27 10:38:21,292: None
[DEBUG]2025-06-27 10:38:21,292: None
[DEBUG]2025-06-27 10:38:21,292: None
[DEBUG]2025-06-27 10:38:21,292: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,295: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,297: None
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,299: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,300: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,301: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,303: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,305: None
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,308: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,311: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:38:21,313: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,811: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:39:05,811: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:39:05,812: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:39:05,815: None
[DEBUG]2025-06-27 10:39:05,815: None
[DEBUG]2025-06-27 10:39:05,816: None
[DEBUG]2025-06-27 10:39:05,816: None
[DEBUG]2025-06-27 10:39:05,816: None
[DEBUG]2025-06-27 10:39:05,818: None
[DEBUG]2025-06-27 10:39:05,818: None
[DEBUG]2025-06-27 10:39:05,818: None
[DEBUG]2025-06-27 10:39:05,818: None
[DEBUG]2025-06-27 10:39:05,819: None
[DEBUG]2025-06-27 10:39:05,819: None
[DEBUG]2025-06-27 10:39:05,819: None
[DEBUG]2025-06-27 10:39:05,819: None
[DEBUG]2025-06-27 10:39:05,819: None
[DEBUG]2025-06-27 10:39:05,820: None
[DEBUG]2025-06-27 10:39:05,820: None
[DEBUG]2025-06-27 10:39:05,820: None
[DEBUG]2025-06-27 10:39:05,820: None
[DEBUG]2025-06-27 10:39:05,820: None
[DEBUG]2025-06-27 10:39:05,820: None
[DEBUG]2025-06-27 10:39:05,821: None
[DEBUG]2025-06-27 10:39:05,821: None
[DEBUG]2025-06-27 10:39:05,821: None
[DEBUG]2025-06-27 10:39:05,821: None
[DEBUG]2025-06-27 10:39:05,821: None
[DEBUG]2025-06-27 10:39:05,821: None
[DEBUG]2025-06-27 10:39:05,821: None
[DEBUG]2025-06-27 10:39:05,822: None
[DEBUG]2025-06-27 10:39:05,822: None
[DEBUG]2025-06-27 10:39:05,822: None
[DEBUG]2025-06-27 10:39:05,822: None
[DEBUG]2025-06-27 10:39:05,822: None
[DEBUG]2025-06-27 10:39:05,822: None
[DEBUG]2025-06-27 10:39:05,822: None
[DEBUG]2025-06-27 10:39:05,822: None
[DEBUG]2025-06-27 10:39:05,823: None
[DEBUG]2025-06-27 10:39:05,823: None
[DEBUG]2025-06-27 10:39:05,823: None
[DEBUG]2025-06-27 10:39:05,823: None
[DEBUG]2025-06-27 10:39:05,823: None
[DEBUG]2025-06-27 10:39:05,823: None
[DEBUG]2025-06-27 10:39:05,823: None
[DEBUG]2025-06-27 10:39:05,823: None
[DEBUG]2025-06-27 10:39:05,823: None
[DEBUG]2025-06-27 10:39:05,824: None
[DEBUG]2025-06-27 10:39:05,824: None
[DEBUG]2025-06-27 10:39:05,824: None
[DEBUG]2025-06-27 10:39:05,824: None
[DEBUG]2025-06-27 10:39:05,824: None
[DEBUG]2025-06-27 10:39:05,824: None
[DEBUG]2025-06-27 10:39:05,824: None
[DEBUG]2025-06-27 10:39:05,824: None
[DEBUG]2025-06-27 10:39:05,824: None
[DEBUG]2025-06-27 10:39:05,824: None
[DEBUG]2025-06-27 10:39:05,826: None
[DEBUG]2025-06-27 10:39:05,826: None
[DEBUG]2025-06-27 10:39:05,826: None
[DEBUG]2025-06-27 10:39:05,826: None
[DEBUG]2025-06-27 10:39:05,826: None
[DEBUG]2025-06-27 10:39:05,826: None
[DEBUG]2025-06-27 10:39:05,826: None
[DEBUG]2025-06-27 10:39:05,826: None
[DEBUG]2025-06-27 10:39:05,826: None
[DEBUG]2025-06-27 10:39:05,826: None
[DEBUG]2025-06-27 10:39:05,826: None
[DEBUG]2025-06-27 10:39:05,827: None
[DEBUG]2025-06-27 10:39:05,827: None
[DEBUG]2025-06-27 10:39:05,827: None
[DEBUG]2025-06-27 10:39:05,827: None
[DEBUG]2025-06-27 10:39:05,827: None
[DEBUG]2025-06-27 10:39:05,827: None
[DEBUG]2025-06-27 10:39:05,827: None
[DEBUG]2025-06-27 10:39:05,827: None
[DEBUG]2025-06-27 10:39:05,827: None
[DEBUG]2025-06-27 10:39:05,827: None
[DEBUG]2025-06-27 10:39:05,827: None
[DEBUG]2025-06-27 10:39:05,827: None
[DEBUG]2025-06-27 10:39:05,829: None
[DEBUG]2025-06-27 10:39:05,829: None
[DEBUG]2025-06-27 10:39:05,829: None
[DEBUG]2025-06-27 10:39:05,829: None
[DEBUG]2025-06-27 10:39:05,829: None
[DEBUG]2025-06-27 10:39:05,829: None
[DEBUG]2025-06-27 10:39:05,829: None
[DEBUG]2025-06-27 10:39:05,829: None
[DEBUG]2025-06-27 10:39:05,829: None
[DEBUG]2025-06-27 10:39:05,829: None
[DEBUG]2025-06-27 10:39:05,829: None
[DEBUG]2025-06-27 10:39:05,829: None
[DEBUG]2025-06-27 10:39:05,829: None
[DEBUG]2025-06-27 10:39:05,830: None
[DEBUG]2025-06-27 10:39:05,830: None
[DEBUG]2025-06-27 10:39:05,830: None
[DEBUG]2025-06-27 10:39:05,830: None
[DEBUG]2025-06-27 10:39:05,830: None
[DEBUG]2025-06-27 10:39:05,830: None
[DEBUG]2025-06-27 10:39:05,830: None
[DEBUG]2025-06-27 10:39:05,830: None
[DEBUG]2025-06-27 10:39:05,830: None
[DEBUG]2025-06-27 10:39:05,830: None
[DEBUG]2025-06-27 10:39:05,830: None
[DEBUG]2025-06-27 10:39:05,830: None
[DEBUG]2025-06-27 10:39:05,830: None
[DEBUG]2025-06-27 10:39:05,830: None
[DEBUG]2025-06-27 10:39:05,831: None
[DEBUG]2025-06-27 10:39:05,831: None
[DEBUG]2025-06-27 10:39:05,831: None
[DEBUG]2025-06-27 10:39:05,831: None
[DEBUG]2025-06-27 10:39:05,831: None
[DEBUG]2025-06-27 10:39:05,831: None
[DEBUG]2025-06-27 10:39:05,831: None
[DEBUG]2025-06-27 10:39:05,831: None
[DEBUG]2025-06-27 10:39:05,831: None
[DEBUG]2025-06-27 10:39:05,831: None
[DEBUG]2025-06-27 10:39:05,831: None
[DEBUG]2025-06-27 10:39:05,831: None
[DEBUG]2025-06-27 10:39:05,831: None
[DEBUG]2025-06-27 10:39:05,831: None
[DEBUG]2025-06-27 10:39:05,831: None
[DEBUG]2025-06-27 10:39:05,832: None
[DEBUG]2025-06-27 10:39:05,832: None
[DEBUG]2025-06-27 10:39:05,832: None
[DEBUG]2025-06-27 10:39:05,832: None
[DEBUG]2025-06-27 10:39:05,832: None
[DEBUG]2025-06-27 10:39:05,832: None
[DEBUG]2025-06-27 10:39:05,832: None
[DEBUG]2025-06-27 10:39:05,832: None
[DEBUG]2025-06-27 10:39:05,832: None
[DEBUG]2025-06-27 10:39:05,832: None
[DEBUG]2025-06-27 10:39:05,832: None
[DEBUG]2025-06-27 10:39:05,832: None
[DEBUG]2025-06-27 10:39:05,832: None
[DEBUG]2025-06-27 10:39:05,832: None
[DEBUG]2025-06-27 10:39:05,832: None
[DEBUG]2025-06-27 10:39:05,832: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,834: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,835: None
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,837: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,838: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,840: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,841: None
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,842: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,843: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,845: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,846: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:39:05,847: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,183: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:40:44,189: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:40:44,189: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:40:44,195: None
[DEBUG]2025-06-27 10:40:44,195: None
[DEBUG]2025-06-27 10:40:44,196: None
[DEBUG]2025-06-27 10:40:44,196: None
[DEBUG]2025-06-27 10:40:44,196: None
[DEBUG]2025-06-27 10:40:44,198: None
[DEBUG]2025-06-27 10:40:44,198: None
[DEBUG]2025-06-27 10:40:44,198: None
[DEBUG]2025-06-27 10:40:44,198: None
[DEBUG]2025-06-27 10:40:44,199: None
[DEBUG]2025-06-27 10:40:44,199: None
[DEBUG]2025-06-27 10:40:44,199: None
[DEBUG]2025-06-27 10:40:44,199: None
[DEBUG]2025-06-27 10:40:44,199: None
[DEBUG]2025-06-27 10:40:44,201: None
[DEBUG]2025-06-27 10:40:44,201: None
[DEBUG]2025-06-27 10:40:44,201: None
[DEBUG]2025-06-27 10:40:44,201: None
[DEBUG]2025-06-27 10:40:44,201: None
[DEBUG]2025-06-27 10:40:44,201: None
[DEBUG]2025-06-27 10:40:44,202: None
[DEBUG]2025-06-27 10:40:44,202: None
[DEBUG]2025-06-27 10:40:44,202: None
[DEBUG]2025-06-27 10:40:44,202: None
[DEBUG]2025-06-27 10:40:44,202: None
[DEBUG]2025-06-27 10:40:44,202: None
[DEBUG]2025-06-27 10:40:44,202: None
[DEBUG]2025-06-27 10:40:44,204: None
[DEBUG]2025-06-27 10:40:44,204: None
[DEBUG]2025-06-27 10:40:44,204: None
[DEBUG]2025-06-27 10:40:44,204: None
[DEBUG]2025-06-27 10:40:44,204: None
[DEBUG]2025-06-27 10:40:44,204: None
[DEBUG]2025-06-27 10:40:44,204: None
[DEBUG]2025-06-27 10:40:44,204: None
[DEBUG]2025-06-27 10:40:44,205: None
[DEBUG]2025-06-27 10:40:44,205: None
[DEBUG]2025-06-27 10:40:44,205: None
[DEBUG]2025-06-27 10:40:44,205: None
[DEBUG]2025-06-27 10:40:44,205: None
[DEBUG]2025-06-27 10:40:44,205: None
[DEBUG]2025-06-27 10:40:44,205: None
[DEBUG]2025-06-27 10:40:44,205: None
[DEBUG]2025-06-27 10:40:44,205: None
[DEBUG]2025-06-27 10:40:44,207: None
[DEBUG]2025-06-27 10:40:44,207: None
[DEBUG]2025-06-27 10:40:44,207: None
[DEBUG]2025-06-27 10:40:44,207: None
[DEBUG]2025-06-27 10:40:44,207: None
[DEBUG]2025-06-27 10:40:44,207: None
[DEBUG]2025-06-27 10:40:44,207: None
[DEBUG]2025-06-27 10:40:44,207: None
[DEBUG]2025-06-27 10:40:44,207: None
[DEBUG]2025-06-27 10:40:44,207: None
[DEBUG]2025-06-27 10:40:44,209: None
[DEBUG]2025-06-27 10:40:44,209: None
[DEBUG]2025-06-27 10:40:44,209: None
[DEBUG]2025-06-27 10:40:44,209: None
[DEBUG]2025-06-27 10:40:44,209: None
[DEBUG]2025-06-27 10:40:44,209: None
[DEBUG]2025-06-27 10:40:44,209: None
[DEBUG]2025-06-27 10:40:44,209: None
[DEBUG]2025-06-27 10:40:44,209: None
[DEBUG]2025-06-27 10:40:44,209: None
[DEBUG]2025-06-27 10:40:44,209: None
[DEBUG]2025-06-27 10:40:44,210: None
[DEBUG]2025-06-27 10:40:44,210: None
[DEBUG]2025-06-27 10:40:44,210: None
[DEBUG]2025-06-27 10:40:44,210: None
[DEBUG]2025-06-27 10:40:44,210: None
[DEBUG]2025-06-27 10:40:44,210: None
[DEBUG]2025-06-27 10:40:44,210: None
[DEBUG]2025-06-27 10:40:44,210: None
[DEBUG]2025-06-27 10:40:44,210: None
[DEBUG]2025-06-27 10:40:44,210: None
[DEBUG]2025-06-27 10:40:44,210: None
[DEBUG]2025-06-27 10:40:44,210: None
[DEBUG]2025-06-27 10:40:44,212: None
[DEBUG]2025-06-27 10:40:44,212: None
[DEBUG]2025-06-27 10:40:44,212: None
[DEBUG]2025-06-27 10:40:44,212: None
[DEBUG]2025-06-27 10:40:44,212: None
[DEBUG]2025-06-27 10:40:44,212: None
[DEBUG]2025-06-27 10:40:44,212: None
[DEBUG]2025-06-27 10:40:44,212: None
[DEBUG]2025-06-27 10:40:44,212: None
[DEBUG]2025-06-27 10:40:44,212: None
[DEBUG]2025-06-27 10:40:44,212: None
[DEBUG]2025-06-27 10:40:44,212: None
[DEBUG]2025-06-27 10:40:44,212: None
[DEBUG]2025-06-27 10:40:44,214: None
[DEBUG]2025-06-27 10:40:44,214: None
[DEBUG]2025-06-27 10:40:44,214: None
[DEBUG]2025-06-27 10:40:44,214: None
[DEBUG]2025-06-27 10:40:44,214: None
[DEBUG]2025-06-27 10:40:44,214: None
[DEBUG]2025-06-27 10:40:44,214: None
[DEBUG]2025-06-27 10:40:44,214: None
[DEBUG]2025-06-27 10:40:44,214: None
[DEBUG]2025-06-27 10:40:44,214: None
[DEBUG]2025-06-27 10:40:44,214: None
[DEBUG]2025-06-27 10:40:44,214: None
[DEBUG]2025-06-27 10:40:44,214: None
[DEBUG]2025-06-27 10:40:44,214: None
[DEBUG]2025-06-27 10:40:44,215: None
[DEBUG]2025-06-27 10:40:44,215: None
[DEBUG]2025-06-27 10:40:44,215: None
[DEBUG]2025-06-27 10:40:44,215: None
[DEBUG]2025-06-27 10:40:44,215: None
[DEBUG]2025-06-27 10:40:44,215: None
[DEBUG]2025-06-27 10:40:44,215: None
[DEBUG]2025-06-27 10:40:44,215: None
[DEBUG]2025-06-27 10:40:44,215: None
[DEBUG]2025-06-27 10:40:44,215: None
[DEBUG]2025-06-27 10:40:44,215: None
[DEBUG]2025-06-27 10:40:44,215: None
[DEBUG]2025-06-27 10:40:44,215: None
[DEBUG]2025-06-27 10:40:44,215: None
[DEBUG]2025-06-27 10:40:44,215: None
[DEBUG]2025-06-27 10:40:44,217: None
[DEBUG]2025-06-27 10:40:44,217: None
[DEBUG]2025-06-27 10:40:44,217: None
[DEBUG]2025-06-27 10:40:44,217: None
[DEBUG]2025-06-27 10:40:44,217: None
[DEBUG]2025-06-27 10:40:44,217: None
[DEBUG]2025-06-27 10:40:44,217: None
[DEBUG]2025-06-27 10:40:44,217: None
[DEBUG]2025-06-27 10:40:44,217: None
[DEBUG]2025-06-27 10:40:44,217: None
[DEBUG]2025-06-27 10:40:44,217: None
[DEBUG]2025-06-27 10:40:44,217: None
[DEBUG]2025-06-27 10:40:44,217: None
[DEBUG]2025-06-27 10:40:44,217: None
[DEBUG]2025-06-27 10:40:44,217: None
[DEBUG]2025-06-27 10:40:44,217: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,219: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,220: None
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,222: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,223: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,224: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,226: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,228: None
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,230: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,231: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,235: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,236: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:44,237: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,872: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:40:56,873: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:40:56,873: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:40:56,876: None
[DEBUG]2025-06-27 10:40:56,876: None
[DEBUG]2025-06-27 10:40:56,876: None
[DEBUG]2025-06-27 10:40:56,876: None
[DEBUG]2025-06-27 10:40:56,876: None
[DEBUG]2025-06-27 10:40:56,877: None
[DEBUG]2025-06-27 10:40:56,877: None
[DEBUG]2025-06-27 10:40:56,877: None
[DEBUG]2025-06-27 10:40:56,877: None
[DEBUG]2025-06-27 10:40:56,878: None
[DEBUG]2025-06-27 10:40:56,878: None
[DEBUG]2025-06-27 10:40:56,878: None
[DEBUG]2025-06-27 10:40:56,878: None
[DEBUG]2025-06-27 10:40:56,878: None
[DEBUG]2025-06-27 10:40:56,879: None
[DEBUG]2025-06-27 10:40:56,879: None
[DEBUG]2025-06-27 10:40:56,879: None
[DEBUG]2025-06-27 10:40:56,879: None
[DEBUG]2025-06-27 10:40:56,879: None
[DEBUG]2025-06-27 10:40:56,879: None
[DEBUG]2025-06-27 10:40:56,880: None
[DEBUG]2025-06-27 10:40:56,880: None
[DEBUG]2025-06-27 10:40:56,880: None
[DEBUG]2025-06-27 10:40:56,880: None
[DEBUG]2025-06-27 10:40:56,880: None
[DEBUG]2025-06-27 10:40:56,880: None
[DEBUG]2025-06-27 10:40:56,880: None
[DEBUG]2025-06-27 10:40:56,882: None
[DEBUG]2025-06-27 10:40:56,882: None
[DEBUG]2025-06-27 10:40:56,882: None
[DEBUG]2025-06-27 10:40:56,882: None
[DEBUG]2025-06-27 10:40:56,882: None
[DEBUG]2025-06-27 10:40:56,882: None
[DEBUG]2025-06-27 10:40:56,882: None
[DEBUG]2025-06-27 10:40:56,882: None
[DEBUG]2025-06-27 10:40:56,883: None
[DEBUG]2025-06-27 10:40:56,883: None
[DEBUG]2025-06-27 10:40:56,883: None
[DEBUG]2025-06-27 10:40:56,883: None
[DEBUG]2025-06-27 10:40:56,883: None
[DEBUG]2025-06-27 10:40:56,883: None
[DEBUG]2025-06-27 10:40:56,883: None
[DEBUG]2025-06-27 10:40:56,883: None
[DEBUG]2025-06-27 10:40:56,883: None
[DEBUG]2025-06-27 10:40:56,884: None
[DEBUG]2025-06-27 10:40:56,884: None
[DEBUG]2025-06-27 10:40:56,884: None
[DEBUG]2025-06-27 10:40:56,884: None
[DEBUG]2025-06-27 10:40:56,884: None
[DEBUG]2025-06-27 10:40:56,884: None
[DEBUG]2025-06-27 10:40:56,884: None
[DEBUG]2025-06-27 10:40:56,884: None
[DEBUG]2025-06-27 10:40:56,884: None
[DEBUG]2025-06-27 10:40:56,884: None
[DEBUG]2025-06-27 10:40:56,886: None
[DEBUG]2025-06-27 10:40:56,886: None
[DEBUG]2025-06-27 10:40:56,886: None
[DEBUG]2025-06-27 10:40:56,886: None
[DEBUG]2025-06-27 10:40:56,886: None
[DEBUG]2025-06-27 10:40:56,886: None
[DEBUG]2025-06-27 10:40:56,886: None
[DEBUG]2025-06-27 10:40:56,886: None
[DEBUG]2025-06-27 10:40:56,886: None
[DEBUG]2025-06-27 10:40:56,886: None
[DEBUG]2025-06-27 10:40:56,886: None
[DEBUG]2025-06-27 10:40:56,887: None
[DEBUG]2025-06-27 10:40:56,887: None
[DEBUG]2025-06-27 10:40:56,887: None
[DEBUG]2025-06-27 10:40:56,887: None
[DEBUG]2025-06-27 10:40:56,887: None
[DEBUG]2025-06-27 10:40:56,887: None
[DEBUG]2025-06-27 10:40:56,887: None
[DEBUG]2025-06-27 10:40:56,887: None
[DEBUG]2025-06-27 10:40:56,887: None
[DEBUG]2025-06-27 10:40:56,887: None
[DEBUG]2025-06-27 10:40:56,887: None
[DEBUG]2025-06-27 10:40:56,887: None
[DEBUG]2025-06-27 10:40:56,888: None
[DEBUG]2025-06-27 10:40:56,888: None
[DEBUG]2025-06-27 10:40:56,888: None
[DEBUG]2025-06-27 10:40:56,888: None
[DEBUG]2025-06-27 10:40:56,888: None
[DEBUG]2025-06-27 10:40:56,888: None
[DEBUG]2025-06-27 10:40:56,888: None
[DEBUG]2025-06-27 10:40:56,888: None
[DEBUG]2025-06-27 10:40:56,888: None
[DEBUG]2025-06-27 10:40:56,888: None
[DEBUG]2025-06-27 10:40:56,888: None
[DEBUG]2025-06-27 10:40:56,888: None
[DEBUG]2025-06-27 10:40:56,888: None
[DEBUG]2025-06-27 10:40:56,889: None
[DEBUG]2025-06-27 10:40:56,889: None
[DEBUG]2025-06-27 10:40:56,889: None
[DEBUG]2025-06-27 10:40:56,889: None
[DEBUG]2025-06-27 10:40:56,889: None
[DEBUG]2025-06-27 10:40:56,889: None
[DEBUG]2025-06-27 10:40:56,889: None
[DEBUG]2025-06-27 10:40:56,889: None
[DEBUG]2025-06-27 10:40:56,889: None
[DEBUG]2025-06-27 10:40:56,889: None
[DEBUG]2025-06-27 10:40:56,889: None
[DEBUG]2025-06-27 10:40:56,889: None
[DEBUG]2025-06-27 10:40:56,889: None
[DEBUG]2025-06-27 10:40:56,889: None
[DEBUG]2025-06-27 10:40:56,890: None
[DEBUG]2025-06-27 10:40:56,890: None
[DEBUG]2025-06-27 10:40:56,890: None
[DEBUG]2025-06-27 10:40:56,890: None
[DEBUG]2025-06-27 10:40:56,890: None
[DEBUG]2025-06-27 10:40:56,890: None
[DEBUG]2025-06-27 10:40:56,890: None
[DEBUG]2025-06-27 10:40:56,890: None
[DEBUG]2025-06-27 10:40:56,890: None
[DEBUG]2025-06-27 10:40:56,890: None
[DEBUG]2025-06-27 10:40:56,890: None
[DEBUG]2025-06-27 10:40:56,890: None
[DEBUG]2025-06-27 10:40:56,890: None
[DEBUG]2025-06-27 10:40:56,890: None
[DEBUG]2025-06-27 10:40:56,890: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,892: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,893: None
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,894: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,895: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,896: None
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,897: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,898: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,899: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,900: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:40:56,901: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,810: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:43:38,811: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:43:38,811: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:43:38,816: None
[DEBUG]2025-06-27 10:43:38,816: None
[DEBUG]2025-06-27 10:43:38,817: None
[DEBUG]2025-06-27 10:43:38,817: None
[DEBUG]2025-06-27 10:43:38,817: None
[DEBUG]2025-06-27 10:43:38,819: None
[DEBUG]2025-06-27 10:43:38,819: None
[DEBUG]2025-06-27 10:43:38,819: None
[DEBUG]2025-06-27 10:43:38,819: None
[DEBUG]2025-06-27 10:43:38,820: None
[DEBUG]2025-06-27 10:43:38,820: None
[DEBUG]2025-06-27 10:43:38,820: None
[DEBUG]2025-06-27 10:43:38,820: None
[DEBUG]2025-06-27 10:43:38,820: None
[DEBUG]2025-06-27 10:43:38,822: None
[DEBUG]2025-06-27 10:43:38,822: None
[DEBUG]2025-06-27 10:43:38,822: None
[DEBUG]2025-06-27 10:43:38,822: None
[DEBUG]2025-06-27 10:43:38,822: None
[DEBUG]2025-06-27 10:43:38,822: None
[DEBUG]2025-06-27 10:43:38,823: None
[DEBUG]2025-06-27 10:43:38,823: None
[DEBUG]2025-06-27 10:43:38,823: None
[DEBUG]2025-06-27 10:43:38,823: None
[DEBUG]2025-06-27 10:43:38,823: None
[DEBUG]2025-06-27 10:43:38,823: None
[DEBUG]2025-06-27 10:43:38,823: None
[DEBUG]2025-06-27 10:43:38,825: None
[DEBUG]2025-06-27 10:43:38,825: None
[DEBUG]2025-06-27 10:43:38,825: None
[DEBUG]2025-06-27 10:43:38,825: None
[DEBUG]2025-06-27 10:43:38,825: None
[DEBUG]2025-06-27 10:43:38,825: None
[DEBUG]2025-06-27 10:43:38,825: None
[DEBUG]2025-06-27 10:43:38,825: None
[DEBUG]2025-06-27 10:43:38,826: None
[DEBUG]2025-06-27 10:43:38,826: None
[DEBUG]2025-06-27 10:43:38,826: None
[DEBUG]2025-06-27 10:43:38,826: None
[DEBUG]2025-06-27 10:43:38,826: None
[DEBUG]2025-06-27 10:43:38,826: None
[DEBUG]2025-06-27 10:43:38,826: None
[DEBUG]2025-06-27 10:43:38,826: None
[DEBUG]2025-06-27 10:43:38,826: None
[DEBUG]2025-06-27 10:43:38,828: None
[DEBUG]2025-06-27 10:43:38,828: None
[DEBUG]2025-06-27 10:43:38,828: None
[DEBUG]2025-06-27 10:43:38,828: None
[DEBUG]2025-06-27 10:43:38,828: None
[DEBUG]2025-06-27 10:43:38,828: None
[DEBUG]2025-06-27 10:43:38,828: None
[DEBUG]2025-06-27 10:43:38,828: None
[DEBUG]2025-06-27 10:43:38,828: None
[DEBUG]2025-06-27 10:43:38,828: None
[DEBUG]2025-06-27 10:43:38,830: None
[DEBUG]2025-06-27 10:43:38,830: None
[DEBUG]2025-06-27 10:43:38,830: None
[DEBUG]2025-06-27 10:43:38,830: None
[DEBUG]2025-06-27 10:43:38,830: None
[DEBUG]2025-06-27 10:43:38,830: None
[DEBUG]2025-06-27 10:43:38,830: None
[DEBUG]2025-06-27 10:43:38,830: None
[DEBUG]2025-06-27 10:43:38,830: None
[DEBUG]2025-06-27 10:43:38,830: None
[DEBUG]2025-06-27 10:43:38,830: None
[DEBUG]2025-06-27 10:43:38,832: None
[DEBUG]2025-06-27 10:43:38,832: None
[DEBUG]2025-06-27 10:43:38,832: None
[DEBUG]2025-06-27 10:43:38,832: None
[DEBUG]2025-06-27 10:43:38,832: None
[DEBUG]2025-06-27 10:43:38,832: None
[DEBUG]2025-06-27 10:43:38,832: None
[DEBUG]2025-06-27 10:43:38,832: None
[DEBUG]2025-06-27 10:43:38,832: None
[DEBUG]2025-06-27 10:43:38,832: None
[DEBUG]2025-06-27 10:43:38,832: None
[DEBUG]2025-06-27 10:43:38,832: None
[DEBUG]2025-06-27 10:43:38,834: None
[DEBUG]2025-06-27 10:43:38,834: None
[DEBUG]2025-06-27 10:43:38,834: None
[DEBUG]2025-06-27 10:43:38,834: None
[DEBUG]2025-06-27 10:43:38,834: None
[DEBUG]2025-06-27 10:43:38,834: None
[DEBUG]2025-06-27 10:43:38,834: None
[DEBUG]2025-06-27 10:43:38,834: None
[DEBUG]2025-06-27 10:43:38,834: None
[DEBUG]2025-06-27 10:43:38,834: None
[DEBUG]2025-06-27 10:43:38,834: None
[DEBUG]2025-06-27 10:43:38,834: None
[DEBUG]2025-06-27 10:43:38,834: None
[DEBUG]2025-06-27 10:43:38,837: None
[DEBUG]2025-06-27 10:43:38,837: None
[DEBUG]2025-06-27 10:43:38,837: None
[DEBUG]2025-06-27 10:43:38,837: None
[DEBUG]2025-06-27 10:43:38,837: None
[DEBUG]2025-06-27 10:43:38,837: None
[DEBUG]2025-06-27 10:43:38,837: None
[DEBUG]2025-06-27 10:43:38,837: None
[DEBUG]2025-06-27 10:43:38,837: None
[DEBUG]2025-06-27 10:43:38,837: None
[DEBUG]2025-06-27 10:43:38,837: None
[DEBUG]2025-06-27 10:43:38,837: None
[DEBUG]2025-06-27 10:43:38,837: None
[DEBUG]2025-06-27 10:43:38,837: None
[DEBUG]2025-06-27 10:43:38,840: None
[DEBUG]2025-06-27 10:43:38,840: None
[DEBUG]2025-06-27 10:43:38,840: None
[DEBUG]2025-06-27 10:43:38,840: None
[DEBUG]2025-06-27 10:43:38,840: None
[DEBUG]2025-06-27 10:43:38,840: None
[DEBUG]2025-06-27 10:43:38,840: None
[DEBUG]2025-06-27 10:43:38,840: None
[DEBUG]2025-06-27 10:43:38,840: None
[DEBUG]2025-06-27 10:43:38,840: None
[DEBUG]2025-06-27 10:43:38,840: None
[DEBUG]2025-06-27 10:43:38,840: None
[DEBUG]2025-06-27 10:43:38,840: None
[DEBUG]2025-06-27 10:43:38,840: None
[DEBUG]2025-06-27 10:43:38,840: None
[DEBUG]2025-06-27 10:43:38,843: None
[DEBUG]2025-06-27 10:43:38,843: None
[DEBUG]2025-06-27 10:43:38,843: None
[DEBUG]2025-06-27 10:43:38,843: None
[DEBUG]2025-06-27 10:43:38,843: None
[DEBUG]2025-06-27 10:43:38,843: None
[DEBUG]2025-06-27 10:43:38,843: None
[DEBUG]2025-06-27 10:43:38,843: None
[DEBUG]2025-06-27 10:43:38,843: None
[DEBUG]2025-06-27 10:43:38,843: None
[DEBUG]2025-06-27 10:43:38,843: None
[DEBUG]2025-06-27 10:43:38,843: None
[DEBUG]2025-06-27 10:43:38,843: None
[DEBUG]2025-06-27 10:43:38,843: None
[DEBUG]2025-06-27 10:43:38,843: None
[DEBUG]2025-06-27 10:43:38,843: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,846: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,850: None
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,853: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,854: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,856: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,859: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,861: None
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,863: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,865: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,866: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,869: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,870: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:43:38,872: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,005: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:44:53,005: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:44:53,005: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:44:53,008: None
[DEBUG]2025-06-27 10:44:53,008: None
[DEBUG]2025-06-27 10:44:53,009: None
[DEBUG]2025-06-27 10:44:53,009: None
[DEBUG]2025-06-27 10:44:53,009: None
[DEBUG]2025-06-27 10:44:53,009: None
[DEBUG]2025-06-27 10:44:53,009: None
[DEBUG]2025-06-27 10:44:53,009: None
[DEBUG]2025-06-27 10:44:53,009: None
[DEBUG]2025-06-27 10:44:53,010: None
[DEBUG]2025-06-27 10:44:53,010: None
[DEBUG]2025-06-27 10:44:53,010: None
[DEBUG]2025-06-27 10:44:53,010: None
[DEBUG]2025-06-27 10:44:53,010: None
[DEBUG]2025-06-27 10:44:53,011: None
[DEBUG]2025-06-27 10:44:53,011: None
[DEBUG]2025-06-27 10:44:53,011: None
[DEBUG]2025-06-27 10:44:53,011: None
[DEBUG]2025-06-27 10:44:53,011: None
[DEBUG]2025-06-27 10:44:53,011: None
[DEBUG]2025-06-27 10:44:53,011: None
[DEBUG]2025-06-27 10:44:53,011: None
[DEBUG]2025-06-27 10:44:53,011: None
[DEBUG]2025-06-27 10:44:53,011: None
[DEBUG]2025-06-27 10:44:53,011: None
[DEBUG]2025-06-27 10:44:53,011: None
[DEBUG]2025-06-27 10:44:53,011: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,012: None
[DEBUG]2025-06-27 10:44:53,013: None
[DEBUG]2025-06-27 10:44:53,013: None
[DEBUG]2025-06-27 10:44:53,013: None
[DEBUG]2025-06-27 10:44:53,013: None
[DEBUG]2025-06-27 10:44:53,013: None
[DEBUG]2025-06-27 10:44:53,013: None
[DEBUG]2025-06-27 10:44:53,013: None
[DEBUG]2025-06-27 10:44:53,013: None
[DEBUG]2025-06-27 10:44:53,013: None
[DEBUG]2025-06-27 10:44:53,013: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,014: None
[DEBUG]2025-06-27 10:44:53,015: None
[DEBUG]2025-06-27 10:44:53,015: None
[DEBUG]2025-06-27 10:44:53,015: None
[DEBUG]2025-06-27 10:44:53,015: None
[DEBUG]2025-06-27 10:44:53,015: None
[DEBUG]2025-06-27 10:44:53,015: None
[DEBUG]2025-06-27 10:44:53,015: None
[DEBUG]2025-06-27 10:44:53,015: None
[DEBUG]2025-06-27 10:44:53,015: None
[DEBUG]2025-06-27 10:44:53,015: None
[DEBUG]2025-06-27 10:44:53,015: None
[DEBUG]2025-06-27 10:44:53,015: None
[DEBUG]2025-06-27 10:44:53,015: None
[DEBUG]2025-06-27 10:44:53,016: None
[DEBUG]2025-06-27 10:44:53,016: None
[DEBUG]2025-06-27 10:44:53,016: None
[DEBUG]2025-06-27 10:44:53,016: None
[DEBUG]2025-06-27 10:44:53,016: None
[DEBUG]2025-06-27 10:44:53,016: None
[DEBUG]2025-06-27 10:44:53,016: None
[DEBUG]2025-06-27 10:44:53,016: None
[DEBUG]2025-06-27 10:44:53,016: None
[DEBUG]2025-06-27 10:44:53,016: None
[DEBUG]2025-06-27 10:44:53,016: None
[DEBUG]2025-06-27 10:44:53,016: None
[DEBUG]2025-06-27 10:44:53,016: None
[DEBUG]2025-06-27 10:44:53,016: None
[DEBUG]2025-06-27 10:44:53,017: None
[DEBUG]2025-06-27 10:44:53,017: None
[DEBUG]2025-06-27 10:44:53,017: None
[DEBUG]2025-06-27 10:44:53,017: None
[DEBUG]2025-06-27 10:44:53,017: None
[DEBUG]2025-06-27 10:44:53,017: None
[DEBUG]2025-06-27 10:44:53,017: None
[DEBUG]2025-06-27 10:44:53,017: None
[DEBUG]2025-06-27 10:44:53,017: None
[DEBUG]2025-06-27 10:44:53,017: None
[DEBUG]2025-06-27 10:44:53,017: None
[DEBUG]2025-06-27 10:44:53,017: None
[DEBUG]2025-06-27 10:44:53,017: None
[DEBUG]2025-06-27 10:44:53,017: None
[DEBUG]2025-06-27 10:44:53,017: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,018: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,019: None
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,020: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,021: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,022: None
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,023: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,024: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,025: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:44:53,026: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,935: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:46:30,935: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:46:30,935: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:46:30,940: None
[DEBUG]2025-06-27 10:46:30,940: None
[DEBUG]2025-06-27 10:46:30,941: None
[DEBUG]2025-06-27 10:46:30,941: None
[DEBUG]2025-06-27 10:46:30,941: None
[DEBUG]2025-06-27 10:46:30,943: None
[DEBUG]2025-06-27 10:46:30,943: None
[DEBUG]2025-06-27 10:46:30,943: None
[DEBUG]2025-06-27 10:46:30,943: None
[DEBUG]2025-06-27 10:46:30,945: None
[DEBUG]2025-06-27 10:46:30,945: None
[DEBUG]2025-06-27 10:46:30,945: None
[DEBUG]2025-06-27 10:46:30,945: None
[DEBUG]2025-06-27 10:46:30,945: None
[DEBUG]2025-06-27 10:46:30,948: None
[DEBUG]2025-06-27 10:46:30,948: None
[DEBUG]2025-06-27 10:46:30,948: None
[DEBUG]2025-06-27 10:46:30,948: None
[DEBUG]2025-06-27 10:46:30,948: None
[DEBUG]2025-06-27 10:46:30,948: None
[DEBUG]2025-06-27 10:46:30,950: None
[DEBUG]2025-06-27 10:46:30,950: None
[DEBUG]2025-06-27 10:46:30,950: None
[DEBUG]2025-06-27 10:46:30,950: None
[DEBUG]2025-06-27 10:46:30,950: None
[DEBUG]2025-06-27 10:46:30,950: None
[DEBUG]2025-06-27 10:46:30,950: None
[DEBUG]2025-06-27 10:46:30,951: None
[DEBUG]2025-06-27 10:46:30,951: None
[DEBUG]2025-06-27 10:46:30,951: None
[DEBUG]2025-06-27 10:46:30,951: None
[DEBUG]2025-06-27 10:46:30,951: None
[DEBUG]2025-06-27 10:46:30,951: None
[DEBUG]2025-06-27 10:46:30,951: None
[DEBUG]2025-06-27 10:46:30,951: None
[DEBUG]2025-06-27 10:46:30,953: None
[DEBUG]2025-06-27 10:46:30,953: None
[DEBUG]2025-06-27 10:46:30,953: None
[DEBUG]2025-06-27 10:46:30,953: None
[DEBUG]2025-06-27 10:46:30,953: None
[DEBUG]2025-06-27 10:46:30,953: None
[DEBUG]2025-06-27 10:46:30,953: None
[DEBUG]2025-06-27 10:46:30,953: None
[DEBUG]2025-06-27 10:46:30,953: None
[DEBUG]2025-06-27 10:46:30,954: None
[DEBUG]2025-06-27 10:46:30,954: None
[DEBUG]2025-06-27 10:46:30,954: None
[DEBUG]2025-06-27 10:46:30,954: None
[DEBUG]2025-06-27 10:46:30,954: None
[DEBUG]2025-06-27 10:46:30,954: None
[DEBUG]2025-06-27 10:46:30,954: None
[DEBUG]2025-06-27 10:46:30,954: None
[DEBUG]2025-06-27 10:46:30,954: None
[DEBUG]2025-06-27 10:46:30,954: None
[DEBUG]2025-06-27 10:46:30,956: None
[DEBUG]2025-06-27 10:46:30,956: None
[DEBUG]2025-06-27 10:46:30,956: None
[DEBUG]2025-06-27 10:46:30,956: None
[DEBUG]2025-06-27 10:46:30,956: None
[DEBUG]2025-06-27 10:46:30,956: None
[DEBUG]2025-06-27 10:46:30,956: None
[DEBUG]2025-06-27 10:46:30,956: None
[DEBUG]2025-06-27 10:46:30,956: None
[DEBUG]2025-06-27 10:46:30,956: None
[DEBUG]2025-06-27 10:46:30,956: None
[DEBUG]2025-06-27 10:46:30,958: None
[DEBUG]2025-06-27 10:46:30,958: None
[DEBUG]2025-06-27 10:46:30,958: None
[DEBUG]2025-06-27 10:46:30,958: None
[DEBUG]2025-06-27 10:46:30,958: None
[DEBUG]2025-06-27 10:46:30,958: None
[DEBUG]2025-06-27 10:46:30,958: None
[DEBUG]2025-06-27 10:46:30,958: None
[DEBUG]2025-06-27 10:46:30,958: None
[DEBUG]2025-06-27 10:46:30,958: None
[DEBUG]2025-06-27 10:46:30,958: None
[DEBUG]2025-06-27 10:46:30,958: None
[DEBUG]2025-06-27 10:46:30,961: None
[DEBUG]2025-06-27 10:46:30,961: None
[DEBUG]2025-06-27 10:46:30,961: None
[DEBUG]2025-06-27 10:46:30,961: None
[DEBUG]2025-06-27 10:46:30,961: None
[DEBUG]2025-06-27 10:46:30,961: None
[DEBUG]2025-06-27 10:46:30,961: None
[DEBUG]2025-06-27 10:46:30,961: None
[DEBUG]2025-06-27 10:46:30,961: None
[DEBUG]2025-06-27 10:46:30,961: None
[DEBUG]2025-06-27 10:46:30,961: None
[DEBUG]2025-06-27 10:46:30,961: None
[DEBUG]2025-06-27 10:46:30,961: None
[DEBUG]2025-06-27 10:46:30,963: None
[DEBUG]2025-06-27 10:46:30,963: None
[DEBUG]2025-06-27 10:46:30,963: None
[DEBUG]2025-06-27 10:46:30,963: None
[DEBUG]2025-06-27 10:46:30,963: None
[DEBUG]2025-06-27 10:46:30,963: None
[DEBUG]2025-06-27 10:46:30,963: None
[DEBUG]2025-06-27 10:46:30,963: None
[DEBUG]2025-06-27 10:46:30,963: None
[DEBUG]2025-06-27 10:46:30,963: None
[DEBUG]2025-06-27 10:46:30,963: None
[DEBUG]2025-06-27 10:46:30,963: None
[DEBUG]2025-06-27 10:46:30,963: None
[DEBUG]2025-06-27 10:46:30,963: None
[DEBUG]2025-06-27 10:46:30,965: None
[DEBUG]2025-06-27 10:46:30,965: None
[DEBUG]2025-06-27 10:46:30,965: None
[DEBUG]2025-06-27 10:46:30,965: None
[DEBUG]2025-06-27 10:46:30,965: None
[DEBUG]2025-06-27 10:46:30,965: None
[DEBUG]2025-06-27 10:46:30,965: None
[DEBUG]2025-06-27 10:46:30,965: None
[DEBUG]2025-06-27 10:46:30,965: None
[DEBUG]2025-06-27 10:46:30,965: None
[DEBUG]2025-06-27 10:46:30,965: None
[DEBUG]2025-06-27 10:46:30,965: None
[DEBUG]2025-06-27 10:46:30,965: None
[DEBUG]2025-06-27 10:46:30,965: None
[DEBUG]2025-06-27 10:46:30,965: None
[DEBUG]2025-06-27 10:46:30,967: None
[DEBUG]2025-06-27 10:46:30,967: None
[DEBUG]2025-06-27 10:46:30,967: None
[DEBUG]2025-06-27 10:46:30,967: None
[DEBUG]2025-06-27 10:46:30,967: None
[DEBUG]2025-06-27 10:46:30,967: None
[DEBUG]2025-06-27 10:46:30,967: None
[DEBUG]2025-06-27 10:46:30,967: None
[DEBUG]2025-06-27 10:46:30,967: None
[DEBUG]2025-06-27 10:46:30,967: None
[DEBUG]2025-06-27 10:46:30,967: None
[DEBUG]2025-06-27 10:46:30,967: None
[DEBUG]2025-06-27 10:46:30,967: None
[DEBUG]2025-06-27 10:46:30,967: None
[DEBUG]2025-06-27 10:46:30,967: None
[DEBUG]2025-06-27 10:46:30,967: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,969: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,971: None
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,973: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,974: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,975: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,977: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,979: None
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,981: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,982: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,983: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,986: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,987: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:46:30,988: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,963: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:50:55,963: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:50:55,964: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:50:55,968: None
[DEBUG]2025-06-27 10:50:55,968: None
[DEBUG]2025-06-27 10:50:55,969: None
[DEBUG]2025-06-27 10:50:55,969: None
[DEBUG]2025-06-27 10:50:55,969: None
[DEBUG]2025-06-27 10:50:55,970: None
[DEBUG]2025-06-27 10:50:55,970: None
[DEBUG]2025-06-27 10:50:55,970: None
[DEBUG]2025-06-27 10:50:55,970: None
[DEBUG]2025-06-27 10:50:55,971: None
[DEBUG]2025-06-27 10:50:55,971: None
[DEBUG]2025-06-27 10:50:55,971: None
[DEBUG]2025-06-27 10:50:55,971: None
[DEBUG]2025-06-27 10:50:55,971: None
[DEBUG]2025-06-27 10:50:55,972: None
[DEBUG]2025-06-27 10:50:55,972: None
[DEBUG]2025-06-27 10:50:55,972: None
[DEBUG]2025-06-27 10:50:55,972: None
[DEBUG]2025-06-27 10:50:55,972: None
[DEBUG]2025-06-27 10:50:55,972: None
[DEBUG]2025-06-27 10:50:55,972: None
[DEBUG]2025-06-27 10:50:55,972: None
[DEBUG]2025-06-27 10:50:55,972: None
[DEBUG]2025-06-27 10:50:55,972: None
[DEBUG]2025-06-27 10:50:55,972: None
[DEBUG]2025-06-27 10:50:55,972: None
[DEBUG]2025-06-27 10:50:55,972: None
[DEBUG]2025-06-27 10:50:55,973: None
[DEBUG]2025-06-27 10:50:55,973: None
[DEBUG]2025-06-27 10:50:55,973: None
[DEBUG]2025-06-27 10:50:55,973: None
[DEBUG]2025-06-27 10:50:55,973: None
[DEBUG]2025-06-27 10:50:55,973: None
[DEBUG]2025-06-27 10:50:55,973: None
[DEBUG]2025-06-27 10:50:55,973: None
[DEBUG]2025-06-27 10:50:55,974: None
[DEBUG]2025-06-27 10:50:55,974: None
[DEBUG]2025-06-27 10:50:55,974: None
[DEBUG]2025-06-27 10:50:55,974: None
[DEBUG]2025-06-27 10:50:55,974: None
[DEBUG]2025-06-27 10:50:55,974: None
[DEBUG]2025-06-27 10:50:55,974: None
[DEBUG]2025-06-27 10:50:55,974: None
[DEBUG]2025-06-27 10:50:55,974: None
[DEBUG]2025-06-27 10:50:55,975: None
[DEBUG]2025-06-27 10:50:55,975: None
[DEBUG]2025-06-27 10:50:55,975: None
[DEBUG]2025-06-27 10:50:55,975: None
[DEBUG]2025-06-27 10:50:55,975: None
[DEBUG]2025-06-27 10:50:55,975: None
[DEBUG]2025-06-27 10:50:55,975: None
[DEBUG]2025-06-27 10:50:55,975: None
[DEBUG]2025-06-27 10:50:55,975: None
[DEBUG]2025-06-27 10:50:55,975: None
[DEBUG]2025-06-27 10:50:55,976: None
[DEBUG]2025-06-27 10:50:55,976: None
[DEBUG]2025-06-27 10:50:55,976: None
[DEBUG]2025-06-27 10:50:55,976: None
[DEBUG]2025-06-27 10:50:55,976: None
[DEBUG]2025-06-27 10:50:55,976: None
[DEBUG]2025-06-27 10:50:55,976: None
[DEBUG]2025-06-27 10:50:55,976: None
[DEBUG]2025-06-27 10:50:55,976: None
[DEBUG]2025-06-27 10:50:55,976: None
[DEBUG]2025-06-27 10:50:55,976: None
[DEBUG]2025-06-27 10:50:55,977: None
[DEBUG]2025-06-27 10:50:55,977: None
[DEBUG]2025-06-27 10:50:55,977: None
[DEBUG]2025-06-27 10:50:55,977: None
[DEBUG]2025-06-27 10:50:55,977: None
[DEBUG]2025-06-27 10:50:55,977: None
[DEBUG]2025-06-27 10:50:55,977: None
[DEBUG]2025-06-27 10:50:55,977: None
[DEBUG]2025-06-27 10:50:55,977: None
[DEBUG]2025-06-27 10:50:55,977: None
[DEBUG]2025-06-27 10:50:55,977: None
[DEBUG]2025-06-27 10:50:55,977: None
[DEBUG]2025-06-27 10:50:55,979: None
[DEBUG]2025-06-27 10:50:55,979: None
[DEBUG]2025-06-27 10:50:55,979: None
[DEBUG]2025-06-27 10:50:55,979: None
[DEBUG]2025-06-27 10:50:55,979: None
[DEBUG]2025-06-27 10:50:55,979: None
[DEBUG]2025-06-27 10:50:55,979: None
[DEBUG]2025-06-27 10:50:55,979: None
[DEBUG]2025-06-27 10:50:55,979: None
[DEBUG]2025-06-27 10:50:55,979: None
[DEBUG]2025-06-27 10:50:55,979: None
[DEBUG]2025-06-27 10:50:55,979: None
[DEBUG]2025-06-27 10:50:55,979: None
[DEBUG]2025-06-27 10:50:55,980: None
[DEBUG]2025-06-27 10:50:55,980: None
[DEBUG]2025-06-27 10:50:55,980: None
[DEBUG]2025-06-27 10:50:55,980: None
[DEBUG]2025-06-27 10:50:55,980: None
[DEBUG]2025-06-27 10:50:55,980: None
[DEBUG]2025-06-27 10:50:55,980: None
[DEBUG]2025-06-27 10:50:55,980: None
[DEBUG]2025-06-27 10:50:55,980: None
[DEBUG]2025-06-27 10:50:55,980: None
[DEBUG]2025-06-27 10:50:55,980: None
[DEBUG]2025-06-27 10:50:55,980: None
[DEBUG]2025-06-27 10:50:55,980: None
[DEBUG]2025-06-27 10:50:55,980: None
[DEBUG]2025-06-27 10:50:55,981: None
[DEBUG]2025-06-27 10:50:55,981: None
[DEBUG]2025-06-27 10:50:55,981: None
[DEBUG]2025-06-27 10:50:55,981: None
[DEBUG]2025-06-27 10:50:55,981: None
[DEBUG]2025-06-27 10:50:55,981: None
[DEBUG]2025-06-27 10:50:55,981: None
[DEBUG]2025-06-27 10:50:55,981: None
[DEBUG]2025-06-27 10:50:55,981: None
[DEBUG]2025-06-27 10:50:55,981: None
[DEBUG]2025-06-27 10:50:55,981: None
[DEBUG]2025-06-27 10:50:55,981: None
[DEBUG]2025-06-27 10:50:55,981: None
[DEBUG]2025-06-27 10:50:55,981: None
[DEBUG]2025-06-27 10:50:55,981: None
[DEBUG]2025-06-27 10:50:55,983: None
[DEBUG]2025-06-27 10:50:55,983: None
[DEBUG]2025-06-27 10:50:55,983: None
[DEBUG]2025-06-27 10:50:55,983: None
[DEBUG]2025-06-27 10:50:55,983: None
[DEBUG]2025-06-27 10:50:55,983: None
[DEBUG]2025-06-27 10:50:55,983: None
[DEBUG]2025-06-27 10:50:55,983: None
[DEBUG]2025-06-27 10:50:55,983: None
[DEBUG]2025-06-27 10:50:55,983: None
[DEBUG]2025-06-27 10:50:55,983: None
[DEBUG]2025-06-27 10:50:55,983: None
[DEBUG]2025-06-27 10:50:55,983: None
[DEBUG]2025-06-27 10:50:55,983: None
[DEBUG]2025-06-27 10:50:55,983: None
[DEBUG]2025-06-27 10:50:55,983: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,984: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,985: None
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,986: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,988: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: None
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,989: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,991: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:50:55,992: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,678: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:51:28,679: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:51:28,679: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:51:28,682: None
[DEBUG]2025-06-27 10:51:28,682: None
[DEBUG]2025-06-27 10:51:28,682: None
[DEBUG]2025-06-27 10:51:28,682: None
[DEBUG]2025-06-27 10:51:28,682: None
[DEBUG]2025-06-27 10:51:28,683: None
[DEBUG]2025-06-27 10:51:28,683: None
[DEBUG]2025-06-27 10:51:28,683: None
[DEBUG]2025-06-27 10:51:28,683: None
[DEBUG]2025-06-27 10:51:28,683: None
[DEBUG]2025-06-27 10:51:28,683: None
[DEBUG]2025-06-27 10:51:28,683: None
[DEBUG]2025-06-27 10:51:28,683: None
[DEBUG]2025-06-27 10:51:28,683: None
[DEBUG]2025-06-27 10:51:28,684: None
[DEBUG]2025-06-27 10:51:28,684: None
[DEBUG]2025-06-27 10:51:28,684: None
[DEBUG]2025-06-27 10:51:28,684: None
[DEBUG]2025-06-27 10:51:28,684: None
[DEBUG]2025-06-27 10:51:28,684: None
[DEBUG]2025-06-27 10:51:28,685: None
[DEBUG]2025-06-27 10:51:28,685: None
[DEBUG]2025-06-27 10:51:28,685: None
[DEBUG]2025-06-27 10:51:28,685: None
[DEBUG]2025-06-27 10:51:28,685: None
[DEBUG]2025-06-27 10:51:28,685: None
[DEBUG]2025-06-27 10:51:28,685: None
[DEBUG]2025-06-27 10:51:28,685: None
[DEBUG]2025-06-27 10:51:28,685: None
[DEBUG]2025-06-27 10:51:28,685: None
[DEBUG]2025-06-27 10:51:28,685: None
[DEBUG]2025-06-27 10:51:28,685: None
[DEBUG]2025-06-27 10:51:28,685: None
[DEBUG]2025-06-27 10:51:28,685: None
[DEBUG]2025-06-27 10:51:28,685: None
[DEBUG]2025-06-27 10:51:28,686: None
[DEBUG]2025-06-27 10:51:28,686: None
[DEBUG]2025-06-27 10:51:28,686: None
[DEBUG]2025-06-27 10:51:28,686: None
[DEBUG]2025-06-27 10:51:28,686: None
[DEBUG]2025-06-27 10:51:28,686: None
[DEBUG]2025-06-27 10:51:28,686: None
[DEBUG]2025-06-27 10:51:28,686: None
[DEBUG]2025-06-27 10:51:28,686: None
[DEBUG]2025-06-27 10:51:28,687: None
[DEBUG]2025-06-27 10:51:28,687: None
[DEBUG]2025-06-27 10:51:28,687: None
[DEBUG]2025-06-27 10:51:28,687: None
[DEBUG]2025-06-27 10:51:28,687: None
[DEBUG]2025-06-27 10:51:28,687: None
[DEBUG]2025-06-27 10:51:28,687: None
[DEBUG]2025-06-27 10:51:28,687: None
[DEBUG]2025-06-27 10:51:28,687: None
[DEBUG]2025-06-27 10:51:28,687: None
[DEBUG]2025-06-27 10:51:28,688: None
[DEBUG]2025-06-27 10:51:28,688: None
[DEBUG]2025-06-27 10:51:28,688: None
[DEBUG]2025-06-27 10:51:28,688: None
[DEBUG]2025-06-27 10:51:28,688: None
[DEBUG]2025-06-27 10:51:28,688: None
[DEBUG]2025-06-27 10:51:28,688: None
[DEBUG]2025-06-27 10:51:28,688: None
[DEBUG]2025-06-27 10:51:28,688: None
[DEBUG]2025-06-27 10:51:28,688: None
[DEBUG]2025-06-27 10:51:28,688: None
[DEBUG]2025-06-27 10:51:28,689: None
[DEBUG]2025-06-27 10:51:28,689: None
[DEBUG]2025-06-27 10:51:28,689: None
[DEBUG]2025-06-27 10:51:28,689: None
[DEBUG]2025-06-27 10:51:28,689: None
[DEBUG]2025-06-27 10:51:28,689: None
[DEBUG]2025-06-27 10:51:28,689: None
[DEBUG]2025-06-27 10:51:28,689: None
[DEBUG]2025-06-27 10:51:28,689: None
[DEBUG]2025-06-27 10:51:28,689: None
[DEBUG]2025-06-27 10:51:28,689: None
[DEBUG]2025-06-27 10:51:28,689: None
[DEBUG]2025-06-27 10:51:28,691: None
[DEBUG]2025-06-27 10:51:28,691: None
[DEBUG]2025-06-27 10:51:28,691: None
[DEBUG]2025-06-27 10:51:28,691: None
[DEBUG]2025-06-27 10:51:28,691: None
[DEBUG]2025-06-27 10:51:28,691: None
[DEBUG]2025-06-27 10:51:28,691: None
[DEBUG]2025-06-27 10:51:28,691: None
[DEBUG]2025-06-27 10:51:28,691: None
[DEBUG]2025-06-27 10:51:28,691: None
[DEBUG]2025-06-27 10:51:28,691: None
[DEBUG]2025-06-27 10:51:28,691: None
[DEBUG]2025-06-27 10:51:28,691: None
[DEBUG]2025-06-27 10:51:28,692: None
[DEBUG]2025-06-27 10:51:28,692: None
[DEBUG]2025-06-27 10:51:28,692: None
[DEBUG]2025-06-27 10:51:28,692: None
[DEBUG]2025-06-27 10:51:28,692: None
[DEBUG]2025-06-27 10:51:28,692: None
[DEBUG]2025-06-27 10:51:28,692: None
[DEBUG]2025-06-27 10:51:28,692: None
[DEBUG]2025-06-27 10:51:28,692: None
[DEBUG]2025-06-27 10:51:28,692: None
[DEBUG]2025-06-27 10:51:28,692: None
[DEBUG]2025-06-27 10:51:28,692: None
[DEBUG]2025-06-27 10:51:28,692: None
[DEBUG]2025-06-27 10:51:28,692: None
[DEBUG]2025-06-27 10:51:28,693: None
[DEBUG]2025-06-27 10:51:28,693: None
[DEBUG]2025-06-27 10:51:28,693: None
[DEBUG]2025-06-27 10:51:28,693: None
[DEBUG]2025-06-27 10:51:28,693: None
[DEBUG]2025-06-27 10:51:28,693: None
[DEBUG]2025-06-27 10:51:28,693: None
[DEBUG]2025-06-27 10:51:28,693: None
[DEBUG]2025-06-27 10:51:28,693: None
[DEBUG]2025-06-27 10:51:28,693: None
[DEBUG]2025-06-27 10:51:28,693: None
[DEBUG]2025-06-27 10:51:28,693: None
[DEBUG]2025-06-27 10:51:28,693: None
[DEBUG]2025-06-27 10:51:28,693: None
[DEBUG]2025-06-27 10:51:28,693: None
[DEBUG]2025-06-27 10:51:28,694: None
[DEBUG]2025-06-27 10:51:28,694: None
[DEBUG]2025-06-27 10:51:28,694: None
[DEBUG]2025-06-27 10:51:28,694: None
[DEBUG]2025-06-27 10:51:28,694: None
[DEBUG]2025-06-27 10:51:28,694: None
[DEBUG]2025-06-27 10:51:28,694: None
[DEBUG]2025-06-27 10:51:28,694: None
[DEBUG]2025-06-27 10:51:28,694: None
[DEBUG]2025-06-27 10:51:28,694: None
[DEBUG]2025-06-27 10:51:28,694: None
[DEBUG]2025-06-27 10:51:28,694: None
[DEBUG]2025-06-27 10:51:28,694: None
[DEBUG]2025-06-27 10:51:28,694: None
[DEBUG]2025-06-27 10:51:28,694: None
[DEBUG]2025-06-27 10:51:28,694: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,695: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: None
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,696: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,697: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,698: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,700: None
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,701: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,702: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,704: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:51:28,705: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,826: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:52:37,826: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:52:37,827: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:52:37,832: None
[DEBUG]2025-06-27 10:52:37,832: None
[DEBUG]2025-06-27 10:52:37,834: None
[DEBUG]2025-06-27 10:52:37,834: None
[DEBUG]2025-06-27 10:52:37,834: None
[DEBUG]2025-06-27 10:52:37,835: None
[DEBUG]2025-06-27 10:52:37,835: None
[DEBUG]2025-06-27 10:52:37,835: None
[DEBUG]2025-06-27 10:52:37,835: None
[DEBUG]2025-06-27 10:52:37,837: None
[DEBUG]2025-06-27 10:52:37,837: None
[DEBUG]2025-06-27 10:52:37,837: None
[DEBUG]2025-06-27 10:52:37,837: None
[DEBUG]2025-06-27 10:52:37,837: None
[DEBUG]2025-06-27 10:52:37,839: None
[DEBUG]2025-06-27 10:52:37,839: None
[DEBUG]2025-06-27 10:52:37,839: None
[DEBUG]2025-06-27 10:52:37,839: None
[DEBUG]2025-06-27 10:52:37,839: None
[DEBUG]2025-06-27 10:52:37,839: None
[DEBUG]2025-06-27 10:52:37,840: None
[DEBUG]2025-06-27 10:52:37,840: None
[DEBUG]2025-06-27 10:52:37,840: None
[DEBUG]2025-06-27 10:52:37,840: None
[DEBUG]2025-06-27 10:52:37,840: None
[DEBUG]2025-06-27 10:52:37,840: None
[DEBUG]2025-06-27 10:52:37,840: None
[DEBUG]2025-06-27 10:52:37,842: None
[DEBUG]2025-06-27 10:52:37,842: None
[DEBUG]2025-06-27 10:52:37,842: None
[DEBUG]2025-06-27 10:52:37,842: None
[DEBUG]2025-06-27 10:52:37,842: None
[DEBUG]2025-06-27 10:52:37,842: None
[DEBUG]2025-06-27 10:52:37,842: None
[DEBUG]2025-06-27 10:52:37,842: None
[DEBUG]2025-06-27 10:52:37,843: None
[DEBUG]2025-06-27 10:52:37,843: None
[DEBUG]2025-06-27 10:52:37,843: None
[DEBUG]2025-06-27 10:52:37,843: None
[DEBUG]2025-06-27 10:52:37,843: None
[DEBUG]2025-06-27 10:52:37,843: None
[DEBUG]2025-06-27 10:52:37,843: None
[DEBUG]2025-06-27 10:52:37,843: None
[DEBUG]2025-06-27 10:52:37,843: None
[DEBUG]2025-06-27 10:52:37,845: None
[DEBUG]2025-06-27 10:52:37,845: None
[DEBUG]2025-06-27 10:52:37,845: None
[DEBUG]2025-06-27 10:52:37,845: None
[DEBUG]2025-06-27 10:52:37,845: None
[DEBUG]2025-06-27 10:52:37,845: None
[DEBUG]2025-06-27 10:52:37,845: None
[DEBUG]2025-06-27 10:52:37,845: None
[DEBUG]2025-06-27 10:52:37,845: None
[DEBUG]2025-06-27 10:52:37,845: None
[DEBUG]2025-06-27 10:52:37,847: None
[DEBUG]2025-06-27 10:52:37,847: None
[DEBUG]2025-06-27 10:52:37,847: None
[DEBUG]2025-06-27 10:52:37,847: None
[DEBUG]2025-06-27 10:52:37,847: None
[DEBUG]2025-06-27 10:52:37,847: None
[DEBUG]2025-06-27 10:52:37,847: None
[DEBUG]2025-06-27 10:52:37,847: None
[DEBUG]2025-06-27 10:52:37,847: None
[DEBUG]2025-06-27 10:52:37,847: None
[DEBUG]2025-06-27 10:52:37,847: None
[DEBUG]2025-06-27 10:52:37,850: None
[DEBUG]2025-06-27 10:52:37,850: None
[DEBUG]2025-06-27 10:52:37,850: None
[DEBUG]2025-06-27 10:52:37,850: None
[DEBUG]2025-06-27 10:52:37,850: None
[DEBUG]2025-06-27 10:52:37,850: None
[DEBUG]2025-06-27 10:52:37,850: None
[DEBUG]2025-06-27 10:52:37,850: None
[DEBUG]2025-06-27 10:52:37,850: None
[DEBUG]2025-06-27 10:52:37,850: None
[DEBUG]2025-06-27 10:52:37,850: None
[DEBUG]2025-06-27 10:52:37,850: None
[DEBUG]2025-06-27 10:52:37,853: None
[DEBUG]2025-06-27 10:52:37,853: None
[DEBUG]2025-06-27 10:52:37,853: None
[DEBUG]2025-06-27 10:52:37,853: None
[DEBUG]2025-06-27 10:52:37,853: None
[DEBUG]2025-06-27 10:52:37,853: None
[DEBUG]2025-06-27 10:52:37,853: None
[DEBUG]2025-06-27 10:52:37,853: None
[DEBUG]2025-06-27 10:52:37,853: None
[DEBUG]2025-06-27 10:52:37,853: None
[DEBUG]2025-06-27 10:52:37,853: None
[DEBUG]2025-06-27 10:52:37,853: None
[DEBUG]2025-06-27 10:52:37,853: None
[DEBUG]2025-06-27 10:52:37,856: None
[DEBUG]2025-06-27 10:52:37,856: None
[DEBUG]2025-06-27 10:52:37,856: None
[DEBUG]2025-06-27 10:52:37,856: None
[DEBUG]2025-06-27 10:52:37,856: None
[DEBUG]2025-06-27 10:52:37,856: None
[DEBUG]2025-06-27 10:52:37,856: None
[DEBUG]2025-06-27 10:52:37,856: None
[DEBUG]2025-06-27 10:52:37,856: None
[DEBUG]2025-06-27 10:52:37,856: None
[DEBUG]2025-06-27 10:52:37,856: None
[DEBUG]2025-06-27 10:52:37,856: None
[DEBUG]2025-06-27 10:52:37,856: None
[DEBUG]2025-06-27 10:52:37,856: None
[DEBUG]2025-06-27 10:52:37,859: None
[DEBUG]2025-06-27 10:52:37,859: None
[DEBUG]2025-06-27 10:52:37,859: None
[DEBUG]2025-06-27 10:52:37,859: None
[DEBUG]2025-06-27 10:52:37,859: None
[DEBUG]2025-06-27 10:52:37,859: None
[DEBUG]2025-06-27 10:52:37,859: None
[DEBUG]2025-06-27 10:52:37,859: None
[DEBUG]2025-06-27 10:52:37,859: None
[DEBUG]2025-06-27 10:52:37,859: None
[DEBUG]2025-06-27 10:52:37,859: None
[DEBUG]2025-06-27 10:52:37,859: None
[DEBUG]2025-06-27 10:52:37,859: None
[DEBUG]2025-06-27 10:52:37,859: None
[DEBUG]2025-06-27 10:52:37,859: None
[DEBUG]2025-06-27 10:52:37,863: None
[DEBUG]2025-06-27 10:52:37,863: None
[DEBUG]2025-06-27 10:52:37,863: None
[DEBUG]2025-06-27 10:52:37,863: None
[DEBUG]2025-06-27 10:52:37,863: None
[DEBUG]2025-06-27 10:52:37,863: None
[DEBUG]2025-06-27 10:52:37,863: None
[DEBUG]2025-06-27 10:52:37,863: None
[DEBUG]2025-06-27 10:52:37,863: None
[DEBUG]2025-06-27 10:52:37,863: None
[DEBUG]2025-06-27 10:52:37,863: None
[DEBUG]2025-06-27 10:52:37,863: None
[DEBUG]2025-06-27 10:52:37,863: None
[DEBUG]2025-06-27 10:52:37,863: None
[DEBUG]2025-06-27 10:52:37,863: None
[DEBUG]2025-06-27 10:52:37,863: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,866: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,869: None
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,872: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,873: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,874: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,878: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,881: None
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,885: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,887: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,890: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,891: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:52:37,892: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,307: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:55:10,308: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:55:10,308: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:55:10,313: None
[DEBUG]2025-06-27 10:55:10,313: None
[DEBUG]2025-06-27 10:55:10,314: None
[DEBUG]2025-06-27 10:55:10,314: None
[DEBUG]2025-06-27 10:55:10,314: None
[DEBUG]2025-06-27 10:55:10,315: None
[DEBUG]2025-06-27 10:55:10,315: None
[DEBUG]2025-06-27 10:55:10,315: None
[DEBUG]2025-06-27 10:55:10,315: None
[DEBUG]2025-06-27 10:55:10,317: None
[DEBUG]2025-06-27 10:55:10,317: None
[DEBUG]2025-06-27 10:55:10,317: None
[DEBUG]2025-06-27 10:55:10,317: None
[DEBUG]2025-06-27 10:55:10,317: None
[DEBUG]2025-06-27 10:55:10,318: None
[DEBUG]2025-06-27 10:55:10,318: None
[DEBUG]2025-06-27 10:55:10,318: None
[DEBUG]2025-06-27 10:55:10,318: None
[DEBUG]2025-06-27 10:55:10,318: None
[DEBUG]2025-06-27 10:55:10,318: None
[DEBUG]2025-06-27 10:55:10,319: None
[DEBUG]2025-06-27 10:55:10,319: None
[DEBUG]2025-06-27 10:55:10,319: None
[DEBUG]2025-06-27 10:55:10,319: None
[DEBUG]2025-06-27 10:55:10,319: None
[DEBUG]2025-06-27 10:55:10,319: None
[DEBUG]2025-06-27 10:55:10,319: None
[DEBUG]2025-06-27 10:55:10,321: None
[DEBUG]2025-06-27 10:55:10,321: None
[DEBUG]2025-06-27 10:55:10,321: None
[DEBUG]2025-06-27 10:55:10,321: None
[DEBUG]2025-06-27 10:55:10,321: None
[DEBUG]2025-06-27 10:55:10,321: None
[DEBUG]2025-06-27 10:55:10,321: None
[DEBUG]2025-06-27 10:55:10,321: None
[DEBUG]2025-06-27 10:55:10,322: None
[DEBUG]2025-06-27 10:55:10,322: None
[DEBUG]2025-06-27 10:55:10,322: None
[DEBUG]2025-06-27 10:55:10,322: None
[DEBUG]2025-06-27 10:55:10,322: None
[DEBUG]2025-06-27 10:55:10,322: None
[DEBUG]2025-06-27 10:55:10,322: None
[DEBUG]2025-06-27 10:55:10,322: None
[DEBUG]2025-06-27 10:55:10,322: None
[DEBUG]2025-06-27 10:55:10,324: None
[DEBUG]2025-06-27 10:55:10,324: None
[DEBUG]2025-06-27 10:55:10,324: None
[DEBUG]2025-06-27 10:55:10,324: None
[DEBUG]2025-06-27 10:55:10,324: None
[DEBUG]2025-06-27 10:55:10,324: None
[DEBUG]2025-06-27 10:55:10,324: None
[DEBUG]2025-06-27 10:55:10,324: None
[DEBUG]2025-06-27 10:55:10,324: None
[DEBUG]2025-06-27 10:55:10,324: None
[DEBUG]2025-06-27 10:55:10,326: None
[DEBUG]2025-06-27 10:55:10,326: None
[DEBUG]2025-06-27 10:55:10,326: None
[DEBUG]2025-06-27 10:55:10,326: None
[DEBUG]2025-06-27 10:55:10,326: None
[DEBUG]2025-06-27 10:55:10,326: None
[DEBUG]2025-06-27 10:55:10,326: None
[DEBUG]2025-06-27 10:55:10,326: None
[DEBUG]2025-06-27 10:55:10,326: None
[DEBUG]2025-06-27 10:55:10,326: None
[DEBUG]2025-06-27 10:55:10,326: None
[DEBUG]2025-06-27 10:55:10,327: None
[DEBUG]2025-06-27 10:55:10,327: None
[DEBUG]2025-06-27 10:55:10,327: None
[DEBUG]2025-06-27 10:55:10,327: None
[DEBUG]2025-06-27 10:55:10,327: None
[DEBUG]2025-06-27 10:55:10,327: None
[DEBUG]2025-06-27 10:55:10,327: None
[DEBUG]2025-06-27 10:55:10,327: None
[DEBUG]2025-06-27 10:55:10,327: None
[DEBUG]2025-06-27 10:55:10,327: None
[DEBUG]2025-06-27 10:55:10,327: None
[DEBUG]2025-06-27 10:55:10,327: None
[DEBUG]2025-06-27 10:55:10,329: None
[DEBUG]2025-06-27 10:55:10,329: None
[DEBUG]2025-06-27 10:55:10,329: None
[DEBUG]2025-06-27 10:55:10,329: None
[DEBUG]2025-06-27 10:55:10,329: None
[DEBUG]2025-06-27 10:55:10,329: None
[DEBUG]2025-06-27 10:55:10,329: None
[DEBUG]2025-06-27 10:55:10,329: None
[DEBUG]2025-06-27 10:55:10,329: None
[DEBUG]2025-06-27 10:55:10,329: None
[DEBUG]2025-06-27 10:55:10,329: None
[DEBUG]2025-06-27 10:55:10,329: None
[DEBUG]2025-06-27 10:55:10,329: None
[DEBUG]2025-06-27 10:55:10,330: None
[DEBUG]2025-06-27 10:55:10,330: None
[DEBUG]2025-06-27 10:55:10,330: None
[DEBUG]2025-06-27 10:55:10,330: None
[DEBUG]2025-06-27 10:55:10,330: None
[DEBUG]2025-06-27 10:55:10,330: None
[DEBUG]2025-06-27 10:55:10,330: None
[DEBUG]2025-06-27 10:55:10,330: None
[DEBUG]2025-06-27 10:55:10,330: None
[DEBUG]2025-06-27 10:55:10,330: None
[DEBUG]2025-06-27 10:55:10,330: None
[DEBUG]2025-06-27 10:55:10,330: None
[DEBUG]2025-06-27 10:55:10,330: None
[DEBUG]2025-06-27 10:55:10,330: None
[DEBUG]2025-06-27 10:55:10,331: None
[DEBUG]2025-06-27 10:55:10,331: None
[DEBUG]2025-06-27 10:55:10,331: None
[DEBUG]2025-06-27 10:55:10,331: None
[DEBUG]2025-06-27 10:55:10,331: None
[DEBUG]2025-06-27 10:55:10,331: None
[DEBUG]2025-06-27 10:55:10,331: None
[DEBUG]2025-06-27 10:55:10,331: None
[DEBUG]2025-06-27 10:55:10,331: None
[DEBUG]2025-06-27 10:55:10,331: None
[DEBUG]2025-06-27 10:55:10,331: None
[DEBUG]2025-06-27 10:55:10,331: None
[DEBUG]2025-06-27 10:55:10,331: None
[DEBUG]2025-06-27 10:55:10,331: None
[DEBUG]2025-06-27 10:55:10,331: None
[DEBUG]2025-06-27 10:55:10,333: None
[DEBUG]2025-06-27 10:55:10,333: None
[DEBUG]2025-06-27 10:55:10,333: None
[DEBUG]2025-06-27 10:55:10,333: None
[DEBUG]2025-06-27 10:55:10,333: None
[DEBUG]2025-06-27 10:55:10,333: None
[DEBUG]2025-06-27 10:55:10,333: None
[DEBUG]2025-06-27 10:55:10,333: None
[DEBUG]2025-06-27 10:55:10,333: None
[DEBUG]2025-06-27 10:55:10,333: None
[DEBUG]2025-06-27 10:55:10,333: None
[DEBUG]2025-06-27 10:55:10,333: None
[DEBUG]2025-06-27 10:55:10,333: None
[DEBUG]2025-06-27 10:55:10,333: None
[DEBUG]2025-06-27 10:55:10,333: None
[DEBUG]2025-06-27 10:55:10,333: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,334: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,335: None
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,336: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,337: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,338: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,341: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,342: None
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,343: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,344: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,346: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,347: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:55:10,348: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,148: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 10:57:54,148: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 10:57:54,149: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 10:57:54,153: None
[DEBUG]2025-06-27 10:57:54,153: None
[DEBUG]2025-06-27 10:57:54,154: None
[DEBUG]2025-06-27 10:57:54,154: None
[DEBUG]2025-06-27 10:57:54,154: None
[DEBUG]2025-06-27 10:57:54,155: None
[DEBUG]2025-06-27 10:57:54,155: None
[DEBUG]2025-06-27 10:57:54,155: None
[DEBUG]2025-06-27 10:57:54,155: None
[DEBUG]2025-06-27 10:57:54,156: None
[DEBUG]2025-06-27 10:57:54,156: None
[DEBUG]2025-06-27 10:57:54,156: None
[DEBUG]2025-06-27 10:57:54,156: None
[DEBUG]2025-06-27 10:57:54,156: None
[DEBUG]2025-06-27 10:57:54,158: None
[DEBUG]2025-06-27 10:57:54,158: None
[DEBUG]2025-06-27 10:57:54,158: None
[DEBUG]2025-06-27 10:57:54,158: None
[DEBUG]2025-06-27 10:57:54,158: None
[DEBUG]2025-06-27 10:57:54,158: None
[DEBUG]2025-06-27 10:57:54,159: None
[DEBUG]2025-06-27 10:57:54,159: None
[DEBUG]2025-06-27 10:57:54,159: None
[DEBUG]2025-06-27 10:57:54,159: None
[DEBUG]2025-06-27 10:57:54,159: None
[DEBUG]2025-06-27 10:57:54,159: None
[DEBUG]2025-06-27 10:57:54,159: None
[DEBUG]2025-06-27 10:57:54,159: None
[DEBUG]2025-06-27 10:57:54,159: None
[DEBUG]2025-06-27 10:57:54,159: None
[DEBUG]2025-06-27 10:57:54,159: None
[DEBUG]2025-06-27 10:57:54,159: None
[DEBUG]2025-06-27 10:57:54,159: None
[DEBUG]2025-06-27 10:57:54,159: None
[DEBUG]2025-06-27 10:57:54,159: None
[DEBUG]2025-06-27 10:57:54,160: None
[DEBUG]2025-06-27 10:57:54,160: None
[DEBUG]2025-06-27 10:57:54,160: None
[DEBUG]2025-06-27 10:57:54,160: None
[DEBUG]2025-06-27 10:57:54,160: None
[DEBUG]2025-06-27 10:57:54,160: None
[DEBUG]2025-06-27 10:57:54,160: None
[DEBUG]2025-06-27 10:57:54,160: None
[DEBUG]2025-06-27 10:57:54,160: None
[DEBUG]2025-06-27 10:57:54,162: None
[DEBUG]2025-06-27 10:57:54,162: None
[DEBUG]2025-06-27 10:57:54,162: None
[DEBUG]2025-06-27 10:57:54,162: None
[DEBUG]2025-06-27 10:57:54,162: None
[DEBUG]2025-06-27 10:57:54,162: None
[DEBUG]2025-06-27 10:57:54,162: None
[DEBUG]2025-06-27 10:57:54,162: None
[DEBUG]2025-06-27 10:57:54,162: None
[DEBUG]2025-06-27 10:57:54,162: None
[DEBUG]2025-06-27 10:57:54,163: None
[DEBUG]2025-06-27 10:57:54,163: None
[DEBUG]2025-06-27 10:57:54,163: None
[DEBUG]2025-06-27 10:57:54,163: None
[DEBUG]2025-06-27 10:57:54,163: None
[DEBUG]2025-06-27 10:57:54,163: None
[DEBUG]2025-06-27 10:57:54,163: None
[DEBUG]2025-06-27 10:57:54,163: None
[DEBUG]2025-06-27 10:57:54,163: None
[DEBUG]2025-06-27 10:57:54,163: None
[DEBUG]2025-06-27 10:57:54,163: None
[DEBUG]2025-06-27 10:57:54,165: None
[DEBUG]2025-06-27 10:57:54,165: None
[DEBUG]2025-06-27 10:57:54,165: None
[DEBUG]2025-06-27 10:57:54,165: None
[DEBUG]2025-06-27 10:57:54,165: None
[DEBUG]2025-06-27 10:57:54,165: None
[DEBUG]2025-06-27 10:57:54,165: None
[DEBUG]2025-06-27 10:57:54,165: None
[DEBUG]2025-06-27 10:57:54,165: None
[DEBUG]2025-06-27 10:57:54,165: None
[DEBUG]2025-06-27 10:57:54,165: None
[DEBUG]2025-06-27 10:57:54,165: None
[DEBUG]2025-06-27 10:57:54,166: None
[DEBUG]2025-06-27 10:57:54,166: None
[DEBUG]2025-06-27 10:57:54,166: None
[DEBUG]2025-06-27 10:57:54,166: None
[DEBUG]2025-06-27 10:57:54,166: None
[DEBUG]2025-06-27 10:57:54,166: None
[DEBUG]2025-06-27 10:57:54,166: None
[DEBUG]2025-06-27 10:57:54,166: None
[DEBUG]2025-06-27 10:57:54,166: None
[DEBUG]2025-06-27 10:57:54,166: None
[DEBUG]2025-06-27 10:57:54,166: None
[DEBUG]2025-06-27 10:57:54,166: None
[DEBUG]2025-06-27 10:57:54,166: None
[DEBUG]2025-06-27 10:57:54,168: None
[DEBUG]2025-06-27 10:57:54,168: None
[DEBUG]2025-06-27 10:57:54,168: None
[DEBUG]2025-06-27 10:57:54,168: None
[DEBUG]2025-06-27 10:57:54,168: None
[DEBUG]2025-06-27 10:57:54,168: None
[DEBUG]2025-06-27 10:57:54,168: None
[DEBUG]2025-06-27 10:57:54,168: None
[DEBUG]2025-06-27 10:57:54,168: None
[DEBUG]2025-06-27 10:57:54,168: None
[DEBUG]2025-06-27 10:57:54,168: None
[DEBUG]2025-06-27 10:57:54,168: None
[DEBUG]2025-06-27 10:57:54,168: None
[DEBUG]2025-06-27 10:57:54,168: None
[DEBUG]2025-06-27 10:57:54,171: None
[DEBUG]2025-06-27 10:57:54,171: None
[DEBUG]2025-06-27 10:57:54,171: None
[DEBUG]2025-06-27 10:57:54,171: None
[DEBUG]2025-06-27 10:57:54,171: None
[DEBUG]2025-06-27 10:57:54,171: None
[DEBUG]2025-06-27 10:57:54,171: None
[DEBUG]2025-06-27 10:57:54,171: None
[DEBUG]2025-06-27 10:57:54,171: None
[DEBUG]2025-06-27 10:57:54,171: None
[DEBUG]2025-06-27 10:57:54,171: None
[DEBUG]2025-06-27 10:57:54,171: None
[DEBUG]2025-06-27 10:57:54,171: None
[DEBUG]2025-06-27 10:57:54,171: None
[DEBUG]2025-06-27 10:57:54,171: None
[DEBUG]2025-06-27 10:57:54,173: None
[DEBUG]2025-06-27 10:57:54,173: None
[DEBUG]2025-06-27 10:57:54,173: None
[DEBUG]2025-06-27 10:57:54,173: None
[DEBUG]2025-06-27 10:57:54,173: None
[DEBUG]2025-06-27 10:57:54,173: None
[DEBUG]2025-06-27 10:57:54,173: None
[DEBUG]2025-06-27 10:57:54,173: None
[DEBUG]2025-06-27 10:57:54,173: None
[DEBUG]2025-06-27 10:57:54,173: None
[DEBUG]2025-06-27 10:57:54,173: None
[DEBUG]2025-06-27 10:57:54,173: None
[DEBUG]2025-06-27 10:57:54,173: None
[DEBUG]2025-06-27 10:57:54,173: None
[DEBUG]2025-06-27 10:57:54,173: None
[DEBUG]2025-06-27 10:57:54,173: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,174: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,176: None
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,178: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,180: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,184: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,186: None
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,187: <re.Match object; span=(1634, 1740), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,188: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,189: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,191: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 10:57:54,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,140: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:01:21,141: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:01:21,141: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:01:21,146: None
[DEBUG]2025-06-27 11:01:21,146: None
[DEBUG]2025-06-27 11:01:21,147: None
[DEBUG]2025-06-27 11:01:21,147: None
[DEBUG]2025-06-27 11:01:21,147: None
[DEBUG]2025-06-27 11:01:21,149: None
[DEBUG]2025-06-27 11:01:21,149: None
[DEBUG]2025-06-27 11:01:21,149: None
[DEBUG]2025-06-27 11:01:21,149: None
[DEBUG]2025-06-27 11:01:21,151: None
[DEBUG]2025-06-27 11:01:21,151: None
[DEBUG]2025-06-27 11:01:21,151: None
[DEBUG]2025-06-27 11:01:21,151: None
[DEBUG]2025-06-27 11:01:21,151: None
[DEBUG]2025-06-27 11:01:21,152: None
[DEBUG]2025-06-27 11:01:21,152: None
[DEBUG]2025-06-27 11:01:21,152: None
[DEBUG]2025-06-27 11:01:21,152: None
[DEBUG]2025-06-27 11:01:21,152: None
[DEBUG]2025-06-27 11:01:21,152: None
[DEBUG]2025-06-27 11:01:21,153: None
[DEBUG]2025-06-27 11:01:21,153: None
[DEBUG]2025-06-27 11:01:21,153: None
[DEBUG]2025-06-27 11:01:21,153: None
[DEBUG]2025-06-27 11:01:21,153: None
[DEBUG]2025-06-27 11:01:21,153: None
[DEBUG]2025-06-27 11:01:21,153: None
[DEBUG]2025-06-27 11:01:21,155: None
[DEBUG]2025-06-27 11:01:21,155: None
[DEBUG]2025-06-27 11:01:21,155: None
[DEBUG]2025-06-27 11:01:21,155: None
[DEBUG]2025-06-27 11:01:21,155: None
[DEBUG]2025-06-27 11:01:21,155: None
[DEBUG]2025-06-27 11:01:21,155: None
[DEBUG]2025-06-27 11:01:21,155: None
[DEBUG]2025-06-27 11:01:21,156: None
[DEBUG]2025-06-27 11:01:21,156: None
[DEBUG]2025-06-27 11:01:21,156: None
[DEBUG]2025-06-27 11:01:21,156: None
[DEBUG]2025-06-27 11:01:21,156: None
[DEBUG]2025-06-27 11:01:21,156: None
[DEBUG]2025-06-27 11:01:21,156: None
[DEBUG]2025-06-27 11:01:21,156: None
[DEBUG]2025-06-27 11:01:21,156: None
[DEBUG]2025-06-27 11:01:21,158: None
[DEBUG]2025-06-27 11:01:21,158: None
[DEBUG]2025-06-27 11:01:21,158: None
[DEBUG]2025-06-27 11:01:21,158: None
[DEBUG]2025-06-27 11:01:21,158: None
[DEBUG]2025-06-27 11:01:21,158: None
[DEBUG]2025-06-27 11:01:21,158: None
[DEBUG]2025-06-27 11:01:21,158: None
[DEBUG]2025-06-27 11:01:21,158: None
[DEBUG]2025-06-27 11:01:21,158: None
[DEBUG]2025-06-27 11:01:21,160: None
[DEBUG]2025-06-27 11:01:21,160: None
[DEBUG]2025-06-27 11:01:21,160: None
[DEBUG]2025-06-27 11:01:21,160: None
[DEBUG]2025-06-27 11:01:21,160: None
[DEBUG]2025-06-27 11:01:21,160: None
[DEBUG]2025-06-27 11:01:21,160: None
[DEBUG]2025-06-27 11:01:21,160: None
[DEBUG]2025-06-27 11:01:21,160: None
[DEBUG]2025-06-27 11:01:21,160: None
[DEBUG]2025-06-27 11:01:21,160: None
[DEBUG]2025-06-27 11:01:21,162: None
[DEBUG]2025-06-27 11:01:21,162: None
[DEBUG]2025-06-27 11:01:21,162: None
[DEBUG]2025-06-27 11:01:21,162: None
[DEBUG]2025-06-27 11:01:21,162: None
[DEBUG]2025-06-27 11:01:21,162: None
[DEBUG]2025-06-27 11:01:21,162: None
[DEBUG]2025-06-27 11:01:21,162: None
[DEBUG]2025-06-27 11:01:21,162: None
[DEBUG]2025-06-27 11:01:21,162: None
[DEBUG]2025-06-27 11:01:21,162: None
[DEBUG]2025-06-27 11:01:21,162: None
[DEBUG]2025-06-27 11:01:21,164: None
[DEBUG]2025-06-27 11:01:21,164: None
[DEBUG]2025-06-27 11:01:21,164: None
[DEBUG]2025-06-27 11:01:21,164: None
[DEBUG]2025-06-27 11:01:21,164: None
[DEBUG]2025-06-27 11:01:21,164: None
[DEBUG]2025-06-27 11:01:21,164: None
[DEBUG]2025-06-27 11:01:21,164: None
[DEBUG]2025-06-27 11:01:21,164: None
[DEBUG]2025-06-27 11:01:21,164: None
[DEBUG]2025-06-27 11:01:21,164: None
[DEBUG]2025-06-27 11:01:21,164: None
[DEBUG]2025-06-27 11:01:21,164: None
[DEBUG]2025-06-27 11:01:21,166: None
[DEBUG]2025-06-27 11:01:21,166: None
[DEBUG]2025-06-27 11:01:21,166: None
[DEBUG]2025-06-27 11:01:21,166: None
[DEBUG]2025-06-27 11:01:21,166: None
[DEBUG]2025-06-27 11:01:21,166: None
[DEBUG]2025-06-27 11:01:21,166: None
[DEBUG]2025-06-27 11:01:21,166: None
[DEBUG]2025-06-27 11:01:21,166: None
[DEBUG]2025-06-27 11:01:21,166: None
[DEBUG]2025-06-27 11:01:21,166: None
[DEBUG]2025-06-27 11:01:21,166: None
[DEBUG]2025-06-27 11:01:21,166: None
[DEBUG]2025-06-27 11:01:21,166: None
[DEBUG]2025-06-27 11:01:21,168: None
[DEBUG]2025-06-27 11:01:21,168: None
[DEBUG]2025-06-27 11:01:21,168: None
[DEBUG]2025-06-27 11:01:21,168: None
[DEBUG]2025-06-27 11:01:21,168: None
[DEBUG]2025-06-27 11:01:21,168: None
[DEBUG]2025-06-27 11:01:21,168: None
[DEBUG]2025-06-27 11:01:21,168: None
[DEBUG]2025-06-27 11:01:21,168: None
[DEBUG]2025-06-27 11:01:21,168: None
[DEBUG]2025-06-27 11:01:21,168: None
[DEBUG]2025-06-27 11:01:21,168: None
[DEBUG]2025-06-27 11:01:21,168: None
[DEBUG]2025-06-27 11:01:21,168: None
[DEBUG]2025-06-27 11:01:21,168: None
[DEBUG]2025-06-27 11:01:21,170: None
[DEBUG]2025-06-27 11:01:21,170: None
[DEBUG]2025-06-27 11:01:21,170: None
[DEBUG]2025-06-27 11:01:21,170: None
[DEBUG]2025-06-27 11:01:21,170: None
[DEBUG]2025-06-27 11:01:21,170: None
[DEBUG]2025-06-27 11:01:21,170: None
[DEBUG]2025-06-27 11:01:21,170: None
[DEBUG]2025-06-27 11:01:21,170: None
[DEBUG]2025-06-27 11:01:21,170: None
[DEBUG]2025-06-27 11:01:21,170: None
[DEBUG]2025-06-27 11:01:21,170: None
[DEBUG]2025-06-27 11:01:21,170: None
[DEBUG]2025-06-27 11:01:21,170: None
[DEBUG]2025-06-27 11:01:21,170: None
[DEBUG]2025-06-27 11:01:21,170: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,171: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,173: None
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,175: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,176: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,177: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,179: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,182: None
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,184: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,185: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,186: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,188: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,189: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:01:21,190: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,155: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:03:58,156: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:03:58,156: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:03:58,163: None
[DEBUG]2025-06-27 11:03:58,163: None
[DEBUG]2025-06-27 11:03:58,164: None
[DEBUG]2025-06-27 11:03:58,164: None
[DEBUG]2025-06-27 11:03:58,164: None
[DEBUG]2025-06-27 11:03:58,166: None
[DEBUG]2025-06-27 11:03:58,166: None
[DEBUG]2025-06-27 11:03:58,166: None
[DEBUG]2025-06-27 11:03:58,166: None
[DEBUG]2025-06-27 11:03:58,167: None
[DEBUG]2025-06-27 11:03:58,167: None
[DEBUG]2025-06-27 11:03:58,167: None
[DEBUG]2025-06-27 11:03:58,167: None
[DEBUG]2025-06-27 11:03:58,167: None
[DEBUG]2025-06-27 11:03:58,169: None
[DEBUG]2025-06-27 11:03:58,169: None
[DEBUG]2025-06-27 11:03:58,169: None
[DEBUG]2025-06-27 11:03:58,169: None
[DEBUG]2025-06-27 11:03:58,169: None
[DEBUG]2025-06-27 11:03:58,169: None
[DEBUG]2025-06-27 11:03:58,170: None
[DEBUG]2025-06-27 11:03:58,170: None
[DEBUG]2025-06-27 11:03:58,170: None
[DEBUG]2025-06-27 11:03:58,170: None
[DEBUG]2025-06-27 11:03:58,170: None
[DEBUG]2025-06-27 11:03:58,170: None
[DEBUG]2025-06-27 11:03:58,170: None
[DEBUG]2025-06-27 11:03:58,171: None
[DEBUG]2025-06-27 11:03:58,171: None
[DEBUG]2025-06-27 11:03:58,171: None
[DEBUG]2025-06-27 11:03:58,171: None
[DEBUG]2025-06-27 11:03:58,171: None
[DEBUG]2025-06-27 11:03:58,171: None
[DEBUG]2025-06-27 11:03:58,171: None
[DEBUG]2025-06-27 11:03:58,171: None
[DEBUG]2025-06-27 11:03:58,173: None
[DEBUG]2025-06-27 11:03:58,173: None
[DEBUG]2025-06-27 11:03:58,173: None
[DEBUG]2025-06-27 11:03:58,173: None
[DEBUG]2025-06-27 11:03:58,173: None
[DEBUG]2025-06-27 11:03:58,173: None
[DEBUG]2025-06-27 11:03:58,173: None
[DEBUG]2025-06-27 11:03:58,173: None
[DEBUG]2025-06-27 11:03:58,173: None
[DEBUG]2025-06-27 11:03:58,175: None
[DEBUG]2025-06-27 11:03:58,175: None
[DEBUG]2025-06-27 11:03:58,175: None
[DEBUG]2025-06-27 11:03:58,175: None
[DEBUG]2025-06-27 11:03:58,175: None
[DEBUG]2025-06-27 11:03:58,175: None
[DEBUG]2025-06-27 11:03:58,175: None
[DEBUG]2025-06-27 11:03:58,175: None
[DEBUG]2025-06-27 11:03:58,175: None
[DEBUG]2025-06-27 11:03:58,175: None
[DEBUG]2025-06-27 11:03:58,178: None
[DEBUG]2025-06-27 11:03:58,178: None
[DEBUG]2025-06-27 11:03:58,178: None
[DEBUG]2025-06-27 11:03:58,178: None
[DEBUG]2025-06-27 11:03:58,178: None
[DEBUG]2025-06-27 11:03:58,178: None
[DEBUG]2025-06-27 11:03:58,178: None
[DEBUG]2025-06-27 11:03:58,178: None
[DEBUG]2025-06-27 11:03:58,178: None
[DEBUG]2025-06-27 11:03:58,178: None
[DEBUG]2025-06-27 11:03:58,178: None
[DEBUG]2025-06-27 11:03:58,179: None
[DEBUG]2025-06-27 11:03:58,179: None
[DEBUG]2025-06-27 11:03:58,179: None
[DEBUG]2025-06-27 11:03:58,179: None
[DEBUG]2025-06-27 11:03:58,179: None
[DEBUG]2025-06-27 11:03:58,179: None
[DEBUG]2025-06-27 11:03:58,179: None
[DEBUG]2025-06-27 11:03:58,179: None
[DEBUG]2025-06-27 11:03:58,179: None
[DEBUG]2025-06-27 11:03:58,179: None
[DEBUG]2025-06-27 11:03:58,179: None
[DEBUG]2025-06-27 11:03:58,179: None
[DEBUG]2025-06-27 11:03:58,182: None
[DEBUG]2025-06-27 11:03:58,182: None
[DEBUG]2025-06-27 11:03:58,182: None
[DEBUG]2025-06-27 11:03:58,182: None
[DEBUG]2025-06-27 11:03:58,182: None
[DEBUG]2025-06-27 11:03:58,182: None
[DEBUG]2025-06-27 11:03:58,182: None
[DEBUG]2025-06-27 11:03:58,182: None
[DEBUG]2025-06-27 11:03:58,182: None
[DEBUG]2025-06-27 11:03:58,182: None
[DEBUG]2025-06-27 11:03:58,182: None
[DEBUG]2025-06-27 11:03:58,182: None
[DEBUG]2025-06-27 11:03:58,182: None
[DEBUG]2025-06-27 11:03:58,184: None
[DEBUG]2025-06-27 11:03:58,184: None
[DEBUG]2025-06-27 11:03:58,184: None
[DEBUG]2025-06-27 11:03:58,184: None
[DEBUG]2025-06-27 11:03:58,184: None
[DEBUG]2025-06-27 11:03:58,184: None
[DEBUG]2025-06-27 11:03:58,184: None
[DEBUG]2025-06-27 11:03:58,184: None
[DEBUG]2025-06-27 11:03:58,184: None
[DEBUG]2025-06-27 11:03:58,184: None
[DEBUG]2025-06-27 11:03:58,184: None
[DEBUG]2025-06-27 11:03:58,184: None
[DEBUG]2025-06-27 11:03:58,184: None
[DEBUG]2025-06-27 11:03:58,184: None
[DEBUG]2025-06-27 11:03:58,186: None
[DEBUG]2025-06-27 11:03:58,186: None
[DEBUG]2025-06-27 11:03:58,186: None
[DEBUG]2025-06-27 11:03:58,186: None
[DEBUG]2025-06-27 11:03:58,186: None
[DEBUG]2025-06-27 11:03:58,186: None
[DEBUG]2025-06-27 11:03:58,186: None
[DEBUG]2025-06-27 11:03:58,186: None
[DEBUG]2025-06-27 11:03:58,186: None
[DEBUG]2025-06-27 11:03:58,186: None
[DEBUG]2025-06-27 11:03:58,186: None
[DEBUG]2025-06-27 11:03:58,186: None
[DEBUG]2025-06-27 11:03:58,186: None
[DEBUG]2025-06-27 11:03:58,186: None
[DEBUG]2025-06-27 11:03:58,186: None
[DEBUG]2025-06-27 11:03:58,188: None
[DEBUG]2025-06-27 11:03:58,188: None
[DEBUG]2025-06-27 11:03:58,188: None
[DEBUG]2025-06-27 11:03:58,188: None
[DEBUG]2025-06-27 11:03:58,188: None
[DEBUG]2025-06-27 11:03:58,188: None
[DEBUG]2025-06-27 11:03:58,188: None
[DEBUG]2025-06-27 11:03:58,188: None
[DEBUG]2025-06-27 11:03:58,188: None
[DEBUG]2025-06-27 11:03:58,188: None
[DEBUG]2025-06-27 11:03:58,188: None
[DEBUG]2025-06-27 11:03:58,188: None
[DEBUG]2025-06-27 11:03:58,188: None
[DEBUG]2025-06-27 11:03:58,188: None
[DEBUG]2025-06-27 11:03:58,188: None
[DEBUG]2025-06-27 11:03:58,188: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,190: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,192: None
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,193: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,195: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,196: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,198: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,200: None
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,202: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,204: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,208: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:03:58,210: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,550: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:04:21,553: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:04:21,553: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:04:21,558: None
[DEBUG]2025-06-27 11:04:21,558: None
[DEBUG]2025-06-27 11:04:21,559: None
[DEBUG]2025-06-27 11:04:21,559: None
[DEBUG]2025-06-27 11:04:21,559: None
[DEBUG]2025-06-27 11:04:21,561: None
[DEBUG]2025-06-27 11:04:21,561: None
[DEBUG]2025-06-27 11:04:21,561: None
[DEBUG]2025-06-27 11:04:21,561: None
[DEBUG]2025-06-27 11:04:21,562: None
[DEBUG]2025-06-27 11:04:21,562: None
[DEBUG]2025-06-27 11:04:21,562: None
[DEBUG]2025-06-27 11:04:21,562: None
[DEBUG]2025-06-27 11:04:21,562: None
[DEBUG]2025-06-27 11:04:21,563: None
[DEBUG]2025-06-27 11:04:21,563: None
[DEBUG]2025-06-27 11:04:21,563: None
[DEBUG]2025-06-27 11:04:21,563: None
[DEBUG]2025-06-27 11:04:21,563: None
[DEBUG]2025-06-27 11:04:21,563: None
[DEBUG]2025-06-27 11:04:21,565: None
[DEBUG]2025-06-27 11:04:21,565: None
[DEBUG]2025-06-27 11:04:21,565: None
[DEBUG]2025-06-27 11:04:21,565: None
[DEBUG]2025-06-27 11:04:21,565: None
[DEBUG]2025-06-27 11:04:21,565: None
[DEBUG]2025-06-27 11:04:21,565: None
[DEBUG]2025-06-27 11:04:21,567: None
[DEBUG]2025-06-27 11:04:21,567: None
[DEBUG]2025-06-27 11:04:21,567: None
[DEBUG]2025-06-27 11:04:21,567: None
[DEBUG]2025-06-27 11:04:21,567: None
[DEBUG]2025-06-27 11:04:21,567: None
[DEBUG]2025-06-27 11:04:21,567: None
[DEBUG]2025-06-27 11:04:21,567: None
[DEBUG]2025-06-27 11:04:21,569: None
[DEBUG]2025-06-27 11:04:21,569: None
[DEBUG]2025-06-27 11:04:21,569: None
[DEBUG]2025-06-27 11:04:21,569: None
[DEBUG]2025-06-27 11:04:21,569: None
[DEBUG]2025-06-27 11:04:21,569: None
[DEBUG]2025-06-27 11:04:21,569: None
[DEBUG]2025-06-27 11:04:21,569: None
[DEBUG]2025-06-27 11:04:21,569: None
[DEBUG]2025-06-27 11:04:21,572: None
[DEBUG]2025-06-27 11:04:21,572: None
[DEBUG]2025-06-27 11:04:21,572: None
[DEBUG]2025-06-27 11:04:21,572: None
[DEBUG]2025-06-27 11:04:21,572: None
[DEBUG]2025-06-27 11:04:21,572: None
[DEBUG]2025-06-27 11:04:21,572: None
[DEBUG]2025-06-27 11:04:21,572: None
[DEBUG]2025-06-27 11:04:21,572: None
[DEBUG]2025-06-27 11:04:21,572: None
[DEBUG]2025-06-27 11:04:21,574: None
[DEBUG]2025-06-27 11:04:21,574: None
[DEBUG]2025-06-27 11:04:21,574: None
[DEBUG]2025-06-27 11:04:21,574: None
[DEBUG]2025-06-27 11:04:21,574: None
[DEBUG]2025-06-27 11:04:21,574: None
[DEBUG]2025-06-27 11:04:21,574: None
[DEBUG]2025-06-27 11:04:21,574: None
[DEBUG]2025-06-27 11:04:21,574: None
[DEBUG]2025-06-27 11:04:21,574: None
[DEBUG]2025-06-27 11:04:21,574: None
[DEBUG]2025-06-27 11:04:21,576: None
[DEBUG]2025-06-27 11:04:21,576: None
[DEBUG]2025-06-27 11:04:21,576: None
[DEBUG]2025-06-27 11:04:21,576: None
[DEBUG]2025-06-27 11:04:21,576: None
[DEBUG]2025-06-27 11:04:21,576: None
[DEBUG]2025-06-27 11:04:21,576: None
[DEBUG]2025-06-27 11:04:21,576: None
[DEBUG]2025-06-27 11:04:21,576: None
[DEBUG]2025-06-27 11:04:21,576: None
[DEBUG]2025-06-27 11:04:21,576: None
[DEBUG]2025-06-27 11:04:21,576: None
[DEBUG]2025-06-27 11:04:21,578: None
[DEBUG]2025-06-27 11:04:21,578: None
[DEBUG]2025-06-27 11:04:21,578: None
[DEBUG]2025-06-27 11:04:21,578: None
[DEBUG]2025-06-27 11:04:21,578: None
[DEBUG]2025-06-27 11:04:21,578: None
[DEBUG]2025-06-27 11:04:21,578: None
[DEBUG]2025-06-27 11:04:21,578: None
[DEBUG]2025-06-27 11:04:21,578: None
[DEBUG]2025-06-27 11:04:21,578: None
[DEBUG]2025-06-27 11:04:21,578: None
[DEBUG]2025-06-27 11:04:21,578: None
[DEBUG]2025-06-27 11:04:21,578: None
[DEBUG]2025-06-27 11:04:21,580: None
[DEBUG]2025-06-27 11:04:21,580: None
[DEBUG]2025-06-27 11:04:21,580: None
[DEBUG]2025-06-27 11:04:21,580: None
[DEBUG]2025-06-27 11:04:21,580: None
[DEBUG]2025-06-27 11:04:21,580: None
[DEBUG]2025-06-27 11:04:21,580: None
[DEBUG]2025-06-27 11:04:21,580: None
[DEBUG]2025-06-27 11:04:21,580: None
[DEBUG]2025-06-27 11:04:21,580: None
[DEBUG]2025-06-27 11:04:21,580: None
[DEBUG]2025-06-27 11:04:21,580: None
[DEBUG]2025-06-27 11:04:21,580: None
[DEBUG]2025-06-27 11:04:21,580: None
[DEBUG]2025-06-27 11:04:21,582: None
[DEBUG]2025-06-27 11:04:21,582: None
[DEBUG]2025-06-27 11:04:21,582: None
[DEBUG]2025-06-27 11:04:21,582: None
[DEBUG]2025-06-27 11:04:21,582: None
[DEBUG]2025-06-27 11:04:21,582: None
[DEBUG]2025-06-27 11:04:21,582: None
[DEBUG]2025-06-27 11:04:21,582: None
[DEBUG]2025-06-27 11:04:21,582: None
[DEBUG]2025-06-27 11:04:21,582: None
[DEBUG]2025-06-27 11:04:21,582: None
[DEBUG]2025-06-27 11:04:21,582: None
[DEBUG]2025-06-27 11:04:21,582: None
[DEBUG]2025-06-27 11:04:21,582: None
[DEBUG]2025-06-27 11:04:21,582: None
[DEBUG]2025-06-27 11:04:21,584: None
[DEBUG]2025-06-27 11:04:21,584: None
[DEBUG]2025-06-27 11:04:21,584: None
[DEBUG]2025-06-27 11:04:21,584: None
[DEBUG]2025-06-27 11:04:21,584: None
[DEBUG]2025-06-27 11:04:21,584: None
[DEBUG]2025-06-27 11:04:21,584: None
[DEBUG]2025-06-27 11:04:21,584: None
[DEBUG]2025-06-27 11:04:21,584: None
[DEBUG]2025-06-27 11:04:21,584: None
[DEBUG]2025-06-27 11:04:21,584: None
[DEBUG]2025-06-27 11:04:21,584: None
[DEBUG]2025-06-27 11:04:21,584: None
[DEBUG]2025-06-27 11:04:21,584: None
[DEBUG]2025-06-27 11:04:21,584: None
[DEBUG]2025-06-27 11:04:21,584: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,586: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,587: None
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,590: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,592: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,594: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,597: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,600: None
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,603: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,605: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,607: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,610: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,611: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:04:21,612: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,042: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:09:31,043: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:09:31,043: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:09:31,049: None
[DEBUG]2025-06-27 11:09:31,049: None
[DEBUG]2025-06-27 11:09:31,051: None
[DEBUG]2025-06-27 11:09:31,051: None
[DEBUG]2025-06-27 11:09:31,051: None
[DEBUG]2025-06-27 11:09:31,052: None
[DEBUG]2025-06-27 11:09:31,052: None
[DEBUG]2025-06-27 11:09:31,052: None
[DEBUG]2025-06-27 11:09:31,052: None
[DEBUG]2025-06-27 11:09:31,053: None
[DEBUG]2025-06-27 11:09:31,053: None
[DEBUG]2025-06-27 11:09:31,053: None
[DEBUG]2025-06-27 11:09:31,053: None
[DEBUG]2025-06-27 11:09:31,053: None
[DEBUG]2025-06-27 11:09:31,055: None
[DEBUG]2025-06-27 11:09:31,055: None
[DEBUG]2025-06-27 11:09:31,055: None
[DEBUG]2025-06-27 11:09:31,055: None
[DEBUG]2025-06-27 11:09:31,055: None
[DEBUG]2025-06-27 11:09:31,055: None
[DEBUG]2025-06-27 11:09:31,057: None
[DEBUG]2025-06-27 11:09:31,057: None
[DEBUG]2025-06-27 11:09:31,057: None
[DEBUG]2025-06-27 11:09:31,057: None
[DEBUG]2025-06-27 11:09:31,057: None
[DEBUG]2025-06-27 11:09:31,057: None
[DEBUG]2025-06-27 11:09:31,057: None
[DEBUG]2025-06-27 11:09:31,059: None
[DEBUG]2025-06-27 11:09:31,059: None
[DEBUG]2025-06-27 11:09:31,059: None
[DEBUG]2025-06-27 11:09:31,059: None
[DEBUG]2025-06-27 11:09:31,059: None
[DEBUG]2025-06-27 11:09:31,059: None
[DEBUG]2025-06-27 11:09:31,059: None
[DEBUG]2025-06-27 11:09:31,059: None
[DEBUG]2025-06-27 11:09:31,060: None
[DEBUG]2025-06-27 11:09:31,060: None
[DEBUG]2025-06-27 11:09:31,060: None
[DEBUG]2025-06-27 11:09:31,060: None
[DEBUG]2025-06-27 11:09:31,060: None
[DEBUG]2025-06-27 11:09:31,060: None
[DEBUG]2025-06-27 11:09:31,060: None
[DEBUG]2025-06-27 11:09:31,060: None
[DEBUG]2025-06-27 11:09:31,060: None
[DEBUG]2025-06-27 11:09:31,062: None
[DEBUG]2025-06-27 11:09:31,062: None
[DEBUG]2025-06-27 11:09:31,062: None
[DEBUG]2025-06-27 11:09:31,062: None
[DEBUG]2025-06-27 11:09:31,062: None
[DEBUG]2025-06-27 11:09:31,062: None
[DEBUG]2025-06-27 11:09:31,062: None
[DEBUG]2025-06-27 11:09:31,062: None
[DEBUG]2025-06-27 11:09:31,062: None
[DEBUG]2025-06-27 11:09:31,062: None
[DEBUG]2025-06-27 11:09:31,065: None
[DEBUG]2025-06-27 11:09:31,065: None
[DEBUG]2025-06-27 11:09:31,065: None
[DEBUG]2025-06-27 11:09:31,065: None
[DEBUG]2025-06-27 11:09:31,065: None
[DEBUG]2025-06-27 11:09:31,065: None
[DEBUG]2025-06-27 11:09:31,065: None
[DEBUG]2025-06-27 11:09:31,065: None
[DEBUG]2025-06-27 11:09:31,065: None
[DEBUG]2025-06-27 11:09:31,065: None
[DEBUG]2025-06-27 11:09:31,065: None
[DEBUG]2025-06-27 11:09:31,067: None
[DEBUG]2025-06-27 11:09:31,067: None
[DEBUG]2025-06-27 11:09:31,067: None
[DEBUG]2025-06-27 11:09:31,067: None
[DEBUG]2025-06-27 11:09:31,067: None
[DEBUG]2025-06-27 11:09:31,067: None
[DEBUG]2025-06-27 11:09:31,067: None
[DEBUG]2025-06-27 11:09:31,067: None
[DEBUG]2025-06-27 11:09:31,067: None
[DEBUG]2025-06-27 11:09:31,067: None
[DEBUG]2025-06-27 11:09:31,067: None
[DEBUG]2025-06-27 11:09:31,067: None
[DEBUG]2025-06-27 11:09:31,070: None
[DEBUG]2025-06-27 11:09:31,070: None
[DEBUG]2025-06-27 11:09:31,070: None
[DEBUG]2025-06-27 11:09:31,070: None
[DEBUG]2025-06-27 11:09:31,070: None
[DEBUG]2025-06-27 11:09:31,070: None
[DEBUG]2025-06-27 11:09:31,070: None
[DEBUG]2025-06-27 11:09:31,070: None
[DEBUG]2025-06-27 11:09:31,070: None
[DEBUG]2025-06-27 11:09:31,070: None
[DEBUG]2025-06-27 11:09:31,070: None
[DEBUG]2025-06-27 11:09:31,070: None
[DEBUG]2025-06-27 11:09:31,070: None
[DEBUG]2025-06-27 11:09:31,073: None
[DEBUG]2025-06-27 11:09:31,073: None
[DEBUG]2025-06-27 11:09:31,073: None
[DEBUG]2025-06-27 11:09:31,073: None
[DEBUG]2025-06-27 11:09:31,073: None
[DEBUG]2025-06-27 11:09:31,073: None
[DEBUG]2025-06-27 11:09:31,073: None
[DEBUG]2025-06-27 11:09:31,073: None
[DEBUG]2025-06-27 11:09:31,073: None
[DEBUG]2025-06-27 11:09:31,073: None
[DEBUG]2025-06-27 11:09:31,073: None
[DEBUG]2025-06-27 11:09:31,073: None
[DEBUG]2025-06-27 11:09:31,073: None
[DEBUG]2025-06-27 11:09:31,073: None
[DEBUG]2025-06-27 11:09:31,077: None
[DEBUG]2025-06-27 11:09:31,077: None
[DEBUG]2025-06-27 11:09:31,077: None
[DEBUG]2025-06-27 11:09:31,077: None
[DEBUG]2025-06-27 11:09:31,077: None
[DEBUG]2025-06-27 11:09:31,077: None
[DEBUG]2025-06-27 11:09:31,077: None
[DEBUG]2025-06-27 11:09:31,077: None
[DEBUG]2025-06-27 11:09:31,077: None
[DEBUG]2025-06-27 11:09:31,077: None
[DEBUG]2025-06-27 11:09:31,077: None
[DEBUG]2025-06-27 11:09:31,077: None
[DEBUG]2025-06-27 11:09:31,077: None
[DEBUG]2025-06-27 11:09:31,077: None
[DEBUG]2025-06-27 11:09:31,077: None
[DEBUG]2025-06-27 11:09:31,079: None
[DEBUG]2025-06-27 11:09:31,079: None
[DEBUG]2025-06-27 11:09:31,079: None
[DEBUG]2025-06-27 11:09:31,079: None
[DEBUG]2025-06-27 11:09:31,079: None
[DEBUG]2025-06-27 11:09:31,079: None
[DEBUG]2025-06-27 11:09:31,079: None
[DEBUG]2025-06-27 11:09:31,079: None
[DEBUG]2025-06-27 11:09:31,079: None
[DEBUG]2025-06-27 11:09:31,079: None
[DEBUG]2025-06-27 11:09:31,079: None
[DEBUG]2025-06-27 11:09:31,079: None
[DEBUG]2025-06-27 11:09:31,079: None
[DEBUG]2025-06-27 11:09:31,079: None
[DEBUG]2025-06-27 11:09:31,079: None
[DEBUG]2025-06-27 11:09:31,079: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,081: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,084: None
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,086: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,087: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,088: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,090: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,092: None
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,094: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,096: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,097: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,100: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,101: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:09:31,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,360: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:13:44,360: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:13:44,360: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:13:44,363: None
[DEBUG]2025-06-27 11:13:44,363: None
[DEBUG]2025-06-27 11:13:44,364: None
[DEBUG]2025-06-27 11:13:44,364: None
[DEBUG]2025-06-27 11:13:44,364: None
[DEBUG]2025-06-27 11:13:44,365: None
[DEBUG]2025-06-27 11:13:44,365: None
[DEBUG]2025-06-27 11:13:44,365: None
[DEBUG]2025-06-27 11:13:44,365: None
[DEBUG]2025-06-27 11:13:44,366: None
[DEBUG]2025-06-27 11:13:44,366: None
[DEBUG]2025-06-27 11:13:44,366: None
[DEBUG]2025-06-27 11:13:44,366: None
[DEBUG]2025-06-27 11:13:44,366: None
[DEBUG]2025-06-27 11:13:44,367: None
[DEBUG]2025-06-27 11:13:44,367: None
[DEBUG]2025-06-27 11:13:44,367: None
[DEBUG]2025-06-27 11:13:44,367: None
[DEBUG]2025-06-27 11:13:44,367: None
[DEBUG]2025-06-27 11:13:44,367: None
[DEBUG]2025-06-27 11:13:44,368: None
[DEBUG]2025-06-27 11:13:44,368: None
[DEBUG]2025-06-27 11:13:44,368: None
[DEBUG]2025-06-27 11:13:44,368: None
[DEBUG]2025-06-27 11:13:44,368: None
[DEBUG]2025-06-27 11:13:44,368: None
[DEBUG]2025-06-27 11:13:44,368: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,369: None
[DEBUG]2025-06-27 11:13:44,370: None
[DEBUG]2025-06-27 11:13:44,370: None
[DEBUG]2025-06-27 11:13:44,370: None
[DEBUG]2025-06-27 11:13:44,370: None
[DEBUG]2025-06-27 11:13:44,370: None
[DEBUG]2025-06-27 11:13:44,370: None
[DEBUG]2025-06-27 11:13:44,370: None
[DEBUG]2025-06-27 11:13:44,370: None
[DEBUG]2025-06-27 11:13:44,370: None
[DEBUG]2025-06-27 11:13:44,370: None
[DEBUG]2025-06-27 11:13:44,371: None
[DEBUG]2025-06-27 11:13:44,371: None
[DEBUG]2025-06-27 11:13:44,371: None
[DEBUG]2025-06-27 11:13:44,371: None
[DEBUG]2025-06-27 11:13:44,371: None
[DEBUG]2025-06-27 11:13:44,371: None
[DEBUG]2025-06-27 11:13:44,371: None
[DEBUG]2025-06-27 11:13:44,371: None
[DEBUG]2025-06-27 11:13:44,371: None
[DEBUG]2025-06-27 11:13:44,371: None
[DEBUG]2025-06-27 11:13:44,371: None
[DEBUG]2025-06-27 11:13:44,372: None
[DEBUG]2025-06-27 11:13:44,372: None
[DEBUG]2025-06-27 11:13:44,372: None
[DEBUG]2025-06-27 11:13:44,372: None
[DEBUG]2025-06-27 11:13:44,372: None
[DEBUG]2025-06-27 11:13:44,372: None
[DEBUG]2025-06-27 11:13:44,372: None
[DEBUG]2025-06-27 11:13:44,372: None
[DEBUG]2025-06-27 11:13:44,372: None
[DEBUG]2025-06-27 11:13:44,372: None
[DEBUG]2025-06-27 11:13:44,372: None
[DEBUG]2025-06-27 11:13:44,372: None
[DEBUG]2025-06-27 11:13:44,373: None
[DEBUG]2025-06-27 11:13:44,373: None
[DEBUG]2025-06-27 11:13:44,373: None
[DEBUG]2025-06-27 11:13:44,373: None
[DEBUG]2025-06-27 11:13:44,373: None
[DEBUG]2025-06-27 11:13:44,373: None
[DEBUG]2025-06-27 11:13:44,373: None
[DEBUG]2025-06-27 11:13:44,373: None
[DEBUG]2025-06-27 11:13:44,373: None
[DEBUG]2025-06-27 11:13:44,373: None
[DEBUG]2025-06-27 11:13:44,373: None
[DEBUG]2025-06-27 11:13:44,373: None
[DEBUG]2025-06-27 11:13:44,373: None
[DEBUG]2025-06-27 11:13:44,374: None
[DEBUG]2025-06-27 11:13:44,374: None
[DEBUG]2025-06-27 11:13:44,374: None
[DEBUG]2025-06-27 11:13:44,374: None
[DEBUG]2025-06-27 11:13:44,374: None
[DEBUG]2025-06-27 11:13:44,374: None
[DEBUG]2025-06-27 11:13:44,374: None
[DEBUG]2025-06-27 11:13:44,374: None
[DEBUG]2025-06-27 11:13:44,374: None
[DEBUG]2025-06-27 11:13:44,374: None
[DEBUG]2025-06-27 11:13:44,374: None
[DEBUG]2025-06-27 11:13:44,374: None
[DEBUG]2025-06-27 11:13:44,374: None
[DEBUG]2025-06-27 11:13:44,374: None
[DEBUG]2025-06-27 11:13:44,375: None
[DEBUG]2025-06-27 11:13:44,375: None
[DEBUG]2025-06-27 11:13:44,375: None
[DEBUG]2025-06-27 11:13:44,375: None
[DEBUG]2025-06-27 11:13:44,375: None
[DEBUG]2025-06-27 11:13:44,375: None
[DEBUG]2025-06-27 11:13:44,375: None
[DEBUG]2025-06-27 11:13:44,375: None
[DEBUG]2025-06-27 11:13:44,375: None
[DEBUG]2025-06-27 11:13:44,375: None
[DEBUG]2025-06-27 11:13:44,375: None
[DEBUG]2025-06-27 11:13:44,375: None
[DEBUG]2025-06-27 11:13:44,375: None
[DEBUG]2025-06-27 11:13:44,375: None
[DEBUG]2025-06-27 11:13:44,375: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,376: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,377: None
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,378: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,379: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,380: None
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,381: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,382: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,383: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:44,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,536: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:13:52,537: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:13:52,537: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:13:52,545: None
[DEBUG]2025-06-27 11:13:52,545: None
[DEBUG]2025-06-27 11:13:52,546: None
[DEBUG]2025-06-27 11:13:52,546: None
[DEBUG]2025-06-27 11:13:52,546: None
[DEBUG]2025-06-27 11:13:52,548: None
[DEBUG]2025-06-27 11:13:52,548: None
[DEBUG]2025-06-27 11:13:52,548: None
[DEBUG]2025-06-27 11:13:52,548: None
[DEBUG]2025-06-27 11:13:52,550: None
[DEBUG]2025-06-27 11:13:52,550: None
[DEBUG]2025-06-27 11:13:52,550: None
[DEBUG]2025-06-27 11:13:52,550: None
[DEBUG]2025-06-27 11:13:52,550: None
[DEBUG]2025-06-27 11:13:52,552: None
[DEBUG]2025-06-27 11:13:52,552: None
[DEBUG]2025-06-27 11:13:52,552: None
[DEBUG]2025-06-27 11:13:52,552: None
[DEBUG]2025-06-27 11:13:52,552: None
[DEBUG]2025-06-27 11:13:52,552: None
[DEBUG]2025-06-27 11:13:52,553: None
[DEBUG]2025-06-27 11:13:52,553: None
[DEBUG]2025-06-27 11:13:52,553: None
[DEBUG]2025-06-27 11:13:52,553: None
[DEBUG]2025-06-27 11:13:52,553: None
[DEBUG]2025-06-27 11:13:52,553: None
[DEBUG]2025-06-27 11:13:52,553: None
[DEBUG]2025-06-27 11:13:52,554: None
[DEBUG]2025-06-27 11:13:52,554: None
[DEBUG]2025-06-27 11:13:52,554: None
[DEBUG]2025-06-27 11:13:52,554: None
[DEBUG]2025-06-27 11:13:52,554: None
[DEBUG]2025-06-27 11:13:52,554: None
[DEBUG]2025-06-27 11:13:52,554: None
[DEBUG]2025-06-27 11:13:52,554: None
[DEBUG]2025-06-27 11:13:52,555: None
[DEBUG]2025-06-27 11:13:52,555: None
[DEBUG]2025-06-27 11:13:52,555: None
[DEBUG]2025-06-27 11:13:52,555: None
[DEBUG]2025-06-27 11:13:52,555: None
[DEBUG]2025-06-27 11:13:52,555: None
[DEBUG]2025-06-27 11:13:52,555: None
[DEBUG]2025-06-27 11:13:52,555: None
[DEBUG]2025-06-27 11:13:52,555: None
[DEBUG]2025-06-27 11:13:52,557: None
[DEBUG]2025-06-27 11:13:52,557: None
[DEBUG]2025-06-27 11:13:52,557: None
[DEBUG]2025-06-27 11:13:52,557: None
[DEBUG]2025-06-27 11:13:52,557: None
[DEBUG]2025-06-27 11:13:52,557: None
[DEBUG]2025-06-27 11:13:52,557: None
[DEBUG]2025-06-27 11:13:52,557: None
[DEBUG]2025-06-27 11:13:52,557: None
[DEBUG]2025-06-27 11:13:52,557: None
[DEBUG]2025-06-27 11:13:52,559: None
[DEBUG]2025-06-27 11:13:52,559: None
[DEBUG]2025-06-27 11:13:52,559: None
[DEBUG]2025-06-27 11:13:52,559: None
[DEBUG]2025-06-27 11:13:52,559: None
[DEBUG]2025-06-27 11:13:52,559: None
[DEBUG]2025-06-27 11:13:52,559: None
[DEBUG]2025-06-27 11:13:52,559: None
[DEBUG]2025-06-27 11:13:52,559: None
[DEBUG]2025-06-27 11:13:52,559: None
[DEBUG]2025-06-27 11:13:52,559: None
[DEBUG]2025-06-27 11:13:52,560: None
[DEBUG]2025-06-27 11:13:52,560: None
[DEBUG]2025-06-27 11:13:52,560: None
[DEBUG]2025-06-27 11:13:52,560: None
[DEBUG]2025-06-27 11:13:52,560: None
[DEBUG]2025-06-27 11:13:52,560: None
[DEBUG]2025-06-27 11:13:52,560: None
[DEBUG]2025-06-27 11:13:52,560: None
[DEBUG]2025-06-27 11:13:52,560: None
[DEBUG]2025-06-27 11:13:52,560: None
[DEBUG]2025-06-27 11:13:52,560: None
[DEBUG]2025-06-27 11:13:52,560: None
[DEBUG]2025-06-27 11:13:52,561: None
[DEBUG]2025-06-27 11:13:52,561: None
[DEBUG]2025-06-27 11:13:52,561: None
[DEBUG]2025-06-27 11:13:52,561: None
[DEBUG]2025-06-27 11:13:52,561: None
[DEBUG]2025-06-27 11:13:52,561: None
[DEBUG]2025-06-27 11:13:52,561: None
[DEBUG]2025-06-27 11:13:52,561: None
[DEBUG]2025-06-27 11:13:52,561: None
[DEBUG]2025-06-27 11:13:52,561: None
[DEBUG]2025-06-27 11:13:52,561: None
[DEBUG]2025-06-27 11:13:52,561: None
[DEBUG]2025-06-27 11:13:52,561: None
[DEBUG]2025-06-27 11:13:52,563: None
[DEBUG]2025-06-27 11:13:52,563: None
[DEBUG]2025-06-27 11:13:52,563: None
[DEBUG]2025-06-27 11:13:52,563: None
[DEBUG]2025-06-27 11:13:52,563: None
[DEBUG]2025-06-27 11:13:52,563: None
[DEBUG]2025-06-27 11:13:52,563: None
[DEBUG]2025-06-27 11:13:52,563: None
[DEBUG]2025-06-27 11:13:52,563: None
[DEBUG]2025-06-27 11:13:52,563: None
[DEBUG]2025-06-27 11:13:52,563: None
[DEBUG]2025-06-27 11:13:52,563: None
[DEBUG]2025-06-27 11:13:52,563: None
[DEBUG]2025-06-27 11:13:52,563: None
[DEBUG]2025-06-27 11:13:52,564: None
[DEBUG]2025-06-27 11:13:52,564: None
[DEBUG]2025-06-27 11:13:52,564: None
[DEBUG]2025-06-27 11:13:52,564: None
[DEBUG]2025-06-27 11:13:52,564: None
[DEBUG]2025-06-27 11:13:52,564: None
[DEBUG]2025-06-27 11:13:52,564: None
[DEBUG]2025-06-27 11:13:52,564: None
[DEBUG]2025-06-27 11:13:52,564: None
[DEBUG]2025-06-27 11:13:52,564: None
[DEBUG]2025-06-27 11:13:52,564: None
[DEBUG]2025-06-27 11:13:52,564: None
[DEBUG]2025-06-27 11:13:52,564: None
[DEBUG]2025-06-27 11:13:52,564: None
[DEBUG]2025-06-27 11:13:52,564: None
[DEBUG]2025-06-27 11:13:52,566: None
[DEBUG]2025-06-27 11:13:52,566: None
[DEBUG]2025-06-27 11:13:52,566: None
[DEBUG]2025-06-27 11:13:52,566: None
[DEBUG]2025-06-27 11:13:52,566: None
[DEBUG]2025-06-27 11:13:52,566: None
[DEBUG]2025-06-27 11:13:52,566: None
[DEBUG]2025-06-27 11:13:52,566: None
[DEBUG]2025-06-27 11:13:52,566: None
[DEBUG]2025-06-27 11:13:52,566: None
[DEBUG]2025-06-27 11:13:52,566: None
[DEBUG]2025-06-27 11:13:52,566: None
[DEBUG]2025-06-27 11:13:52,566: None
[DEBUG]2025-06-27 11:13:52,566: None
[DEBUG]2025-06-27 11:13:52,566: None
[DEBUG]2025-06-27 11:13:52,566: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,567: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,568: None
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,570: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,571: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,572: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,575: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,577: None
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,579: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,580: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,581: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,583: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,584: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:13:52,585: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,246: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:16:27,247: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:16:27,247: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:16:27,253: None
[DEBUG]2025-06-27 11:16:27,253: None
[DEBUG]2025-06-27 11:16:27,254: None
[DEBUG]2025-06-27 11:16:27,254: None
[DEBUG]2025-06-27 11:16:27,254: None
[DEBUG]2025-06-27 11:16:27,256: None
[DEBUG]2025-06-27 11:16:27,256: None
[DEBUG]2025-06-27 11:16:27,256: None
[DEBUG]2025-06-27 11:16:27,256: None
[DEBUG]2025-06-27 11:16:27,258: None
[DEBUG]2025-06-27 11:16:27,258: None
[DEBUG]2025-06-27 11:16:27,258: None
[DEBUG]2025-06-27 11:16:27,258: None
[DEBUG]2025-06-27 11:16:27,258: None
[DEBUG]2025-06-27 11:16:27,259: None
[DEBUG]2025-06-27 11:16:27,259: None
[DEBUG]2025-06-27 11:16:27,259: None
[DEBUG]2025-06-27 11:16:27,259: None
[DEBUG]2025-06-27 11:16:27,259: None
[DEBUG]2025-06-27 11:16:27,259: None
[DEBUG]2025-06-27 11:16:27,261: None
[DEBUG]2025-06-27 11:16:27,261: None
[DEBUG]2025-06-27 11:16:27,261: None
[DEBUG]2025-06-27 11:16:27,261: None
[DEBUG]2025-06-27 11:16:27,261: None
[DEBUG]2025-06-27 11:16:27,261: None
[DEBUG]2025-06-27 11:16:27,261: None
[DEBUG]2025-06-27 11:16:27,264: None
[DEBUG]2025-06-27 11:16:27,264: None
[DEBUG]2025-06-27 11:16:27,264: None
[DEBUG]2025-06-27 11:16:27,264: None
[DEBUG]2025-06-27 11:16:27,264: None
[DEBUG]2025-06-27 11:16:27,264: None
[DEBUG]2025-06-27 11:16:27,264: None
[DEBUG]2025-06-27 11:16:27,264: None
[DEBUG]2025-06-27 11:16:27,267: None
[DEBUG]2025-06-27 11:16:27,267: None
[DEBUG]2025-06-27 11:16:27,267: None
[DEBUG]2025-06-27 11:16:27,267: None
[DEBUG]2025-06-27 11:16:27,267: None
[DEBUG]2025-06-27 11:16:27,267: None
[DEBUG]2025-06-27 11:16:27,267: None
[DEBUG]2025-06-27 11:16:27,267: None
[DEBUG]2025-06-27 11:16:27,267: None
[DEBUG]2025-06-27 11:16:27,269: None
[DEBUG]2025-06-27 11:16:27,269: None
[DEBUG]2025-06-27 11:16:27,269: None
[DEBUG]2025-06-27 11:16:27,269: None
[DEBUG]2025-06-27 11:16:27,269: None
[DEBUG]2025-06-27 11:16:27,269: None
[DEBUG]2025-06-27 11:16:27,269: None
[DEBUG]2025-06-27 11:16:27,269: None
[DEBUG]2025-06-27 11:16:27,269: None
[DEBUG]2025-06-27 11:16:27,269: None
[DEBUG]2025-06-27 11:16:27,271: None
[DEBUG]2025-06-27 11:16:27,271: None
[DEBUG]2025-06-27 11:16:27,271: None
[DEBUG]2025-06-27 11:16:27,271: None
[DEBUG]2025-06-27 11:16:27,271: None
[DEBUG]2025-06-27 11:16:27,271: None
[DEBUG]2025-06-27 11:16:27,271: None
[DEBUG]2025-06-27 11:16:27,271: None
[DEBUG]2025-06-27 11:16:27,271: None
[DEBUG]2025-06-27 11:16:27,271: None
[DEBUG]2025-06-27 11:16:27,271: None
[DEBUG]2025-06-27 11:16:27,275: None
[DEBUG]2025-06-27 11:16:27,275: None
[DEBUG]2025-06-27 11:16:27,275: None
[DEBUG]2025-06-27 11:16:27,275: None
[DEBUG]2025-06-27 11:16:27,275: None
[DEBUG]2025-06-27 11:16:27,275: None
[DEBUG]2025-06-27 11:16:27,275: None
[DEBUG]2025-06-27 11:16:27,275: None
[DEBUG]2025-06-27 11:16:27,275: None
[DEBUG]2025-06-27 11:16:27,275: None
[DEBUG]2025-06-27 11:16:27,275: None
[DEBUG]2025-06-27 11:16:27,275: None
[DEBUG]2025-06-27 11:16:27,278: None
[DEBUG]2025-06-27 11:16:27,278: None
[DEBUG]2025-06-27 11:16:27,278: None
[DEBUG]2025-06-27 11:16:27,278: None
[DEBUG]2025-06-27 11:16:27,278: None
[DEBUG]2025-06-27 11:16:27,278: None
[DEBUG]2025-06-27 11:16:27,278: None
[DEBUG]2025-06-27 11:16:27,278: None
[DEBUG]2025-06-27 11:16:27,278: None
[DEBUG]2025-06-27 11:16:27,278: None
[DEBUG]2025-06-27 11:16:27,278: None
[DEBUG]2025-06-27 11:16:27,278: None
[DEBUG]2025-06-27 11:16:27,278: None
[DEBUG]2025-06-27 11:16:27,281: None
[DEBUG]2025-06-27 11:16:27,281: None
[DEBUG]2025-06-27 11:16:27,281: None
[DEBUG]2025-06-27 11:16:27,281: None
[DEBUG]2025-06-27 11:16:27,281: None
[DEBUG]2025-06-27 11:16:27,281: None
[DEBUG]2025-06-27 11:16:27,281: None
[DEBUG]2025-06-27 11:16:27,281: None
[DEBUG]2025-06-27 11:16:27,281: None
[DEBUG]2025-06-27 11:16:27,281: None
[DEBUG]2025-06-27 11:16:27,281: None
[DEBUG]2025-06-27 11:16:27,281: None
[DEBUG]2025-06-27 11:16:27,281: None
[DEBUG]2025-06-27 11:16:27,281: None
[DEBUG]2025-06-27 11:16:27,283: None
[DEBUG]2025-06-27 11:16:27,283: None
[DEBUG]2025-06-27 11:16:27,283: None
[DEBUG]2025-06-27 11:16:27,283: None
[DEBUG]2025-06-27 11:16:27,283: None
[DEBUG]2025-06-27 11:16:27,283: None
[DEBUG]2025-06-27 11:16:27,283: None
[DEBUG]2025-06-27 11:16:27,283: None
[DEBUG]2025-06-27 11:16:27,283: None
[DEBUG]2025-06-27 11:16:27,283: None
[DEBUG]2025-06-27 11:16:27,283: None
[DEBUG]2025-06-27 11:16:27,283: None
[DEBUG]2025-06-27 11:16:27,283: None
[DEBUG]2025-06-27 11:16:27,283: None
[DEBUG]2025-06-27 11:16:27,283: None
[DEBUG]2025-06-27 11:16:27,285: None
[DEBUG]2025-06-27 11:16:27,285: None
[DEBUG]2025-06-27 11:16:27,285: None
[DEBUG]2025-06-27 11:16:27,285: None
[DEBUG]2025-06-27 11:16:27,285: None
[DEBUG]2025-06-27 11:16:27,285: None
[DEBUG]2025-06-27 11:16:27,285: None
[DEBUG]2025-06-27 11:16:27,285: None
[DEBUG]2025-06-27 11:16:27,285: None
[DEBUG]2025-06-27 11:16:27,285: None
[DEBUG]2025-06-27 11:16:27,285: None
[DEBUG]2025-06-27 11:16:27,285: None
[DEBUG]2025-06-27 11:16:27,285: None
[DEBUG]2025-06-27 11:16:27,285: None
[DEBUG]2025-06-27 11:16:27,285: None
[DEBUG]2025-06-27 11:16:27,285: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,289: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,291: None
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,293: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,294: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,295: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,298: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,300: None
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,302: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,304: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,305: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,308: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,310: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:27,311: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,431: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:16:39,444: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:16:39,445: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:16:39,449: None
[DEBUG]2025-06-27 11:16:39,449: None
[DEBUG]2025-06-27 11:16:39,450: None
[DEBUG]2025-06-27 11:16:39,450: None
[DEBUG]2025-06-27 11:16:39,450: None
[DEBUG]2025-06-27 11:16:39,451: None
[DEBUG]2025-06-27 11:16:39,451: None
[DEBUG]2025-06-27 11:16:39,451: None
[DEBUG]2025-06-27 11:16:39,451: None
[DEBUG]2025-06-27 11:16:39,453: None
[DEBUG]2025-06-27 11:16:39,453: None
[DEBUG]2025-06-27 11:16:39,453: None
[DEBUG]2025-06-27 11:16:39,453: None
[DEBUG]2025-06-27 11:16:39,453: None
[DEBUG]2025-06-27 11:16:39,455: None
[DEBUG]2025-06-27 11:16:39,455: None
[DEBUG]2025-06-27 11:16:39,455: None
[DEBUG]2025-06-27 11:16:39,455: None
[DEBUG]2025-06-27 11:16:39,455: None
[DEBUG]2025-06-27 11:16:39,455: None
[DEBUG]2025-06-27 11:16:39,457: None
[DEBUG]2025-06-27 11:16:39,457: None
[DEBUG]2025-06-27 11:16:39,457: None
[DEBUG]2025-06-27 11:16:39,457: None
[DEBUG]2025-06-27 11:16:39,457: None
[DEBUG]2025-06-27 11:16:39,457: None
[DEBUG]2025-06-27 11:16:39,457: None
[DEBUG]2025-06-27 11:16:39,459: None
[DEBUG]2025-06-27 11:16:39,459: None
[DEBUG]2025-06-27 11:16:39,459: None
[DEBUG]2025-06-27 11:16:39,459: None
[DEBUG]2025-06-27 11:16:39,459: None
[DEBUG]2025-06-27 11:16:39,459: None
[DEBUG]2025-06-27 11:16:39,459: None
[DEBUG]2025-06-27 11:16:39,459: None
[DEBUG]2025-06-27 11:16:39,460: None
[DEBUG]2025-06-27 11:16:39,460: None
[DEBUG]2025-06-27 11:16:39,460: None
[DEBUG]2025-06-27 11:16:39,460: None
[DEBUG]2025-06-27 11:16:39,460: None
[DEBUG]2025-06-27 11:16:39,460: None
[DEBUG]2025-06-27 11:16:39,460: None
[DEBUG]2025-06-27 11:16:39,460: None
[DEBUG]2025-06-27 11:16:39,460: None
[DEBUG]2025-06-27 11:16:39,462: None
[DEBUG]2025-06-27 11:16:39,462: None
[DEBUG]2025-06-27 11:16:39,462: None
[DEBUG]2025-06-27 11:16:39,462: None
[DEBUG]2025-06-27 11:16:39,462: None
[DEBUG]2025-06-27 11:16:39,462: None
[DEBUG]2025-06-27 11:16:39,462: None
[DEBUG]2025-06-27 11:16:39,462: None
[DEBUG]2025-06-27 11:16:39,462: None
[DEBUG]2025-06-27 11:16:39,462: None
[DEBUG]2025-06-27 11:16:39,465: None
[DEBUG]2025-06-27 11:16:39,465: None
[DEBUG]2025-06-27 11:16:39,465: None
[DEBUG]2025-06-27 11:16:39,465: None
[DEBUG]2025-06-27 11:16:39,465: None
[DEBUG]2025-06-27 11:16:39,465: None
[DEBUG]2025-06-27 11:16:39,465: None
[DEBUG]2025-06-27 11:16:39,465: None
[DEBUG]2025-06-27 11:16:39,465: None
[DEBUG]2025-06-27 11:16:39,465: None
[DEBUG]2025-06-27 11:16:39,465: None
[DEBUG]2025-06-27 11:16:39,467: None
[DEBUG]2025-06-27 11:16:39,467: None
[DEBUG]2025-06-27 11:16:39,467: None
[DEBUG]2025-06-27 11:16:39,467: None
[DEBUG]2025-06-27 11:16:39,467: None
[DEBUG]2025-06-27 11:16:39,467: None
[DEBUG]2025-06-27 11:16:39,467: None
[DEBUG]2025-06-27 11:16:39,467: None
[DEBUG]2025-06-27 11:16:39,467: None
[DEBUG]2025-06-27 11:16:39,467: None
[DEBUG]2025-06-27 11:16:39,467: None
[DEBUG]2025-06-27 11:16:39,467: None
[DEBUG]2025-06-27 11:16:39,470: None
[DEBUG]2025-06-27 11:16:39,470: None
[DEBUG]2025-06-27 11:16:39,470: None
[DEBUG]2025-06-27 11:16:39,470: None
[DEBUG]2025-06-27 11:16:39,470: None
[DEBUG]2025-06-27 11:16:39,470: None
[DEBUG]2025-06-27 11:16:39,470: None
[DEBUG]2025-06-27 11:16:39,470: None
[DEBUG]2025-06-27 11:16:39,470: None
[DEBUG]2025-06-27 11:16:39,470: None
[DEBUG]2025-06-27 11:16:39,470: None
[DEBUG]2025-06-27 11:16:39,470: None
[DEBUG]2025-06-27 11:16:39,470: None
[DEBUG]2025-06-27 11:16:39,474: None
[DEBUG]2025-06-27 11:16:39,474: None
[DEBUG]2025-06-27 11:16:39,474: None
[DEBUG]2025-06-27 11:16:39,474: None
[DEBUG]2025-06-27 11:16:39,474: None
[DEBUG]2025-06-27 11:16:39,474: None
[DEBUG]2025-06-27 11:16:39,474: None
[DEBUG]2025-06-27 11:16:39,474: None
[DEBUG]2025-06-27 11:16:39,474: None
[DEBUG]2025-06-27 11:16:39,474: None
[DEBUG]2025-06-27 11:16:39,474: None
[DEBUG]2025-06-27 11:16:39,474: None
[DEBUG]2025-06-27 11:16:39,474: None
[DEBUG]2025-06-27 11:16:39,474: None
[DEBUG]2025-06-27 11:16:39,476: None
[DEBUG]2025-06-27 11:16:39,476: None
[DEBUG]2025-06-27 11:16:39,476: None
[DEBUG]2025-06-27 11:16:39,476: None
[DEBUG]2025-06-27 11:16:39,476: None
[DEBUG]2025-06-27 11:16:39,476: None
[DEBUG]2025-06-27 11:16:39,476: None
[DEBUG]2025-06-27 11:16:39,476: None
[DEBUG]2025-06-27 11:16:39,476: None
[DEBUG]2025-06-27 11:16:39,476: None
[DEBUG]2025-06-27 11:16:39,476: None
[DEBUG]2025-06-27 11:16:39,476: None
[DEBUG]2025-06-27 11:16:39,476: None
[DEBUG]2025-06-27 11:16:39,476: None
[DEBUG]2025-06-27 11:16:39,476: None
[DEBUG]2025-06-27 11:16:39,478: None
[DEBUG]2025-06-27 11:16:39,478: None
[DEBUG]2025-06-27 11:16:39,478: None
[DEBUG]2025-06-27 11:16:39,478: None
[DEBUG]2025-06-27 11:16:39,478: None
[DEBUG]2025-06-27 11:16:39,478: None
[DEBUG]2025-06-27 11:16:39,478: None
[DEBUG]2025-06-27 11:16:39,478: None
[DEBUG]2025-06-27 11:16:39,478: None
[DEBUG]2025-06-27 11:16:39,478: None
[DEBUG]2025-06-27 11:16:39,478: None
[DEBUG]2025-06-27 11:16:39,478: None
[DEBUG]2025-06-27 11:16:39,478: None
[DEBUG]2025-06-27 11:16:39,478: None
[DEBUG]2025-06-27 11:16:39,478: None
[DEBUG]2025-06-27 11:16:39,478: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,481: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,484: None
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,487: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,489: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,490: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,494: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,498: None
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,501: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,503: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,507: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,508: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:39,509: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,224: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:16:52,284: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:16:52,284: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:16:52,289: None
[DEBUG]2025-06-27 11:16:52,289: None
[DEBUG]2025-06-27 11:16:52,291: None
[DEBUG]2025-06-27 11:16:52,291: None
[DEBUG]2025-06-27 11:16:52,291: None
[DEBUG]2025-06-27 11:16:52,292: None
[DEBUG]2025-06-27 11:16:52,292: None
[DEBUG]2025-06-27 11:16:52,292: None
[DEBUG]2025-06-27 11:16:52,292: None
[DEBUG]2025-06-27 11:16:52,294: None
[DEBUG]2025-06-27 11:16:52,294: None
[DEBUG]2025-06-27 11:16:52,294: None
[DEBUG]2025-06-27 11:16:52,294: None
[DEBUG]2025-06-27 11:16:52,294: None
[DEBUG]2025-06-27 11:16:52,295: None
[DEBUG]2025-06-27 11:16:52,295: None
[DEBUG]2025-06-27 11:16:52,295: None
[DEBUG]2025-06-27 11:16:52,295: None
[DEBUG]2025-06-27 11:16:52,295: None
[DEBUG]2025-06-27 11:16:52,295: None
[DEBUG]2025-06-27 11:16:52,297: None
[DEBUG]2025-06-27 11:16:52,297: None
[DEBUG]2025-06-27 11:16:52,297: None
[DEBUG]2025-06-27 11:16:52,297: None
[DEBUG]2025-06-27 11:16:52,297: None
[DEBUG]2025-06-27 11:16:52,297: None
[DEBUG]2025-06-27 11:16:52,297: None
[DEBUG]2025-06-27 11:16:52,298: None
[DEBUG]2025-06-27 11:16:52,298: None
[DEBUG]2025-06-27 11:16:52,298: None
[DEBUG]2025-06-27 11:16:52,298: None
[DEBUG]2025-06-27 11:16:52,298: None
[DEBUG]2025-06-27 11:16:52,298: None
[DEBUG]2025-06-27 11:16:52,298: None
[DEBUG]2025-06-27 11:16:52,298: None
[DEBUG]2025-06-27 11:16:52,299: None
[DEBUG]2025-06-27 11:16:52,299: None
[DEBUG]2025-06-27 11:16:52,299: None
[DEBUG]2025-06-27 11:16:52,299: None
[DEBUG]2025-06-27 11:16:52,299: None
[DEBUG]2025-06-27 11:16:52,299: None
[DEBUG]2025-06-27 11:16:52,299: None
[DEBUG]2025-06-27 11:16:52,299: None
[DEBUG]2025-06-27 11:16:52,299: None
[DEBUG]2025-06-27 11:16:52,301: None
[DEBUG]2025-06-27 11:16:52,301: None
[DEBUG]2025-06-27 11:16:52,301: None
[DEBUG]2025-06-27 11:16:52,301: None
[DEBUG]2025-06-27 11:16:52,301: None
[DEBUG]2025-06-27 11:16:52,301: None
[DEBUG]2025-06-27 11:16:52,301: None
[DEBUG]2025-06-27 11:16:52,301: None
[DEBUG]2025-06-27 11:16:52,301: None
[DEBUG]2025-06-27 11:16:52,301: None
[DEBUG]2025-06-27 11:16:52,303: None
[DEBUG]2025-06-27 11:16:52,303: None
[DEBUG]2025-06-27 11:16:52,303: None
[DEBUG]2025-06-27 11:16:52,303: None
[DEBUG]2025-06-27 11:16:52,303: None
[DEBUG]2025-06-27 11:16:52,303: None
[DEBUG]2025-06-27 11:16:52,303: None
[DEBUG]2025-06-27 11:16:52,303: None
[DEBUG]2025-06-27 11:16:52,303: None
[DEBUG]2025-06-27 11:16:52,303: None
[DEBUG]2025-06-27 11:16:52,303: None
[DEBUG]2025-06-27 11:16:52,305: None
[DEBUG]2025-06-27 11:16:52,305: None
[DEBUG]2025-06-27 11:16:52,305: None
[DEBUG]2025-06-27 11:16:52,305: None
[DEBUG]2025-06-27 11:16:52,305: None
[DEBUG]2025-06-27 11:16:52,305: None
[DEBUG]2025-06-27 11:16:52,305: None
[DEBUG]2025-06-27 11:16:52,305: None
[DEBUG]2025-06-27 11:16:52,305: None
[DEBUG]2025-06-27 11:16:52,305: None
[DEBUG]2025-06-27 11:16:52,305: None
[DEBUG]2025-06-27 11:16:52,305: None
[DEBUG]2025-06-27 11:16:52,307: None
[DEBUG]2025-06-27 11:16:52,307: None
[DEBUG]2025-06-27 11:16:52,307: None
[DEBUG]2025-06-27 11:16:52,307: None
[DEBUG]2025-06-27 11:16:52,307: None
[DEBUG]2025-06-27 11:16:52,307: None
[DEBUG]2025-06-27 11:16:52,307: None
[DEBUG]2025-06-27 11:16:52,307: None
[DEBUG]2025-06-27 11:16:52,307: None
[DEBUG]2025-06-27 11:16:52,307: None
[DEBUG]2025-06-27 11:16:52,307: None
[DEBUG]2025-06-27 11:16:52,307: None
[DEBUG]2025-06-27 11:16:52,307: None
[DEBUG]2025-06-27 11:16:52,309: None
[DEBUG]2025-06-27 11:16:52,309: None
[DEBUG]2025-06-27 11:16:52,309: None
[DEBUG]2025-06-27 11:16:52,309: None
[DEBUG]2025-06-27 11:16:52,309: None
[DEBUG]2025-06-27 11:16:52,309: None
[DEBUG]2025-06-27 11:16:52,309: None
[DEBUG]2025-06-27 11:16:52,309: None
[DEBUG]2025-06-27 11:16:52,309: None
[DEBUG]2025-06-27 11:16:52,309: None
[DEBUG]2025-06-27 11:16:52,309: None
[DEBUG]2025-06-27 11:16:52,309: None
[DEBUG]2025-06-27 11:16:52,309: None
[DEBUG]2025-06-27 11:16:52,309: None
[DEBUG]2025-06-27 11:16:52,312: None
[DEBUG]2025-06-27 11:16:52,312: None
[DEBUG]2025-06-27 11:16:52,312: None
[DEBUG]2025-06-27 11:16:52,312: None
[DEBUG]2025-06-27 11:16:52,312: None
[DEBUG]2025-06-27 11:16:52,312: None
[DEBUG]2025-06-27 11:16:52,312: None
[DEBUG]2025-06-27 11:16:52,312: None
[DEBUG]2025-06-27 11:16:52,312: None
[DEBUG]2025-06-27 11:16:52,312: None
[DEBUG]2025-06-27 11:16:52,312: None
[DEBUG]2025-06-27 11:16:52,312: None
[DEBUG]2025-06-27 11:16:52,312: None
[DEBUG]2025-06-27 11:16:52,312: None
[DEBUG]2025-06-27 11:16:52,312: None
[DEBUG]2025-06-27 11:16:52,313: None
[DEBUG]2025-06-27 11:16:52,313: None
[DEBUG]2025-06-27 11:16:52,313: None
[DEBUG]2025-06-27 11:16:52,313: None
[DEBUG]2025-06-27 11:16:52,313: None
[DEBUG]2025-06-27 11:16:52,313: None
[DEBUG]2025-06-27 11:16:52,313: None
[DEBUG]2025-06-27 11:16:52,313: None
[DEBUG]2025-06-27 11:16:52,313: None
[DEBUG]2025-06-27 11:16:52,313: None
[DEBUG]2025-06-27 11:16:52,313: None
[DEBUG]2025-06-27 11:16:52,313: None
[DEBUG]2025-06-27 11:16:52,313: None
[DEBUG]2025-06-27 11:16:52,313: None
[DEBUG]2025-06-27 11:16:52,313: None
[DEBUG]2025-06-27 11:16:52,313: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,315: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,317: None
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,319: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,320: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,321: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,323: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,325: None
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,328: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,329: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,330: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,331: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:16:52,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,740: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:18:56,740: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:18:56,741: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:18:56,746: None
[DEBUG]2025-06-27 11:18:56,746: None
[DEBUG]2025-06-27 11:18:56,748: None
[DEBUG]2025-06-27 11:18:56,748: None
[DEBUG]2025-06-27 11:18:56,748: None
[DEBUG]2025-06-27 11:18:56,749: None
[DEBUG]2025-06-27 11:18:56,749: None
[DEBUG]2025-06-27 11:18:56,749: None
[DEBUG]2025-06-27 11:18:56,749: None
[DEBUG]2025-06-27 11:18:56,750: None
[DEBUG]2025-06-27 11:18:56,750: None
[DEBUG]2025-06-27 11:18:56,750: None
[DEBUG]2025-06-27 11:18:56,750: None
[DEBUG]2025-06-27 11:18:56,750: None
[DEBUG]2025-06-27 11:18:56,752: None
[DEBUG]2025-06-27 11:18:56,752: None
[DEBUG]2025-06-27 11:18:56,752: None
[DEBUG]2025-06-27 11:18:56,752: None
[DEBUG]2025-06-27 11:18:56,752: None
[DEBUG]2025-06-27 11:18:56,752: None
[DEBUG]2025-06-27 11:18:56,754: None
[DEBUG]2025-06-27 11:18:56,754: None
[DEBUG]2025-06-27 11:18:56,754: None
[DEBUG]2025-06-27 11:18:56,754: None
[DEBUG]2025-06-27 11:18:56,754: None
[DEBUG]2025-06-27 11:18:56,754: None
[DEBUG]2025-06-27 11:18:56,754: None
[DEBUG]2025-06-27 11:18:56,756: None
[DEBUG]2025-06-27 11:18:56,756: None
[DEBUG]2025-06-27 11:18:56,756: None
[DEBUG]2025-06-27 11:18:56,756: None
[DEBUG]2025-06-27 11:18:56,756: None
[DEBUG]2025-06-27 11:18:56,756: None
[DEBUG]2025-06-27 11:18:56,756: None
[DEBUG]2025-06-27 11:18:56,756: None
[DEBUG]2025-06-27 11:18:56,757: None
[DEBUG]2025-06-27 11:18:56,757: None
[DEBUG]2025-06-27 11:18:56,757: None
[DEBUG]2025-06-27 11:18:56,757: None
[DEBUG]2025-06-27 11:18:56,757: None
[DEBUG]2025-06-27 11:18:56,757: None
[DEBUG]2025-06-27 11:18:56,757: None
[DEBUG]2025-06-27 11:18:56,757: None
[DEBUG]2025-06-27 11:18:56,757: None
[DEBUG]2025-06-27 11:18:56,759: None
[DEBUG]2025-06-27 11:18:56,759: None
[DEBUG]2025-06-27 11:18:56,759: None
[DEBUG]2025-06-27 11:18:56,759: None
[DEBUG]2025-06-27 11:18:56,759: None
[DEBUG]2025-06-27 11:18:56,759: None
[DEBUG]2025-06-27 11:18:56,759: None
[DEBUG]2025-06-27 11:18:56,759: None
[DEBUG]2025-06-27 11:18:56,759: None
[DEBUG]2025-06-27 11:18:56,759: None
[DEBUG]2025-06-27 11:18:56,761: None
[DEBUG]2025-06-27 11:18:56,761: None
[DEBUG]2025-06-27 11:18:56,761: None
[DEBUG]2025-06-27 11:18:56,761: None
[DEBUG]2025-06-27 11:18:56,761: None
[DEBUG]2025-06-27 11:18:56,761: None
[DEBUG]2025-06-27 11:18:56,761: None
[DEBUG]2025-06-27 11:18:56,761: None
[DEBUG]2025-06-27 11:18:56,761: None
[DEBUG]2025-06-27 11:18:56,761: None
[DEBUG]2025-06-27 11:18:56,761: None
[DEBUG]2025-06-27 11:18:56,762: None
[DEBUG]2025-06-27 11:18:56,762: None
[DEBUG]2025-06-27 11:18:56,762: None
[DEBUG]2025-06-27 11:18:56,762: None
[DEBUG]2025-06-27 11:18:56,762: None
[DEBUG]2025-06-27 11:18:56,762: None
[DEBUG]2025-06-27 11:18:56,762: None
[DEBUG]2025-06-27 11:18:56,762: None
[DEBUG]2025-06-27 11:18:56,762: None
[DEBUG]2025-06-27 11:18:56,762: None
[DEBUG]2025-06-27 11:18:56,762: None
[DEBUG]2025-06-27 11:18:56,762: None
[DEBUG]2025-06-27 11:18:56,764: None
[DEBUG]2025-06-27 11:18:56,764: None
[DEBUG]2025-06-27 11:18:56,764: None
[DEBUG]2025-06-27 11:18:56,764: None
[DEBUG]2025-06-27 11:18:56,764: None
[DEBUG]2025-06-27 11:18:56,764: None
[DEBUG]2025-06-27 11:18:56,764: None
[DEBUG]2025-06-27 11:18:56,764: None
[DEBUG]2025-06-27 11:18:56,764: None
[DEBUG]2025-06-27 11:18:56,764: None
[DEBUG]2025-06-27 11:18:56,764: None
[DEBUG]2025-06-27 11:18:56,764: None
[DEBUG]2025-06-27 11:18:56,764: None
[DEBUG]2025-06-27 11:18:56,766: None
[DEBUG]2025-06-27 11:18:56,766: None
[DEBUG]2025-06-27 11:18:56,766: None
[DEBUG]2025-06-27 11:18:56,766: None
[DEBUG]2025-06-27 11:18:56,766: None
[DEBUG]2025-06-27 11:18:56,766: None
[DEBUG]2025-06-27 11:18:56,766: None
[DEBUG]2025-06-27 11:18:56,766: None
[DEBUG]2025-06-27 11:18:56,766: None
[DEBUG]2025-06-27 11:18:56,766: None
[DEBUG]2025-06-27 11:18:56,766: None
[DEBUG]2025-06-27 11:18:56,766: None
[DEBUG]2025-06-27 11:18:56,766: None
[DEBUG]2025-06-27 11:18:56,766: None
[DEBUG]2025-06-27 11:18:56,768: None
[DEBUG]2025-06-27 11:18:56,768: None
[DEBUG]2025-06-27 11:18:56,768: None
[DEBUG]2025-06-27 11:18:56,768: None
[DEBUG]2025-06-27 11:18:56,768: None
[DEBUG]2025-06-27 11:18:56,768: None
[DEBUG]2025-06-27 11:18:56,768: None
[DEBUG]2025-06-27 11:18:56,768: None
[DEBUG]2025-06-27 11:18:56,768: None
[DEBUG]2025-06-27 11:18:56,768: None
[DEBUG]2025-06-27 11:18:56,768: None
[DEBUG]2025-06-27 11:18:56,768: None
[DEBUG]2025-06-27 11:18:56,768: None
[DEBUG]2025-06-27 11:18:56,768: None
[DEBUG]2025-06-27 11:18:56,768: None
[DEBUG]2025-06-27 11:18:56,770: None
[DEBUG]2025-06-27 11:18:56,770: None
[DEBUG]2025-06-27 11:18:56,770: None
[DEBUG]2025-06-27 11:18:56,770: None
[DEBUG]2025-06-27 11:18:56,770: None
[DEBUG]2025-06-27 11:18:56,770: None
[DEBUG]2025-06-27 11:18:56,770: None
[DEBUG]2025-06-27 11:18:56,770: None
[DEBUG]2025-06-27 11:18:56,770: None
[DEBUG]2025-06-27 11:18:56,770: None
[DEBUG]2025-06-27 11:18:56,770: None
[DEBUG]2025-06-27 11:18:56,770: None
[DEBUG]2025-06-27 11:18:56,770: None
[DEBUG]2025-06-27 11:18:56,770: None
[DEBUG]2025-06-27 11:18:56,770: None
[DEBUG]2025-06-27 11:18:56,770: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,771: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,773: None
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,774: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,775: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,776: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,778: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,779: None
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,781: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,782: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,783: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,784: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:18:56,785: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,246: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:27:50,246: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:27:50,247: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:27:50,255: None
[DEBUG]2025-06-27 11:27:50,255: None
[DEBUG]2025-06-27 11:27:50,257: None
[DEBUG]2025-06-27 11:27:50,257: None
[DEBUG]2025-06-27 11:27:50,257: None
[DEBUG]2025-06-27 11:27:50,258: None
[DEBUG]2025-06-27 11:27:50,258: None
[DEBUG]2025-06-27 11:27:50,258: None
[DEBUG]2025-06-27 11:27:50,258: None
[DEBUG]2025-06-27 11:27:50,260: None
[DEBUG]2025-06-27 11:27:50,260: None
[DEBUG]2025-06-27 11:27:50,260: None
[DEBUG]2025-06-27 11:27:50,260: None
[DEBUG]2025-06-27 11:27:50,260: None
[DEBUG]2025-06-27 11:27:50,261: None
[DEBUG]2025-06-27 11:27:50,261: None
[DEBUG]2025-06-27 11:27:50,261: None
[DEBUG]2025-06-27 11:27:50,261: None
[DEBUG]2025-06-27 11:27:50,261: None
[DEBUG]2025-06-27 11:27:50,261: None
[DEBUG]2025-06-27 11:27:50,263: None
[DEBUG]2025-06-27 11:27:50,263: None
[DEBUG]2025-06-27 11:27:50,263: None
[DEBUG]2025-06-27 11:27:50,263: None
[DEBUG]2025-06-27 11:27:50,263: None
[DEBUG]2025-06-27 11:27:50,263: None
[DEBUG]2025-06-27 11:27:50,263: None
[DEBUG]2025-06-27 11:27:50,265: None
[DEBUG]2025-06-27 11:27:50,265: None
[DEBUG]2025-06-27 11:27:50,265: None
[DEBUG]2025-06-27 11:27:50,265: None
[DEBUG]2025-06-27 11:27:50,265: None
[DEBUG]2025-06-27 11:27:50,265: None
[DEBUG]2025-06-27 11:27:50,265: None
[DEBUG]2025-06-27 11:27:50,265: None
[DEBUG]2025-06-27 11:27:50,266: None
[DEBUG]2025-06-27 11:27:50,266: None
[DEBUG]2025-06-27 11:27:50,266: None
[DEBUG]2025-06-27 11:27:50,266: None
[DEBUG]2025-06-27 11:27:50,266: None
[DEBUG]2025-06-27 11:27:50,266: None
[DEBUG]2025-06-27 11:27:50,266: None
[DEBUG]2025-06-27 11:27:50,266: None
[DEBUG]2025-06-27 11:27:50,266: None
[DEBUG]2025-06-27 11:27:50,268: None
[DEBUG]2025-06-27 11:27:50,268: None
[DEBUG]2025-06-27 11:27:50,268: None
[DEBUG]2025-06-27 11:27:50,268: None
[DEBUG]2025-06-27 11:27:50,268: None
[DEBUG]2025-06-27 11:27:50,268: None
[DEBUG]2025-06-27 11:27:50,268: None
[DEBUG]2025-06-27 11:27:50,268: None
[DEBUG]2025-06-27 11:27:50,268: None
[DEBUG]2025-06-27 11:27:50,268: None
[DEBUG]2025-06-27 11:27:50,271: None
[DEBUG]2025-06-27 11:27:50,271: None
[DEBUG]2025-06-27 11:27:50,271: None
[DEBUG]2025-06-27 11:27:50,271: None
[DEBUG]2025-06-27 11:27:50,271: None
[DEBUG]2025-06-27 11:27:50,271: None
[DEBUG]2025-06-27 11:27:50,271: None
[DEBUG]2025-06-27 11:27:50,271: None
[DEBUG]2025-06-27 11:27:50,271: None
[DEBUG]2025-06-27 11:27:50,271: None
[DEBUG]2025-06-27 11:27:50,271: None
[DEBUG]2025-06-27 11:27:50,273: None
[DEBUG]2025-06-27 11:27:50,273: None
[DEBUG]2025-06-27 11:27:50,273: None
[DEBUG]2025-06-27 11:27:50,273: None
[DEBUG]2025-06-27 11:27:50,273: None
[DEBUG]2025-06-27 11:27:50,273: None
[DEBUG]2025-06-27 11:27:50,273: None
[DEBUG]2025-06-27 11:27:50,273: None
[DEBUG]2025-06-27 11:27:50,273: None
[DEBUG]2025-06-27 11:27:50,273: None
[DEBUG]2025-06-27 11:27:50,273: None
[DEBUG]2025-06-27 11:27:50,273: None
[DEBUG]2025-06-27 11:27:50,277: None
[DEBUG]2025-06-27 11:27:50,277: None
[DEBUG]2025-06-27 11:27:50,277: None
[DEBUG]2025-06-27 11:27:50,277: None
[DEBUG]2025-06-27 11:27:50,277: None
[DEBUG]2025-06-27 11:27:50,277: None
[DEBUG]2025-06-27 11:27:50,277: None
[DEBUG]2025-06-27 11:27:50,277: None
[DEBUG]2025-06-27 11:27:50,277: None
[DEBUG]2025-06-27 11:27:50,277: None
[DEBUG]2025-06-27 11:27:50,277: None
[DEBUG]2025-06-27 11:27:50,277: None
[DEBUG]2025-06-27 11:27:50,277: None
[DEBUG]2025-06-27 11:27:50,281: None
[DEBUG]2025-06-27 11:27:50,281: None
[DEBUG]2025-06-27 11:27:50,281: None
[DEBUG]2025-06-27 11:27:50,281: None
[DEBUG]2025-06-27 11:27:50,281: None
[DEBUG]2025-06-27 11:27:50,281: None
[DEBUG]2025-06-27 11:27:50,281: None
[DEBUG]2025-06-27 11:27:50,281: None
[DEBUG]2025-06-27 11:27:50,281: None
[DEBUG]2025-06-27 11:27:50,281: None
[DEBUG]2025-06-27 11:27:50,281: None
[DEBUG]2025-06-27 11:27:50,281: None
[DEBUG]2025-06-27 11:27:50,281: None
[DEBUG]2025-06-27 11:27:50,281: None
[DEBUG]2025-06-27 11:27:50,283: None
[DEBUG]2025-06-27 11:27:50,283: None
[DEBUG]2025-06-27 11:27:50,283: None
[DEBUG]2025-06-27 11:27:50,283: None
[DEBUG]2025-06-27 11:27:50,283: None
[DEBUG]2025-06-27 11:27:50,283: None
[DEBUG]2025-06-27 11:27:50,283: None
[DEBUG]2025-06-27 11:27:50,283: None
[DEBUG]2025-06-27 11:27:50,283: None
[DEBUG]2025-06-27 11:27:50,283: None
[DEBUG]2025-06-27 11:27:50,283: None
[DEBUG]2025-06-27 11:27:50,283: None
[DEBUG]2025-06-27 11:27:50,283: None
[DEBUG]2025-06-27 11:27:50,283: None
[DEBUG]2025-06-27 11:27:50,283: None
[DEBUG]2025-06-27 11:27:50,286: None
[DEBUG]2025-06-27 11:27:50,286: None
[DEBUG]2025-06-27 11:27:50,286: None
[DEBUG]2025-06-27 11:27:50,286: None
[DEBUG]2025-06-27 11:27:50,286: None
[DEBUG]2025-06-27 11:27:50,286: None
[DEBUG]2025-06-27 11:27:50,286: None
[DEBUG]2025-06-27 11:27:50,286: None
[DEBUG]2025-06-27 11:27:50,286: None
[DEBUG]2025-06-27 11:27:50,286: None
[DEBUG]2025-06-27 11:27:50,286: None
[DEBUG]2025-06-27 11:27:50,286: None
[DEBUG]2025-06-27 11:27:50,286: None
[DEBUG]2025-06-27 11:27:50,286: None
[DEBUG]2025-06-27 11:27:50,286: None
[DEBUG]2025-06-27 11:27:50,286: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,290: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,292: None
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,294: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,296: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,297: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,300: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,303: None
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,305: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,307: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,308: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,310: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,311: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:27:50,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,211: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:29:57,212: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:29:57,212: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:29:57,214: None
[DEBUG]2025-06-27 11:29:57,214: None
[DEBUG]2025-06-27 11:29:57,215: None
[DEBUG]2025-06-27 11:29:57,215: None
[DEBUG]2025-06-27 11:29:57,215: None
[DEBUG]2025-06-27 11:29:57,216: None
[DEBUG]2025-06-27 11:29:57,216: None
[DEBUG]2025-06-27 11:29:57,216: None
[DEBUG]2025-06-27 11:29:57,216: None
[DEBUG]2025-06-27 11:29:57,216: None
[DEBUG]2025-06-27 11:29:57,216: None
[DEBUG]2025-06-27 11:29:57,216: None
[DEBUG]2025-06-27 11:29:57,216: None
[DEBUG]2025-06-27 11:29:57,216: None
[DEBUG]2025-06-27 11:29:57,217: None
[DEBUG]2025-06-27 11:29:57,217: None
[DEBUG]2025-06-27 11:29:57,217: None
[DEBUG]2025-06-27 11:29:57,217: None
[DEBUG]2025-06-27 11:29:57,217: None
[DEBUG]2025-06-27 11:29:57,217: None
[DEBUG]2025-06-27 11:29:57,218: None
[DEBUG]2025-06-27 11:29:57,218: None
[DEBUG]2025-06-27 11:29:57,218: None
[DEBUG]2025-06-27 11:29:57,218: None
[DEBUG]2025-06-27 11:29:57,218: None
[DEBUG]2025-06-27 11:29:57,218: None
[DEBUG]2025-06-27 11:29:57,218: None
[DEBUG]2025-06-27 11:29:57,218: None
[DEBUG]2025-06-27 11:29:57,218: None
[DEBUG]2025-06-27 11:29:57,218: None
[DEBUG]2025-06-27 11:29:57,218: None
[DEBUG]2025-06-27 11:29:57,218: None
[DEBUG]2025-06-27 11:29:57,218: None
[DEBUG]2025-06-27 11:29:57,218: None
[DEBUG]2025-06-27 11:29:57,218: None
[DEBUG]2025-06-27 11:29:57,219: None
[DEBUG]2025-06-27 11:29:57,219: None
[DEBUG]2025-06-27 11:29:57,219: None
[DEBUG]2025-06-27 11:29:57,219: None
[DEBUG]2025-06-27 11:29:57,219: None
[DEBUG]2025-06-27 11:29:57,219: None
[DEBUG]2025-06-27 11:29:57,219: None
[DEBUG]2025-06-27 11:29:57,219: None
[DEBUG]2025-06-27 11:29:57,219: None
[DEBUG]2025-06-27 11:29:57,220: None
[DEBUG]2025-06-27 11:29:57,220: None
[DEBUG]2025-06-27 11:29:57,220: None
[DEBUG]2025-06-27 11:29:57,220: None
[DEBUG]2025-06-27 11:29:57,220: None
[DEBUG]2025-06-27 11:29:57,220: None
[DEBUG]2025-06-27 11:29:57,220: None
[DEBUG]2025-06-27 11:29:57,220: None
[DEBUG]2025-06-27 11:29:57,220: None
[DEBUG]2025-06-27 11:29:57,220: None
[DEBUG]2025-06-27 11:29:57,222: None
[DEBUG]2025-06-27 11:29:57,222: None
[DEBUG]2025-06-27 11:29:57,222: None
[DEBUG]2025-06-27 11:29:57,222: None
[DEBUG]2025-06-27 11:29:57,222: None
[DEBUG]2025-06-27 11:29:57,222: None
[DEBUG]2025-06-27 11:29:57,222: None
[DEBUG]2025-06-27 11:29:57,222: None
[DEBUG]2025-06-27 11:29:57,222: None
[DEBUG]2025-06-27 11:29:57,222: None
[DEBUG]2025-06-27 11:29:57,222: None
[DEBUG]2025-06-27 11:29:57,223: None
[DEBUG]2025-06-27 11:29:57,223: None
[DEBUG]2025-06-27 11:29:57,223: None
[DEBUG]2025-06-27 11:29:57,223: None
[DEBUG]2025-06-27 11:29:57,223: None
[DEBUG]2025-06-27 11:29:57,223: None
[DEBUG]2025-06-27 11:29:57,223: None
[DEBUG]2025-06-27 11:29:57,223: None
[DEBUG]2025-06-27 11:29:57,223: None
[DEBUG]2025-06-27 11:29:57,223: None
[DEBUG]2025-06-27 11:29:57,223: None
[DEBUG]2025-06-27 11:29:57,223: None
[DEBUG]2025-06-27 11:29:57,224: None
[DEBUG]2025-06-27 11:29:57,224: None
[DEBUG]2025-06-27 11:29:57,224: None
[DEBUG]2025-06-27 11:29:57,224: None
[DEBUG]2025-06-27 11:29:57,224: None
[DEBUG]2025-06-27 11:29:57,224: None
[DEBUG]2025-06-27 11:29:57,224: None
[DEBUG]2025-06-27 11:29:57,224: None
[DEBUG]2025-06-27 11:29:57,224: None
[DEBUG]2025-06-27 11:29:57,224: None
[DEBUG]2025-06-27 11:29:57,224: None
[DEBUG]2025-06-27 11:29:57,224: None
[DEBUG]2025-06-27 11:29:57,224: None
[DEBUG]2025-06-27 11:29:57,225: None
[DEBUG]2025-06-27 11:29:57,225: None
[DEBUG]2025-06-27 11:29:57,225: None
[DEBUG]2025-06-27 11:29:57,225: None
[DEBUG]2025-06-27 11:29:57,225: None
[DEBUG]2025-06-27 11:29:57,225: None
[DEBUG]2025-06-27 11:29:57,225: None
[DEBUG]2025-06-27 11:29:57,225: None
[DEBUG]2025-06-27 11:29:57,225: None
[DEBUG]2025-06-27 11:29:57,225: None
[DEBUG]2025-06-27 11:29:57,225: None
[DEBUG]2025-06-27 11:29:57,225: None
[DEBUG]2025-06-27 11:29:57,225: None
[DEBUG]2025-06-27 11:29:57,225: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,226: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,227: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,228: None
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,230: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,231: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,232: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,233: None
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,234: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,235: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,238: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:29:57,239: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,331: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:32:57,332: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:32:57,333: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:32:57,340: None
[DEBUG]2025-06-27 11:32:57,340: None
[DEBUG]2025-06-27 11:32:57,343: None
[DEBUG]2025-06-27 11:32:57,343: None
[DEBUG]2025-06-27 11:32:57,343: None
[DEBUG]2025-06-27 11:32:57,345: None
[DEBUG]2025-06-27 11:32:57,345: None
[DEBUG]2025-06-27 11:32:57,345: None
[DEBUG]2025-06-27 11:32:57,345: None
[DEBUG]2025-06-27 11:32:57,347: None
[DEBUG]2025-06-27 11:32:57,347: None
[DEBUG]2025-06-27 11:32:57,347: None
[DEBUG]2025-06-27 11:32:57,347: None
[DEBUG]2025-06-27 11:32:57,347: None
[DEBUG]2025-06-27 11:32:57,349: None
[DEBUG]2025-06-27 11:32:57,349: None
[DEBUG]2025-06-27 11:32:57,349: None
[DEBUG]2025-06-27 11:32:57,349: None
[DEBUG]2025-06-27 11:32:57,349: None
[DEBUG]2025-06-27 11:32:57,349: None
[DEBUG]2025-06-27 11:32:57,351: None
[DEBUG]2025-06-27 11:32:57,351: None
[DEBUG]2025-06-27 11:32:57,351: None
[DEBUG]2025-06-27 11:32:57,351: None
[DEBUG]2025-06-27 11:32:57,351: None
[DEBUG]2025-06-27 11:32:57,351: None
[DEBUG]2025-06-27 11:32:57,351: None
[DEBUG]2025-06-27 11:32:57,352: None
[DEBUG]2025-06-27 11:32:57,352: None
[DEBUG]2025-06-27 11:32:57,352: None
[DEBUG]2025-06-27 11:32:57,352: None
[DEBUG]2025-06-27 11:32:57,352: None
[DEBUG]2025-06-27 11:32:57,352: None
[DEBUG]2025-06-27 11:32:57,352: None
[DEBUG]2025-06-27 11:32:57,352: None
[DEBUG]2025-06-27 11:32:57,354: None
[DEBUG]2025-06-27 11:32:57,354: None
[DEBUG]2025-06-27 11:32:57,354: None
[DEBUG]2025-06-27 11:32:57,354: None
[DEBUG]2025-06-27 11:32:57,354: None
[DEBUG]2025-06-27 11:32:57,354: None
[DEBUG]2025-06-27 11:32:57,354: None
[DEBUG]2025-06-27 11:32:57,354: None
[DEBUG]2025-06-27 11:32:57,354: None
[DEBUG]2025-06-27 11:32:57,356: None
[DEBUG]2025-06-27 11:32:57,356: None
[DEBUG]2025-06-27 11:32:57,356: None
[DEBUG]2025-06-27 11:32:57,356: None
[DEBUG]2025-06-27 11:32:57,356: None
[DEBUG]2025-06-27 11:32:57,356: None
[DEBUG]2025-06-27 11:32:57,356: None
[DEBUG]2025-06-27 11:32:57,356: None
[DEBUG]2025-06-27 11:32:57,356: None
[DEBUG]2025-06-27 11:32:57,356: None
[DEBUG]2025-06-27 11:32:57,358: None
[DEBUG]2025-06-27 11:32:57,358: None
[DEBUG]2025-06-27 11:32:57,358: None
[DEBUG]2025-06-27 11:32:57,358: None
[DEBUG]2025-06-27 11:32:57,358: None
[DEBUG]2025-06-27 11:32:57,358: None
[DEBUG]2025-06-27 11:32:57,358: None
[DEBUG]2025-06-27 11:32:57,358: None
[DEBUG]2025-06-27 11:32:57,358: None
[DEBUG]2025-06-27 11:32:57,358: None
[DEBUG]2025-06-27 11:32:57,358: None
[DEBUG]2025-06-27 11:32:57,359: None
[DEBUG]2025-06-27 11:32:57,359: None
[DEBUG]2025-06-27 11:32:57,359: None
[DEBUG]2025-06-27 11:32:57,359: None
[DEBUG]2025-06-27 11:32:57,359: None
[DEBUG]2025-06-27 11:32:57,359: None
[DEBUG]2025-06-27 11:32:57,359: None
[DEBUG]2025-06-27 11:32:57,359: None
[DEBUG]2025-06-27 11:32:57,359: None
[DEBUG]2025-06-27 11:32:57,359: None
[DEBUG]2025-06-27 11:32:57,359: None
[DEBUG]2025-06-27 11:32:57,359: None
[DEBUG]2025-06-27 11:32:57,362: None
[DEBUG]2025-06-27 11:32:57,362: None
[DEBUG]2025-06-27 11:32:57,362: None
[DEBUG]2025-06-27 11:32:57,362: None
[DEBUG]2025-06-27 11:32:57,362: None
[DEBUG]2025-06-27 11:32:57,362: None
[DEBUG]2025-06-27 11:32:57,362: None
[DEBUG]2025-06-27 11:32:57,362: None
[DEBUG]2025-06-27 11:32:57,362: None
[DEBUG]2025-06-27 11:32:57,362: None
[DEBUG]2025-06-27 11:32:57,362: None
[DEBUG]2025-06-27 11:32:57,362: None
[DEBUG]2025-06-27 11:32:57,362: None
[DEBUG]2025-06-27 11:32:57,364: None
[DEBUG]2025-06-27 11:32:57,364: None
[DEBUG]2025-06-27 11:32:57,364: None
[DEBUG]2025-06-27 11:32:57,364: None
[DEBUG]2025-06-27 11:32:57,364: None
[DEBUG]2025-06-27 11:32:57,364: None
[DEBUG]2025-06-27 11:32:57,364: None
[DEBUG]2025-06-27 11:32:57,364: None
[DEBUG]2025-06-27 11:32:57,364: None
[DEBUG]2025-06-27 11:32:57,364: None
[DEBUG]2025-06-27 11:32:57,364: None
[DEBUG]2025-06-27 11:32:57,364: None
[DEBUG]2025-06-27 11:32:57,364: None
[DEBUG]2025-06-27 11:32:57,364: None
[DEBUG]2025-06-27 11:32:57,366: None
[DEBUG]2025-06-27 11:32:57,366: None
[DEBUG]2025-06-27 11:32:57,366: None
[DEBUG]2025-06-27 11:32:57,366: None
[DEBUG]2025-06-27 11:32:57,366: None
[DEBUG]2025-06-27 11:32:57,366: None
[DEBUG]2025-06-27 11:32:57,366: None
[DEBUG]2025-06-27 11:32:57,366: None
[DEBUG]2025-06-27 11:32:57,366: None
[DEBUG]2025-06-27 11:32:57,366: None
[DEBUG]2025-06-27 11:32:57,366: None
[DEBUG]2025-06-27 11:32:57,366: None
[DEBUG]2025-06-27 11:32:57,366: None
[DEBUG]2025-06-27 11:32:57,366: None
[DEBUG]2025-06-27 11:32:57,366: None
[DEBUG]2025-06-27 11:32:57,368: None
[DEBUG]2025-06-27 11:32:57,368: None
[DEBUG]2025-06-27 11:32:57,368: None
[DEBUG]2025-06-27 11:32:57,368: None
[DEBUG]2025-06-27 11:32:57,368: None
[DEBUG]2025-06-27 11:32:57,368: None
[DEBUG]2025-06-27 11:32:57,368: None
[DEBUG]2025-06-27 11:32:57,368: None
[DEBUG]2025-06-27 11:32:57,368: None
[DEBUG]2025-06-27 11:32:57,368: None
[DEBUG]2025-06-27 11:32:57,368: None
[DEBUG]2025-06-27 11:32:57,368: None
[DEBUG]2025-06-27 11:32:57,368: None
[DEBUG]2025-06-27 11:32:57,368: None
[DEBUG]2025-06-27 11:32:57,368: None
[DEBUG]2025-06-27 11:32:57,368: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,370: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,372: None
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,374: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,375: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,376: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,379: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,381: None
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,385: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,387: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,388: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:32:57,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,451: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:34:45,451: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:34:45,452: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:34:45,457: None
[DEBUG]2025-06-27 11:34:45,457: None
[DEBUG]2025-06-27 11:34:45,458: None
[DEBUG]2025-06-27 11:34:45,458: None
[DEBUG]2025-06-27 11:34:45,458: None
[DEBUG]2025-06-27 11:34:45,460: None
[DEBUG]2025-06-27 11:34:45,460: None
[DEBUG]2025-06-27 11:34:45,460: None
[DEBUG]2025-06-27 11:34:45,460: None
[DEBUG]2025-06-27 11:34:45,461: None
[DEBUG]2025-06-27 11:34:45,461: None
[DEBUG]2025-06-27 11:34:45,461: None
[DEBUG]2025-06-27 11:34:45,461: None
[DEBUG]2025-06-27 11:34:45,461: None
[DEBUG]2025-06-27 11:34:45,463: None
[DEBUG]2025-06-27 11:34:45,463: None
[DEBUG]2025-06-27 11:34:45,463: None
[DEBUG]2025-06-27 11:34:45,463: None
[DEBUG]2025-06-27 11:34:45,463: None
[DEBUG]2025-06-27 11:34:45,463: None
[DEBUG]2025-06-27 11:34:45,464: None
[DEBUG]2025-06-27 11:34:45,464: None
[DEBUG]2025-06-27 11:34:45,464: None
[DEBUG]2025-06-27 11:34:45,464: None
[DEBUG]2025-06-27 11:34:45,464: None
[DEBUG]2025-06-27 11:34:45,464: None
[DEBUG]2025-06-27 11:34:45,464: None
[DEBUG]2025-06-27 11:34:45,465: None
[DEBUG]2025-06-27 11:34:45,465: None
[DEBUG]2025-06-27 11:34:45,465: None
[DEBUG]2025-06-27 11:34:45,465: None
[DEBUG]2025-06-27 11:34:45,465: None
[DEBUG]2025-06-27 11:34:45,465: None
[DEBUG]2025-06-27 11:34:45,465: None
[DEBUG]2025-06-27 11:34:45,465: None
[DEBUG]2025-06-27 11:34:45,466: None
[DEBUG]2025-06-27 11:34:45,466: None
[DEBUG]2025-06-27 11:34:45,466: None
[DEBUG]2025-06-27 11:34:45,466: None
[DEBUG]2025-06-27 11:34:45,466: None
[DEBUG]2025-06-27 11:34:45,466: None
[DEBUG]2025-06-27 11:34:45,466: None
[DEBUG]2025-06-27 11:34:45,466: None
[DEBUG]2025-06-27 11:34:45,466: None
[DEBUG]2025-06-27 11:34:45,467: None
[DEBUG]2025-06-27 11:34:45,467: None
[DEBUG]2025-06-27 11:34:45,467: None
[DEBUG]2025-06-27 11:34:45,467: None
[DEBUG]2025-06-27 11:34:45,467: None
[DEBUG]2025-06-27 11:34:45,467: None
[DEBUG]2025-06-27 11:34:45,467: None
[DEBUG]2025-06-27 11:34:45,467: None
[DEBUG]2025-06-27 11:34:45,467: None
[DEBUG]2025-06-27 11:34:45,467: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,469: None
[DEBUG]2025-06-27 11:34:45,471: None
[DEBUG]2025-06-27 11:34:45,471: None
[DEBUG]2025-06-27 11:34:45,471: None
[DEBUG]2025-06-27 11:34:45,471: None
[DEBUG]2025-06-27 11:34:45,471: None
[DEBUG]2025-06-27 11:34:45,471: None
[DEBUG]2025-06-27 11:34:45,471: None
[DEBUG]2025-06-27 11:34:45,471: None
[DEBUG]2025-06-27 11:34:45,471: None
[DEBUG]2025-06-27 11:34:45,471: None
[DEBUG]2025-06-27 11:34:45,471: None
[DEBUG]2025-06-27 11:34:45,471: None
[DEBUG]2025-06-27 11:34:45,471: None
[DEBUG]2025-06-27 11:34:45,472: None
[DEBUG]2025-06-27 11:34:45,472: None
[DEBUG]2025-06-27 11:34:45,472: None
[DEBUG]2025-06-27 11:34:45,472: None
[DEBUG]2025-06-27 11:34:45,472: None
[DEBUG]2025-06-27 11:34:45,472: None
[DEBUG]2025-06-27 11:34:45,472: None
[DEBUG]2025-06-27 11:34:45,472: None
[DEBUG]2025-06-27 11:34:45,472: None
[DEBUG]2025-06-27 11:34:45,472: None
[DEBUG]2025-06-27 11:34:45,472: None
[DEBUG]2025-06-27 11:34:45,472: None
[DEBUG]2025-06-27 11:34:45,472: None
[DEBUG]2025-06-27 11:34:45,472: None
[DEBUG]2025-06-27 11:34:45,473: None
[DEBUG]2025-06-27 11:34:45,473: None
[DEBUG]2025-06-27 11:34:45,473: None
[DEBUG]2025-06-27 11:34:45,473: None
[DEBUG]2025-06-27 11:34:45,473: None
[DEBUG]2025-06-27 11:34:45,473: None
[DEBUG]2025-06-27 11:34:45,473: None
[DEBUG]2025-06-27 11:34:45,473: None
[DEBUG]2025-06-27 11:34:45,473: None
[DEBUG]2025-06-27 11:34:45,473: None
[DEBUG]2025-06-27 11:34:45,473: None
[DEBUG]2025-06-27 11:34:45,473: None
[DEBUG]2025-06-27 11:34:45,473: None
[DEBUG]2025-06-27 11:34:45,473: None
[DEBUG]2025-06-27 11:34:45,473: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,474: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,475: None
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,477: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,478: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,479: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,480: None
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,482: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,483: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,484: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,486: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:34:45,488: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,640: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:40:43,640: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:40:43,641: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:40:43,646: None
[DEBUG]2025-06-27 11:40:43,646: None
[DEBUG]2025-06-27 11:40:43,647: None
[DEBUG]2025-06-27 11:40:43,647: None
[DEBUG]2025-06-27 11:40:43,647: None
[DEBUG]2025-06-27 11:40:43,648: None
[DEBUG]2025-06-27 11:40:43,648: None
[DEBUG]2025-06-27 11:40:43,648: None
[DEBUG]2025-06-27 11:40:43,648: None
[DEBUG]2025-06-27 11:40:43,649: None
[DEBUG]2025-06-27 11:40:43,649: None
[DEBUG]2025-06-27 11:40:43,649: None
[DEBUG]2025-06-27 11:40:43,649: None
[DEBUG]2025-06-27 11:40:43,649: None
[DEBUG]2025-06-27 11:40:43,650: None
[DEBUG]2025-06-27 11:40:43,650: None
[DEBUG]2025-06-27 11:40:43,650: None
[DEBUG]2025-06-27 11:40:43,650: None
[DEBUG]2025-06-27 11:40:43,650: None
[DEBUG]2025-06-27 11:40:43,650: None
[DEBUG]2025-06-27 11:40:43,652: None
[DEBUG]2025-06-27 11:40:43,652: None
[DEBUG]2025-06-27 11:40:43,652: None
[DEBUG]2025-06-27 11:40:43,652: None
[DEBUG]2025-06-27 11:40:43,652: None
[DEBUG]2025-06-27 11:40:43,652: None
[DEBUG]2025-06-27 11:40:43,652: None
[DEBUG]2025-06-27 11:40:43,653: None
[DEBUG]2025-06-27 11:40:43,653: None
[DEBUG]2025-06-27 11:40:43,653: None
[DEBUG]2025-06-27 11:40:43,653: None
[DEBUG]2025-06-27 11:40:43,653: None
[DEBUG]2025-06-27 11:40:43,653: None
[DEBUG]2025-06-27 11:40:43,653: None
[DEBUG]2025-06-27 11:40:43,653: None
[DEBUG]2025-06-27 11:40:43,654: None
[DEBUG]2025-06-27 11:40:43,654: None
[DEBUG]2025-06-27 11:40:43,654: None
[DEBUG]2025-06-27 11:40:43,654: None
[DEBUG]2025-06-27 11:40:43,654: None
[DEBUG]2025-06-27 11:40:43,654: None
[DEBUG]2025-06-27 11:40:43,654: None
[DEBUG]2025-06-27 11:40:43,654: None
[DEBUG]2025-06-27 11:40:43,654: None
[DEBUG]2025-06-27 11:40:43,655: None
[DEBUG]2025-06-27 11:40:43,655: None
[DEBUG]2025-06-27 11:40:43,655: None
[DEBUG]2025-06-27 11:40:43,655: None
[DEBUG]2025-06-27 11:40:43,655: None
[DEBUG]2025-06-27 11:40:43,655: None
[DEBUG]2025-06-27 11:40:43,655: None
[DEBUG]2025-06-27 11:40:43,655: None
[DEBUG]2025-06-27 11:40:43,655: None
[DEBUG]2025-06-27 11:40:43,655: None
[DEBUG]2025-06-27 11:40:43,656: None
[DEBUG]2025-06-27 11:40:43,656: None
[DEBUG]2025-06-27 11:40:43,656: None
[DEBUG]2025-06-27 11:40:43,656: None
[DEBUG]2025-06-27 11:40:43,656: None
[DEBUG]2025-06-27 11:40:43,656: None
[DEBUG]2025-06-27 11:40:43,656: None
[DEBUG]2025-06-27 11:40:43,656: None
[DEBUG]2025-06-27 11:40:43,656: None
[DEBUG]2025-06-27 11:40:43,656: None
[DEBUG]2025-06-27 11:40:43,656: None
[DEBUG]2025-06-27 11:40:43,657: None
[DEBUG]2025-06-27 11:40:43,657: None
[DEBUG]2025-06-27 11:40:43,657: None
[DEBUG]2025-06-27 11:40:43,657: None
[DEBUG]2025-06-27 11:40:43,657: None
[DEBUG]2025-06-27 11:40:43,657: None
[DEBUG]2025-06-27 11:40:43,657: None
[DEBUG]2025-06-27 11:40:43,657: None
[DEBUG]2025-06-27 11:40:43,657: None
[DEBUG]2025-06-27 11:40:43,657: None
[DEBUG]2025-06-27 11:40:43,657: None
[DEBUG]2025-06-27 11:40:43,657: None
[DEBUG]2025-06-27 11:40:43,658: None
[DEBUG]2025-06-27 11:40:43,658: None
[DEBUG]2025-06-27 11:40:43,658: None
[DEBUG]2025-06-27 11:40:43,658: None
[DEBUG]2025-06-27 11:40:43,658: None
[DEBUG]2025-06-27 11:40:43,658: None
[DEBUG]2025-06-27 11:40:43,658: None
[DEBUG]2025-06-27 11:40:43,658: None
[DEBUG]2025-06-27 11:40:43,658: None
[DEBUG]2025-06-27 11:40:43,658: None
[DEBUG]2025-06-27 11:40:43,658: None
[DEBUG]2025-06-27 11:40:43,658: None
[DEBUG]2025-06-27 11:40:43,658: None
[DEBUG]2025-06-27 11:40:43,659: None
[DEBUG]2025-06-27 11:40:43,659: None
[DEBUG]2025-06-27 11:40:43,659: None
[DEBUG]2025-06-27 11:40:43,659: None
[DEBUG]2025-06-27 11:40:43,659: None
[DEBUG]2025-06-27 11:40:43,659: None
[DEBUG]2025-06-27 11:40:43,659: None
[DEBUG]2025-06-27 11:40:43,659: None
[DEBUG]2025-06-27 11:40:43,659: None
[DEBUG]2025-06-27 11:40:43,659: None
[DEBUG]2025-06-27 11:40:43,659: None
[DEBUG]2025-06-27 11:40:43,659: None
[DEBUG]2025-06-27 11:40:43,659: None
[DEBUG]2025-06-27 11:40:43,659: None
[DEBUG]2025-06-27 11:40:43,660: None
[DEBUG]2025-06-27 11:40:43,660: None
[DEBUG]2025-06-27 11:40:43,660: None
[DEBUG]2025-06-27 11:40:43,660: None
[DEBUG]2025-06-27 11:40:43,660: None
[DEBUG]2025-06-27 11:40:43,660: None
[DEBUG]2025-06-27 11:40:43,660: None
[DEBUG]2025-06-27 11:40:43,660: None
[DEBUG]2025-06-27 11:40:43,660: None
[DEBUG]2025-06-27 11:40:43,660: None
[DEBUG]2025-06-27 11:40:43,660: None
[DEBUG]2025-06-27 11:40:43,660: None
[DEBUG]2025-06-27 11:40:43,660: None
[DEBUG]2025-06-27 11:40:43,660: None
[DEBUG]2025-06-27 11:40:43,660: None
[DEBUG]2025-06-27 11:40:43,662: None
[DEBUG]2025-06-27 11:40:43,662: None
[DEBUG]2025-06-27 11:40:43,662: None
[DEBUG]2025-06-27 11:40:43,662: None
[DEBUG]2025-06-27 11:40:43,662: None
[DEBUG]2025-06-27 11:40:43,662: None
[DEBUG]2025-06-27 11:40:43,662: None
[DEBUG]2025-06-27 11:40:43,662: None
[DEBUG]2025-06-27 11:40:43,662: None
[DEBUG]2025-06-27 11:40:43,662: None
[DEBUG]2025-06-27 11:40:43,662: None
[DEBUG]2025-06-27 11:40:43,662: None
[DEBUG]2025-06-27 11:40:43,662: None
[DEBUG]2025-06-27 11:40:43,662: None
[DEBUG]2025-06-27 11:40:43,662: None
[DEBUG]2025-06-27 11:40:43,662: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,663: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,664: None
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,665: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,666: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,667: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,668: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,669: None
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,670: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,671: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,717: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,718: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:40:43,720: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,685: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:48:57,685: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:48:57,685: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:48:57,690: None
[DEBUG]2025-06-27 11:48:57,690: None
[DEBUG]2025-06-27 11:48:57,692: None
[DEBUG]2025-06-27 11:48:57,692: None
[DEBUG]2025-06-27 11:48:57,692: None
[DEBUG]2025-06-27 11:48:57,693: None
[DEBUG]2025-06-27 11:48:57,693: None
[DEBUG]2025-06-27 11:48:57,693: None
[DEBUG]2025-06-27 11:48:57,693: None
[DEBUG]2025-06-27 11:48:57,694: None
[DEBUG]2025-06-27 11:48:57,694: None
[DEBUG]2025-06-27 11:48:57,694: None
[DEBUG]2025-06-27 11:48:57,694: None
[DEBUG]2025-06-27 11:48:57,694: None
[DEBUG]2025-06-27 11:48:57,696: None
[DEBUG]2025-06-27 11:48:57,696: None
[DEBUG]2025-06-27 11:48:57,696: None
[DEBUG]2025-06-27 11:48:57,696: None
[DEBUG]2025-06-27 11:48:57,696: None
[DEBUG]2025-06-27 11:48:57,696: None
[DEBUG]2025-06-27 11:48:57,697: None
[DEBUG]2025-06-27 11:48:57,697: None
[DEBUG]2025-06-27 11:48:57,697: None
[DEBUG]2025-06-27 11:48:57,697: None
[DEBUG]2025-06-27 11:48:57,697: None
[DEBUG]2025-06-27 11:48:57,697: None
[DEBUG]2025-06-27 11:48:57,697: None
[DEBUG]2025-06-27 11:48:57,698: None
[DEBUG]2025-06-27 11:48:57,698: None
[DEBUG]2025-06-27 11:48:57,698: None
[DEBUG]2025-06-27 11:48:57,698: None
[DEBUG]2025-06-27 11:48:57,698: None
[DEBUG]2025-06-27 11:48:57,698: None
[DEBUG]2025-06-27 11:48:57,698: None
[DEBUG]2025-06-27 11:48:57,698: None
[DEBUG]2025-06-27 11:48:57,700: None
[DEBUG]2025-06-27 11:48:57,700: None
[DEBUG]2025-06-27 11:48:57,700: None
[DEBUG]2025-06-27 11:48:57,700: None
[DEBUG]2025-06-27 11:48:57,700: None
[DEBUG]2025-06-27 11:48:57,700: None
[DEBUG]2025-06-27 11:48:57,700: None
[DEBUG]2025-06-27 11:48:57,700: None
[DEBUG]2025-06-27 11:48:57,700: None
[DEBUG]2025-06-27 11:48:57,702: None
[DEBUG]2025-06-27 11:48:57,702: None
[DEBUG]2025-06-27 11:48:57,702: None
[DEBUG]2025-06-27 11:48:57,702: None
[DEBUG]2025-06-27 11:48:57,702: None
[DEBUG]2025-06-27 11:48:57,702: None
[DEBUG]2025-06-27 11:48:57,702: None
[DEBUG]2025-06-27 11:48:57,702: None
[DEBUG]2025-06-27 11:48:57,702: None
[DEBUG]2025-06-27 11:48:57,702: None
[DEBUG]2025-06-27 11:48:57,705: None
[DEBUG]2025-06-27 11:48:57,705: None
[DEBUG]2025-06-27 11:48:57,705: None
[DEBUG]2025-06-27 11:48:57,705: None
[DEBUG]2025-06-27 11:48:57,705: None
[DEBUG]2025-06-27 11:48:57,705: None
[DEBUG]2025-06-27 11:48:57,705: None
[DEBUG]2025-06-27 11:48:57,705: None
[DEBUG]2025-06-27 11:48:57,705: None
[DEBUG]2025-06-27 11:48:57,705: None
[DEBUG]2025-06-27 11:48:57,705: None
[DEBUG]2025-06-27 11:48:57,706: None
[DEBUG]2025-06-27 11:48:57,706: None
[DEBUG]2025-06-27 11:48:57,706: None
[DEBUG]2025-06-27 11:48:57,706: None
[DEBUG]2025-06-27 11:48:57,706: None
[DEBUG]2025-06-27 11:48:57,706: None
[DEBUG]2025-06-27 11:48:57,706: None
[DEBUG]2025-06-27 11:48:57,706: None
[DEBUG]2025-06-27 11:48:57,706: None
[DEBUG]2025-06-27 11:48:57,706: None
[DEBUG]2025-06-27 11:48:57,706: None
[DEBUG]2025-06-27 11:48:57,706: None
[DEBUG]2025-06-27 11:48:57,709: None
[DEBUG]2025-06-27 11:48:57,709: None
[DEBUG]2025-06-27 11:48:57,709: None
[DEBUG]2025-06-27 11:48:57,709: None
[DEBUG]2025-06-27 11:48:57,709: None
[DEBUG]2025-06-27 11:48:57,709: None
[DEBUG]2025-06-27 11:48:57,709: None
[DEBUG]2025-06-27 11:48:57,709: None
[DEBUG]2025-06-27 11:48:57,709: None
[DEBUG]2025-06-27 11:48:57,709: None
[DEBUG]2025-06-27 11:48:57,709: None
[DEBUG]2025-06-27 11:48:57,709: None
[DEBUG]2025-06-27 11:48:57,709: None
[DEBUG]2025-06-27 11:48:57,711: None
[DEBUG]2025-06-27 11:48:57,711: None
[DEBUG]2025-06-27 11:48:57,711: None
[DEBUG]2025-06-27 11:48:57,711: None
[DEBUG]2025-06-27 11:48:57,711: None
[DEBUG]2025-06-27 11:48:57,711: None
[DEBUG]2025-06-27 11:48:57,711: None
[DEBUG]2025-06-27 11:48:57,711: None
[DEBUG]2025-06-27 11:48:57,711: None
[DEBUG]2025-06-27 11:48:57,711: None
[DEBUG]2025-06-27 11:48:57,711: None
[DEBUG]2025-06-27 11:48:57,711: None
[DEBUG]2025-06-27 11:48:57,711: None
[DEBUG]2025-06-27 11:48:57,711: None
[DEBUG]2025-06-27 11:48:57,712: None
[DEBUG]2025-06-27 11:48:57,712: None
[DEBUG]2025-06-27 11:48:57,712: None
[DEBUG]2025-06-27 11:48:57,712: None
[DEBUG]2025-06-27 11:48:57,712: None
[DEBUG]2025-06-27 11:48:57,712: None
[DEBUG]2025-06-27 11:48:57,712: None
[DEBUG]2025-06-27 11:48:57,712: None
[DEBUG]2025-06-27 11:48:57,712: None
[DEBUG]2025-06-27 11:48:57,712: None
[DEBUG]2025-06-27 11:48:57,712: None
[DEBUG]2025-06-27 11:48:57,712: None
[DEBUG]2025-06-27 11:48:57,712: None
[DEBUG]2025-06-27 11:48:57,712: None
[DEBUG]2025-06-27 11:48:57,712: None
[DEBUG]2025-06-27 11:48:57,714: None
[DEBUG]2025-06-27 11:48:57,714: None
[DEBUG]2025-06-27 11:48:57,714: None
[DEBUG]2025-06-27 11:48:57,714: None
[DEBUG]2025-06-27 11:48:57,714: None
[DEBUG]2025-06-27 11:48:57,714: None
[DEBUG]2025-06-27 11:48:57,714: None
[DEBUG]2025-06-27 11:48:57,714: None
[DEBUG]2025-06-27 11:48:57,714: None
[DEBUG]2025-06-27 11:48:57,714: None
[DEBUG]2025-06-27 11:48:57,714: None
[DEBUG]2025-06-27 11:48:57,714: None
[DEBUG]2025-06-27 11:48:57,714: None
[DEBUG]2025-06-27 11:48:57,714: None
[DEBUG]2025-06-27 11:48:57,714: None
[DEBUG]2025-06-27 11:48:57,714: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,715: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,717: None
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,719: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,720: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,721: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,724: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,726: None
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,728: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,729: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,730: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,733: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,735: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:48:57,736: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,211: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:49:42,231: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:49:42,231: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:49:42,235: None
[DEBUG]2025-06-27 11:49:42,235: None
[DEBUG]2025-06-27 11:49:42,236: None
[DEBUG]2025-06-27 11:49:42,236: None
[DEBUG]2025-06-27 11:49:42,236: None
[DEBUG]2025-06-27 11:49:42,237: None
[DEBUG]2025-06-27 11:49:42,237: None
[DEBUG]2025-06-27 11:49:42,237: None
[DEBUG]2025-06-27 11:49:42,237: None
[DEBUG]2025-06-27 11:49:42,238: None
[DEBUG]2025-06-27 11:49:42,238: None
[DEBUG]2025-06-27 11:49:42,238: None
[DEBUG]2025-06-27 11:49:42,238: None
[DEBUG]2025-06-27 11:49:42,238: None
[DEBUG]2025-06-27 11:49:42,239: None
[DEBUG]2025-06-27 11:49:42,239: None
[DEBUG]2025-06-27 11:49:42,239: None
[DEBUG]2025-06-27 11:49:42,239: None
[DEBUG]2025-06-27 11:49:42,239: None
[DEBUG]2025-06-27 11:49:42,239: None
[DEBUG]2025-06-27 11:49:42,240: None
[DEBUG]2025-06-27 11:49:42,240: None
[DEBUG]2025-06-27 11:49:42,240: None
[DEBUG]2025-06-27 11:49:42,240: None
[DEBUG]2025-06-27 11:49:42,240: None
[DEBUG]2025-06-27 11:49:42,240: None
[DEBUG]2025-06-27 11:49:42,240: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,241: None
[DEBUG]2025-06-27 11:49:42,242: None
[DEBUG]2025-06-27 11:49:42,242: None
[DEBUG]2025-06-27 11:49:42,242: None
[DEBUG]2025-06-27 11:49:42,242: None
[DEBUG]2025-06-27 11:49:42,242: None
[DEBUG]2025-06-27 11:49:42,242: None
[DEBUG]2025-06-27 11:49:42,242: None
[DEBUG]2025-06-27 11:49:42,242: None
[DEBUG]2025-06-27 11:49:42,242: None
[DEBUG]2025-06-27 11:49:42,242: None
[DEBUG]2025-06-27 11:49:42,244: None
[DEBUG]2025-06-27 11:49:42,244: None
[DEBUG]2025-06-27 11:49:42,244: None
[DEBUG]2025-06-27 11:49:42,244: None
[DEBUG]2025-06-27 11:49:42,244: None
[DEBUG]2025-06-27 11:49:42,244: None
[DEBUG]2025-06-27 11:49:42,244: None
[DEBUG]2025-06-27 11:49:42,244: None
[DEBUG]2025-06-27 11:49:42,244: None
[DEBUG]2025-06-27 11:49:42,244: None
[DEBUG]2025-06-27 11:49:42,244: None
[DEBUG]2025-06-27 11:49:42,245: None
[DEBUG]2025-06-27 11:49:42,245: None
[DEBUG]2025-06-27 11:49:42,245: None
[DEBUG]2025-06-27 11:49:42,245: None
[DEBUG]2025-06-27 11:49:42,245: None
[DEBUG]2025-06-27 11:49:42,245: None
[DEBUG]2025-06-27 11:49:42,245: None
[DEBUG]2025-06-27 11:49:42,245: None
[DEBUG]2025-06-27 11:49:42,245: None
[DEBUG]2025-06-27 11:49:42,245: None
[DEBUG]2025-06-27 11:49:42,245: None
[DEBUG]2025-06-27 11:49:42,245: None
[DEBUG]2025-06-27 11:49:42,248: None
[DEBUG]2025-06-27 11:49:42,248: None
[DEBUG]2025-06-27 11:49:42,248: None
[DEBUG]2025-06-27 11:49:42,248: None
[DEBUG]2025-06-27 11:49:42,248: None
[DEBUG]2025-06-27 11:49:42,248: None
[DEBUG]2025-06-27 11:49:42,248: None
[DEBUG]2025-06-27 11:49:42,248: None
[DEBUG]2025-06-27 11:49:42,248: None
[DEBUG]2025-06-27 11:49:42,248: None
[DEBUG]2025-06-27 11:49:42,248: None
[DEBUG]2025-06-27 11:49:42,248: None
[DEBUG]2025-06-27 11:49:42,248: None
[DEBUG]2025-06-27 11:49:42,250: None
[DEBUG]2025-06-27 11:49:42,250: None
[DEBUG]2025-06-27 11:49:42,250: None
[DEBUG]2025-06-27 11:49:42,250: None
[DEBUG]2025-06-27 11:49:42,250: None
[DEBUG]2025-06-27 11:49:42,250: None
[DEBUG]2025-06-27 11:49:42,250: None
[DEBUG]2025-06-27 11:49:42,250: None
[DEBUG]2025-06-27 11:49:42,250: None
[DEBUG]2025-06-27 11:49:42,250: None
[DEBUG]2025-06-27 11:49:42,250: None
[DEBUG]2025-06-27 11:49:42,250: None
[DEBUG]2025-06-27 11:49:42,250: None
[DEBUG]2025-06-27 11:49:42,250: None
[DEBUG]2025-06-27 11:49:42,252: None
[DEBUG]2025-06-27 11:49:42,252: None
[DEBUG]2025-06-27 11:49:42,252: None
[DEBUG]2025-06-27 11:49:42,252: None
[DEBUG]2025-06-27 11:49:42,252: None
[DEBUG]2025-06-27 11:49:42,252: None
[DEBUG]2025-06-27 11:49:42,252: None
[DEBUG]2025-06-27 11:49:42,252: None
[DEBUG]2025-06-27 11:49:42,252: None
[DEBUG]2025-06-27 11:49:42,252: None
[DEBUG]2025-06-27 11:49:42,252: None
[DEBUG]2025-06-27 11:49:42,252: None
[DEBUG]2025-06-27 11:49:42,252: None
[DEBUG]2025-06-27 11:49:42,252: None
[DEBUG]2025-06-27 11:49:42,252: None
[DEBUG]2025-06-27 11:49:42,253: None
[DEBUG]2025-06-27 11:49:42,253: None
[DEBUG]2025-06-27 11:49:42,253: None
[DEBUG]2025-06-27 11:49:42,253: None
[DEBUG]2025-06-27 11:49:42,253: None
[DEBUG]2025-06-27 11:49:42,253: None
[DEBUG]2025-06-27 11:49:42,253: None
[DEBUG]2025-06-27 11:49:42,253: None
[DEBUG]2025-06-27 11:49:42,253: None
[DEBUG]2025-06-27 11:49:42,253: None
[DEBUG]2025-06-27 11:49:42,253: None
[DEBUG]2025-06-27 11:49:42,253: None
[DEBUG]2025-06-27 11:49:42,253: None
[DEBUG]2025-06-27 11:49:42,253: None
[DEBUG]2025-06-27 11:49:42,253: None
[DEBUG]2025-06-27 11:49:42,253: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,254: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,255: None
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,256: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,257: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,258: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,267: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,269: None
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,271: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,274: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:49:42,275: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,219: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:51:34,219: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:51:34,220: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:51:34,226: None
[DEBUG]2025-06-27 11:51:34,226: None
[DEBUG]2025-06-27 11:51:34,228: None
[DEBUG]2025-06-27 11:51:34,228: None
[DEBUG]2025-06-27 11:51:34,228: None
[DEBUG]2025-06-27 11:51:34,230: None
[DEBUG]2025-06-27 11:51:34,230: None
[DEBUG]2025-06-27 11:51:34,230: None
[DEBUG]2025-06-27 11:51:34,230: None
[DEBUG]2025-06-27 11:51:34,232: None
[DEBUG]2025-06-27 11:51:34,232: None
[DEBUG]2025-06-27 11:51:34,232: None
[DEBUG]2025-06-27 11:51:34,232: None
[DEBUG]2025-06-27 11:51:34,232: None
[DEBUG]2025-06-27 11:51:34,234: None
[DEBUG]2025-06-27 11:51:34,234: None
[DEBUG]2025-06-27 11:51:34,234: None
[DEBUG]2025-06-27 11:51:34,234: None
[DEBUG]2025-06-27 11:51:34,234: None
[DEBUG]2025-06-27 11:51:34,234: None
[DEBUG]2025-06-27 11:51:34,236: None
[DEBUG]2025-06-27 11:51:34,236: None
[DEBUG]2025-06-27 11:51:34,236: None
[DEBUG]2025-06-27 11:51:34,236: None
[DEBUG]2025-06-27 11:51:34,236: None
[DEBUG]2025-06-27 11:51:34,236: None
[DEBUG]2025-06-27 11:51:34,236: None
[DEBUG]2025-06-27 11:51:34,238: None
[DEBUG]2025-06-27 11:51:34,238: None
[DEBUG]2025-06-27 11:51:34,238: None
[DEBUG]2025-06-27 11:51:34,238: None
[DEBUG]2025-06-27 11:51:34,238: None
[DEBUG]2025-06-27 11:51:34,238: None
[DEBUG]2025-06-27 11:51:34,238: None
[DEBUG]2025-06-27 11:51:34,238: None
[DEBUG]2025-06-27 11:51:34,240: None
[DEBUG]2025-06-27 11:51:34,240: None
[DEBUG]2025-06-27 11:51:34,240: None
[DEBUG]2025-06-27 11:51:34,240: None
[DEBUG]2025-06-27 11:51:34,240: None
[DEBUG]2025-06-27 11:51:34,240: None
[DEBUG]2025-06-27 11:51:34,240: None
[DEBUG]2025-06-27 11:51:34,240: None
[DEBUG]2025-06-27 11:51:34,240: None
[DEBUG]2025-06-27 11:51:34,242: None
[DEBUG]2025-06-27 11:51:34,242: None
[DEBUG]2025-06-27 11:51:34,242: None
[DEBUG]2025-06-27 11:51:34,242: None
[DEBUG]2025-06-27 11:51:34,242: None
[DEBUG]2025-06-27 11:51:34,242: None
[DEBUG]2025-06-27 11:51:34,242: None
[DEBUG]2025-06-27 11:51:34,242: None
[DEBUG]2025-06-27 11:51:34,242: None
[DEBUG]2025-06-27 11:51:34,242: None
[DEBUG]2025-06-27 11:51:34,244: None
[DEBUG]2025-06-27 11:51:34,244: None
[DEBUG]2025-06-27 11:51:34,244: None
[DEBUG]2025-06-27 11:51:34,244: None
[DEBUG]2025-06-27 11:51:34,244: None
[DEBUG]2025-06-27 11:51:34,244: None
[DEBUG]2025-06-27 11:51:34,244: None
[DEBUG]2025-06-27 11:51:34,244: None
[DEBUG]2025-06-27 11:51:34,244: None
[DEBUG]2025-06-27 11:51:34,244: None
[DEBUG]2025-06-27 11:51:34,244: None
[DEBUG]2025-06-27 11:51:34,246: None
[DEBUG]2025-06-27 11:51:34,246: None
[DEBUG]2025-06-27 11:51:34,246: None
[DEBUG]2025-06-27 11:51:34,246: None
[DEBUG]2025-06-27 11:51:34,246: None
[DEBUG]2025-06-27 11:51:34,246: None
[DEBUG]2025-06-27 11:51:34,246: None
[DEBUG]2025-06-27 11:51:34,246: None
[DEBUG]2025-06-27 11:51:34,246: None
[DEBUG]2025-06-27 11:51:34,246: None
[DEBUG]2025-06-27 11:51:34,246: None
[DEBUG]2025-06-27 11:51:34,246: None
[DEBUG]2025-06-27 11:51:34,248: None
[DEBUG]2025-06-27 11:51:34,248: None
[DEBUG]2025-06-27 11:51:34,248: None
[DEBUG]2025-06-27 11:51:34,248: None
[DEBUG]2025-06-27 11:51:34,248: None
[DEBUG]2025-06-27 11:51:34,248: None
[DEBUG]2025-06-27 11:51:34,248: None
[DEBUG]2025-06-27 11:51:34,248: None
[DEBUG]2025-06-27 11:51:34,248: None
[DEBUG]2025-06-27 11:51:34,248: None
[DEBUG]2025-06-27 11:51:34,248: None
[DEBUG]2025-06-27 11:51:34,248: None
[DEBUG]2025-06-27 11:51:34,248: None
[DEBUG]2025-06-27 11:51:34,250: None
[DEBUG]2025-06-27 11:51:34,250: None
[DEBUG]2025-06-27 11:51:34,250: None
[DEBUG]2025-06-27 11:51:34,250: None
[DEBUG]2025-06-27 11:51:34,250: None
[DEBUG]2025-06-27 11:51:34,250: None
[DEBUG]2025-06-27 11:51:34,250: None
[DEBUG]2025-06-27 11:51:34,250: None
[DEBUG]2025-06-27 11:51:34,250: None
[DEBUG]2025-06-27 11:51:34,250: None
[DEBUG]2025-06-27 11:51:34,250: None
[DEBUG]2025-06-27 11:51:34,250: None
[DEBUG]2025-06-27 11:51:34,250: None
[DEBUG]2025-06-27 11:51:34,250: None
[DEBUG]2025-06-27 11:51:34,253: None
[DEBUG]2025-06-27 11:51:34,253: None
[DEBUG]2025-06-27 11:51:34,253: None
[DEBUG]2025-06-27 11:51:34,253: None
[DEBUG]2025-06-27 11:51:34,253: None
[DEBUG]2025-06-27 11:51:34,253: None
[DEBUG]2025-06-27 11:51:34,253: None
[DEBUG]2025-06-27 11:51:34,253: None
[DEBUG]2025-06-27 11:51:34,253: None
[DEBUG]2025-06-27 11:51:34,253: None
[DEBUG]2025-06-27 11:51:34,253: None
[DEBUG]2025-06-27 11:51:34,253: None
[DEBUG]2025-06-27 11:51:34,253: None
[DEBUG]2025-06-27 11:51:34,253: None
[DEBUG]2025-06-27 11:51:34,253: None
[DEBUG]2025-06-27 11:51:34,255: None
[DEBUG]2025-06-27 11:51:34,255: None
[DEBUG]2025-06-27 11:51:34,255: None
[DEBUG]2025-06-27 11:51:34,255: None
[DEBUG]2025-06-27 11:51:34,255: None
[DEBUG]2025-06-27 11:51:34,255: None
[DEBUG]2025-06-27 11:51:34,255: None
[DEBUG]2025-06-27 11:51:34,255: None
[DEBUG]2025-06-27 11:51:34,255: None
[DEBUG]2025-06-27 11:51:34,255: None
[DEBUG]2025-06-27 11:51:34,255: None
[DEBUG]2025-06-27 11:51:34,255: None
[DEBUG]2025-06-27 11:51:34,255: None
[DEBUG]2025-06-27 11:51:34,255: None
[DEBUG]2025-06-27 11:51:34,255: None
[DEBUG]2025-06-27 11:51:34,255: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,259: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,261: None
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,263: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,264: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,266: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,268: None
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,270: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,271: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,272: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,275: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,276: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:51:34,277: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,443: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:56:46,444: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:56:46,444: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:56:46,447: None
[DEBUG]2025-06-27 11:56:46,447: None
[DEBUG]2025-06-27 11:56:46,448: None
[DEBUG]2025-06-27 11:56:46,448: None
[DEBUG]2025-06-27 11:56:46,448: None
[DEBUG]2025-06-27 11:56:46,450: None
[DEBUG]2025-06-27 11:56:46,450: None
[DEBUG]2025-06-27 11:56:46,450: None
[DEBUG]2025-06-27 11:56:46,450: None
[DEBUG]2025-06-27 11:56:46,450: None
[DEBUG]2025-06-27 11:56:46,450: None
[DEBUG]2025-06-27 11:56:46,450: None
[DEBUG]2025-06-27 11:56:46,450: None
[DEBUG]2025-06-27 11:56:46,450: None
[DEBUG]2025-06-27 11:56:46,451: None
[DEBUG]2025-06-27 11:56:46,451: None
[DEBUG]2025-06-27 11:56:46,451: None
[DEBUG]2025-06-27 11:56:46,451: None
[DEBUG]2025-06-27 11:56:46,451: None
[DEBUG]2025-06-27 11:56:46,451: None
[DEBUG]2025-06-27 11:56:46,452: None
[DEBUG]2025-06-27 11:56:46,452: None
[DEBUG]2025-06-27 11:56:46,452: None
[DEBUG]2025-06-27 11:56:46,452: None
[DEBUG]2025-06-27 11:56:46,452: None
[DEBUG]2025-06-27 11:56:46,452: None
[DEBUG]2025-06-27 11:56:46,452: None
[DEBUG]2025-06-27 11:56:46,454: None
[DEBUG]2025-06-27 11:56:46,454: None
[DEBUG]2025-06-27 11:56:46,454: None
[DEBUG]2025-06-27 11:56:46,454: None
[DEBUG]2025-06-27 11:56:46,454: None
[DEBUG]2025-06-27 11:56:46,454: None
[DEBUG]2025-06-27 11:56:46,454: None
[DEBUG]2025-06-27 11:56:46,454: None
[DEBUG]2025-06-27 11:56:46,455: None
[DEBUG]2025-06-27 11:56:46,455: None
[DEBUG]2025-06-27 11:56:46,455: None
[DEBUG]2025-06-27 11:56:46,455: None
[DEBUG]2025-06-27 11:56:46,455: None
[DEBUG]2025-06-27 11:56:46,455: None
[DEBUG]2025-06-27 11:56:46,455: None
[DEBUG]2025-06-27 11:56:46,455: None
[DEBUG]2025-06-27 11:56:46,455: None
[DEBUG]2025-06-27 11:56:46,458: None
[DEBUG]2025-06-27 11:56:46,458: None
[DEBUG]2025-06-27 11:56:46,458: None
[DEBUG]2025-06-27 11:56:46,458: None
[DEBUG]2025-06-27 11:56:46,458: None
[DEBUG]2025-06-27 11:56:46,458: None
[DEBUG]2025-06-27 11:56:46,458: None
[DEBUG]2025-06-27 11:56:46,458: None
[DEBUG]2025-06-27 11:56:46,458: None
[DEBUG]2025-06-27 11:56:46,458: None
[DEBUG]2025-06-27 11:56:46,460: None
[DEBUG]2025-06-27 11:56:46,460: None
[DEBUG]2025-06-27 11:56:46,460: None
[DEBUG]2025-06-27 11:56:46,460: None
[DEBUG]2025-06-27 11:56:46,460: None
[DEBUG]2025-06-27 11:56:46,460: None
[DEBUG]2025-06-27 11:56:46,460: None
[DEBUG]2025-06-27 11:56:46,460: None
[DEBUG]2025-06-27 11:56:46,460: None
[DEBUG]2025-06-27 11:56:46,460: None
[DEBUG]2025-06-27 11:56:46,460: None
[DEBUG]2025-06-27 11:56:46,462: None
[DEBUG]2025-06-27 11:56:46,462: None
[DEBUG]2025-06-27 11:56:46,462: None
[DEBUG]2025-06-27 11:56:46,462: None
[DEBUG]2025-06-27 11:56:46,462: None
[DEBUG]2025-06-27 11:56:46,462: None
[DEBUG]2025-06-27 11:56:46,462: None
[DEBUG]2025-06-27 11:56:46,462: None
[DEBUG]2025-06-27 11:56:46,462: None
[DEBUG]2025-06-27 11:56:46,462: None
[DEBUG]2025-06-27 11:56:46,462: None
[DEBUG]2025-06-27 11:56:46,462: None
[DEBUG]2025-06-27 11:56:46,464: None
[DEBUG]2025-06-27 11:56:46,464: None
[DEBUG]2025-06-27 11:56:46,464: None
[DEBUG]2025-06-27 11:56:46,464: None
[DEBUG]2025-06-27 11:56:46,464: None
[DEBUG]2025-06-27 11:56:46,464: None
[DEBUG]2025-06-27 11:56:46,464: None
[DEBUG]2025-06-27 11:56:46,464: None
[DEBUG]2025-06-27 11:56:46,464: None
[DEBUG]2025-06-27 11:56:46,464: None
[DEBUG]2025-06-27 11:56:46,464: None
[DEBUG]2025-06-27 11:56:46,464: None
[DEBUG]2025-06-27 11:56:46,464: None
[DEBUG]2025-06-27 11:56:46,467: None
[DEBUG]2025-06-27 11:56:46,467: None
[DEBUG]2025-06-27 11:56:46,467: None
[DEBUG]2025-06-27 11:56:46,467: None
[DEBUG]2025-06-27 11:56:46,467: None
[DEBUG]2025-06-27 11:56:46,467: None
[DEBUG]2025-06-27 11:56:46,467: None
[DEBUG]2025-06-27 11:56:46,467: None
[DEBUG]2025-06-27 11:56:46,467: None
[DEBUG]2025-06-27 11:56:46,467: None
[DEBUG]2025-06-27 11:56:46,467: None
[DEBUG]2025-06-27 11:56:46,467: None
[DEBUG]2025-06-27 11:56:46,467: None
[DEBUG]2025-06-27 11:56:46,467: None
[DEBUG]2025-06-27 11:56:46,468: None
[DEBUG]2025-06-27 11:56:46,468: None
[DEBUG]2025-06-27 11:56:46,468: None
[DEBUG]2025-06-27 11:56:46,468: None
[DEBUG]2025-06-27 11:56:46,468: None
[DEBUG]2025-06-27 11:56:46,468: None
[DEBUG]2025-06-27 11:56:46,468: None
[DEBUG]2025-06-27 11:56:46,468: None
[DEBUG]2025-06-27 11:56:46,468: None
[DEBUG]2025-06-27 11:56:46,468: None
[DEBUG]2025-06-27 11:56:46,468: None
[DEBUG]2025-06-27 11:56:46,468: None
[DEBUG]2025-06-27 11:56:46,468: None
[DEBUG]2025-06-27 11:56:46,468: None
[DEBUG]2025-06-27 11:56:46,468: None
[DEBUG]2025-06-27 11:56:46,470: None
[DEBUG]2025-06-27 11:56:46,470: None
[DEBUG]2025-06-27 11:56:46,470: None
[DEBUG]2025-06-27 11:56:46,470: None
[DEBUG]2025-06-27 11:56:46,470: None
[DEBUG]2025-06-27 11:56:46,470: None
[DEBUG]2025-06-27 11:56:46,470: None
[DEBUG]2025-06-27 11:56:46,470: None
[DEBUG]2025-06-27 11:56:46,470: None
[DEBUG]2025-06-27 11:56:46,470: None
[DEBUG]2025-06-27 11:56:46,470: None
[DEBUG]2025-06-27 11:56:46,470: None
[DEBUG]2025-06-27 11:56:46,470: None
[DEBUG]2025-06-27 11:56:46,470: None
[DEBUG]2025-06-27 11:56:46,470: None
[DEBUG]2025-06-27 11:56:46,470: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,471: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,473: None
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,474: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,475: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,476: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,478: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,479: None
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,480: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,482: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,485: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:56:46,486: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:15,986: <re.Match object; span=(1087, 1774), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-27 11:58:15,986: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-27 11:58:15,987: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-27 11:58:15,993: None
[DEBUG]2025-06-27 11:58:15,993: None
[DEBUG]2025-06-27 11:58:15,995: None
[DEBUG]2025-06-27 11:58:15,995: None
[DEBUG]2025-06-27 11:58:15,995: None
[DEBUG]2025-06-27 11:58:15,997: None
[DEBUG]2025-06-27 11:58:15,997: None
[DEBUG]2025-06-27 11:58:15,997: None
[DEBUG]2025-06-27 11:58:15,997: None
[DEBUG]2025-06-27 11:58:15,999: None
[DEBUG]2025-06-27 11:58:15,999: None
[DEBUG]2025-06-27 11:58:15,999: None
[DEBUG]2025-06-27 11:58:15,999: None
[DEBUG]2025-06-27 11:58:15,999: None
[DEBUG]2025-06-27 11:58:16,001: None
[DEBUG]2025-06-27 11:58:16,001: None
[DEBUG]2025-06-27 11:58:16,001: None
[DEBUG]2025-06-27 11:58:16,001: None
[DEBUG]2025-06-27 11:58:16,001: None
[DEBUG]2025-06-27 11:58:16,001: None
[DEBUG]2025-06-27 11:58:16,003: None
[DEBUG]2025-06-27 11:58:16,003: None
[DEBUG]2025-06-27 11:58:16,003: None
[DEBUG]2025-06-27 11:58:16,003: None
[DEBUG]2025-06-27 11:58:16,003: None
[DEBUG]2025-06-27 11:58:16,003: None
[DEBUG]2025-06-27 11:58:16,003: None
[DEBUG]2025-06-27 11:58:16,005: None
[DEBUG]2025-06-27 11:58:16,005: None
[DEBUG]2025-06-27 11:58:16,005: None
[DEBUG]2025-06-27 11:58:16,005: None
[DEBUG]2025-06-27 11:58:16,005: None
[DEBUG]2025-06-27 11:58:16,005: None
[DEBUG]2025-06-27 11:58:16,005: None
[DEBUG]2025-06-27 11:58:16,005: None
[DEBUG]2025-06-27 11:58:16,007: None
[DEBUG]2025-06-27 11:58:16,007: None
[DEBUG]2025-06-27 11:58:16,007: None
[DEBUG]2025-06-27 11:58:16,007: None
[DEBUG]2025-06-27 11:58:16,007: None
[DEBUG]2025-06-27 11:58:16,007: None
[DEBUG]2025-06-27 11:58:16,007: None
[DEBUG]2025-06-27 11:58:16,007: None
[DEBUG]2025-06-27 11:58:16,007: None
[DEBUG]2025-06-27 11:58:16,008: None
[DEBUG]2025-06-27 11:58:16,008: None
[DEBUG]2025-06-27 11:58:16,008: None
[DEBUG]2025-06-27 11:58:16,008: None
[DEBUG]2025-06-27 11:58:16,008: None
[DEBUG]2025-06-27 11:58:16,008: None
[DEBUG]2025-06-27 11:58:16,008: None
[DEBUG]2025-06-27 11:58:16,008: None
[DEBUG]2025-06-27 11:58:16,008: None
[DEBUG]2025-06-27 11:58:16,008: None
[DEBUG]2025-06-27 11:58:16,010: None
[DEBUG]2025-06-27 11:58:16,010: None
[DEBUG]2025-06-27 11:58:16,010: None
[DEBUG]2025-06-27 11:58:16,010: None
[DEBUG]2025-06-27 11:58:16,010: None
[DEBUG]2025-06-27 11:58:16,010: None
[DEBUG]2025-06-27 11:58:16,010: None
[DEBUG]2025-06-27 11:58:16,010: None
[DEBUG]2025-06-27 11:58:16,010: None
[DEBUG]2025-06-27 11:58:16,010: None
[DEBUG]2025-06-27 11:58:16,010: None
[DEBUG]2025-06-27 11:58:16,012: None
[DEBUG]2025-06-27 11:58:16,012: None
[DEBUG]2025-06-27 11:58:16,012: None
[DEBUG]2025-06-27 11:58:16,012: None
[DEBUG]2025-06-27 11:58:16,012: None
[DEBUG]2025-06-27 11:58:16,012: None
[DEBUG]2025-06-27 11:58:16,012: None
[DEBUG]2025-06-27 11:58:16,012: None
[DEBUG]2025-06-27 11:58:16,012: None
[DEBUG]2025-06-27 11:58:16,012: None
[DEBUG]2025-06-27 11:58:16,012: None
[DEBUG]2025-06-27 11:58:16,012: None
[DEBUG]2025-06-27 11:58:16,014: None
[DEBUG]2025-06-27 11:58:16,014: None
[DEBUG]2025-06-27 11:58:16,014: None
[DEBUG]2025-06-27 11:58:16,014: None
[DEBUG]2025-06-27 11:58:16,014: None
[DEBUG]2025-06-27 11:58:16,014: None
[DEBUG]2025-06-27 11:58:16,014: None
[DEBUG]2025-06-27 11:58:16,014: None
[DEBUG]2025-06-27 11:58:16,014: None
[DEBUG]2025-06-27 11:58:16,014: None
[DEBUG]2025-06-27 11:58:16,014: None
[DEBUG]2025-06-27 11:58:16,014: None
[DEBUG]2025-06-27 11:58:16,014: None
[DEBUG]2025-06-27 11:58:16,016: None
[DEBUG]2025-06-27 11:58:16,016: None
[DEBUG]2025-06-27 11:58:16,016: None
[DEBUG]2025-06-27 11:58:16,016: None
[DEBUG]2025-06-27 11:58:16,016: None
[DEBUG]2025-06-27 11:58:16,016: None
[DEBUG]2025-06-27 11:58:16,016: None
[DEBUG]2025-06-27 11:58:16,016: None
[DEBUG]2025-06-27 11:58:16,016: None
[DEBUG]2025-06-27 11:58:16,016: None
[DEBUG]2025-06-27 11:58:16,016: None
[DEBUG]2025-06-27 11:58:16,016: None
[DEBUG]2025-06-27 11:58:16,016: None
[DEBUG]2025-06-27 11:58:16,016: None
[DEBUG]2025-06-27 11:58:16,018: None
[DEBUG]2025-06-27 11:58:16,018: None
[DEBUG]2025-06-27 11:58:16,018: None
[DEBUG]2025-06-27 11:58:16,018: None
[DEBUG]2025-06-27 11:58:16,018: None
[DEBUG]2025-06-27 11:58:16,018: None
[DEBUG]2025-06-27 11:58:16,018: None
[DEBUG]2025-06-27 11:58:16,018: None
[DEBUG]2025-06-27 11:58:16,018: None
[DEBUG]2025-06-27 11:58:16,018: None
[DEBUG]2025-06-27 11:58:16,018: None
[DEBUG]2025-06-27 11:58:16,018: None
[DEBUG]2025-06-27 11:58:16,018: None
[DEBUG]2025-06-27 11:58:16,018: None
[DEBUG]2025-06-27 11:58:16,018: None
[DEBUG]2025-06-27 11:58:16,019: None
[DEBUG]2025-06-27 11:58:16,019: None
[DEBUG]2025-06-27 11:58:16,019: None
[DEBUG]2025-06-27 11:58:16,019: None
[DEBUG]2025-06-27 11:58:16,019: None
[DEBUG]2025-06-27 11:58:16,019: None
[DEBUG]2025-06-27 11:58:16,019: None
[DEBUG]2025-06-27 11:58:16,019: None
[DEBUG]2025-06-27 11:58:16,019: None
[DEBUG]2025-06-27 11:58:16,019: None
[DEBUG]2025-06-27 11:58:16,019: None
[DEBUG]2025-06-27 11:58:16,019: None
[DEBUG]2025-06-27 11:58:16,019: None
[DEBUG]2025-06-27 11:58:16,019: None
[DEBUG]2025-06-27 11:58:16,019: None
[DEBUG]2025-06-27 11:58:16,019: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,021: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,022: None
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,024: <re.Match object; span=(2168, 2241), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,025: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,026: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,028: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,029: None
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,031: <re.Match object; span=(1635, 1753), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN1', 'TURN2', 'DANCE']
[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,032: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN1",
	"TURN2",
	"DANCE",
};


[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,034: <re.Match object; span=(1606, 1701), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,035: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-27 11:58:16,036: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


