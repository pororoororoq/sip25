[DEBUG]2025-06-24 15:22:54,615: <re.Match object; span=(1084, 1777), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-24 15:22:54,615: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2025-06-24 15:22:54,616: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-24 15:22:54,660: None
[DEBUG]2025-06-24 15:22:54,660: None
[DEBUG]2025-06-24 15:22:54,663: None
[DEBUG]2025-06-24 15:22:54,663: None
[DEBUG]2025-06-24 15:22:54,663: None
[DEBUG]2025-06-24 15:22:54,664: None
[DEBUG]2025-06-24 15:22:54,664: None
[DEBUG]2025-06-24 15:22:54,664: None
[DEBUG]2025-06-24 15:22:54,664: None
[DEBUG]2025-06-24 15:22:54,666: None
[DEBUG]2025-06-24 15:22:54,666: None
[DEBUG]2025-06-24 15:22:54,666: None
[DEBUG]2025-06-24 15:22:54,666: None
[DEBUG]2025-06-24 15:22:54,666: None
[DEBUG]2025-06-24 15:22:54,668: None
[DEBUG]2025-06-24 15:22:54,668: None
[DEBUG]2025-06-24 15:22:54,668: None
[DEBUG]2025-06-24 15:22:54,668: None
[DEBUG]2025-06-24 15:22:54,668: None
[DEBUG]2025-06-24 15:22:54,668: None
[DEBUG]2025-06-24 15:22:54,669: None
[DEBUG]2025-06-24 15:22:54,669: None
[DEBUG]2025-06-24 15:22:54,669: None
[DEBUG]2025-06-24 15:22:54,669: None
[DEBUG]2025-06-24 15:22:54,669: None
[DEBUG]2025-06-24 15:22:54,669: None
[DEBUG]2025-06-24 15:22:54,669: None
[DEBUG]2025-06-24 15:22:54,671: None
[DEBUG]2025-06-24 15:22:54,671: None
[DEBUG]2025-06-24 15:22:54,671: None
[DEBUG]2025-06-24 15:22:54,671: None
[DEBUG]2025-06-24 15:22:54,671: None
[DEBUG]2025-06-24 15:22:54,671: None
[DEBUG]2025-06-24 15:22:54,671: None
[DEBUG]2025-06-24 15:22:54,671: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,672: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,674: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,676: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,678: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,681: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,684: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,687: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,690: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,692: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,695: None
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,698: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,700: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,703: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:22:54,704: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,618: <re.Match object; span=(1090, 1783), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-24 15:25:33,618: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2025-06-24 15:25:33,619: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-24 15:25:33,624: None
[DEBUG]2025-06-24 15:25:33,624: None
[DEBUG]2025-06-24 15:25:33,625: None
[DEBUG]2025-06-24 15:25:33,625: None
[DEBUG]2025-06-24 15:25:33,625: None
[DEBUG]2025-06-24 15:25:33,628: None
[DEBUG]2025-06-24 15:25:33,628: None
[DEBUG]2025-06-24 15:25:33,628: None
[DEBUG]2025-06-24 15:25:33,628: None
[DEBUG]2025-06-24 15:25:33,630: None
[DEBUG]2025-06-24 15:25:33,630: None
[DEBUG]2025-06-24 15:25:33,630: None
[DEBUG]2025-06-24 15:25:33,630: None
[DEBUG]2025-06-24 15:25:33,630: None
[DEBUG]2025-06-24 15:25:33,632: None
[DEBUG]2025-06-24 15:25:33,632: None
[DEBUG]2025-06-24 15:25:33,632: None
[DEBUG]2025-06-24 15:25:33,632: None
[DEBUG]2025-06-24 15:25:33,632: None
[DEBUG]2025-06-24 15:25:33,632: None
[DEBUG]2025-06-24 15:25:33,634: None
[DEBUG]2025-06-24 15:25:33,634: None
[DEBUG]2025-06-24 15:25:33,634: None
[DEBUG]2025-06-24 15:25:33,634: None
[DEBUG]2025-06-24 15:25:33,634: None
[DEBUG]2025-06-24 15:25:33,634: None
[DEBUG]2025-06-24 15:25:33,634: None
[DEBUG]2025-06-24 15:25:33,636: None
[DEBUG]2025-06-24 15:25:33,636: None
[DEBUG]2025-06-24 15:25:33,636: None
[DEBUG]2025-06-24 15:25:33,636: None
[DEBUG]2025-06-24 15:25:33,636: None
[DEBUG]2025-06-24 15:25:33,636: None
[DEBUG]2025-06-24 15:25:33,636: None
[DEBUG]2025-06-24 15:25:33,636: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,637: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,639: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,641: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,644: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,647: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,650: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,652: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,654: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,656: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,658: None
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,660: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,662: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,666: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,667: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:25:33,668: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,384: <re.Match object; span=(1090, 1783), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-24 15:31:46,384: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2025-06-24 15:31:46,384: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-24 15:31:46,387: None
[DEBUG]2025-06-24 15:31:46,387: None
[DEBUG]2025-06-24 15:31:46,388: None
[DEBUG]2025-06-24 15:31:46,388: None
[DEBUG]2025-06-24 15:31:46,388: None
[DEBUG]2025-06-24 15:31:46,389: None
[DEBUG]2025-06-24 15:31:46,389: None
[DEBUG]2025-06-24 15:31:46,389: None
[DEBUG]2025-06-24 15:31:46,389: None
[DEBUG]2025-06-24 15:31:46,390: None
[DEBUG]2025-06-24 15:31:46,390: None
[DEBUG]2025-06-24 15:31:46,390: None
[DEBUG]2025-06-24 15:31:46,390: None
[DEBUG]2025-06-24 15:31:46,390: None
[DEBUG]2025-06-24 15:31:46,391: None
[DEBUG]2025-06-24 15:31:46,391: None
[DEBUG]2025-06-24 15:31:46,391: None
[DEBUG]2025-06-24 15:31:46,391: None
[DEBUG]2025-06-24 15:31:46,391: None
[DEBUG]2025-06-24 15:31:46,391: None
[DEBUG]2025-06-24 15:31:46,392: None
[DEBUG]2025-06-24 15:31:46,392: None
[DEBUG]2025-06-24 15:31:46,392: None
[DEBUG]2025-06-24 15:31:46,392: None
[DEBUG]2025-06-24 15:31:46,392: None
[DEBUG]2025-06-24 15:31:46,392: None
[DEBUG]2025-06-24 15:31:46,392: None
[DEBUG]2025-06-24 15:31:46,393: None
[DEBUG]2025-06-24 15:31:46,393: None
[DEBUG]2025-06-24 15:31:46,393: None
[DEBUG]2025-06-24 15:31:46,393: None
[DEBUG]2025-06-24 15:31:46,393: None
[DEBUG]2025-06-24 15:31:46,393: None
[DEBUG]2025-06-24 15:31:46,393: None
[DEBUG]2025-06-24 15:31:46,393: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,394: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,395: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,396: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,398: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,399: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,400: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,401: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,402: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,403: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,404: None
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,405: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,406: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,407: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:46,408: None
[DEBUG]2025-06-24 15:31:58,567: <re.Match object; span=(1090, 1783), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-24 15:31:58,568: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2025-06-24 15:31:58,569: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-24 15:31:58,573: None
[DEBUG]2025-06-24 15:31:58,573: None
[DEBUG]2025-06-24 15:31:58,574: None
[DEBUG]2025-06-24 15:31:58,574: None
[DEBUG]2025-06-24 15:31:58,574: None
[DEBUG]2025-06-24 15:31:58,575: None
[DEBUG]2025-06-24 15:31:58,575: None
[DEBUG]2025-06-24 15:31:58,575: None
[DEBUG]2025-06-24 15:31:58,575: None
[DEBUG]2025-06-24 15:31:58,576: None
[DEBUG]2025-06-24 15:31:58,576: None
[DEBUG]2025-06-24 15:31:58,576: None
[DEBUG]2025-06-24 15:31:58,576: None
[DEBUG]2025-06-24 15:31:58,576: None
[DEBUG]2025-06-24 15:31:58,577: None
[DEBUG]2025-06-24 15:31:58,577: None
[DEBUG]2025-06-24 15:31:58,577: None
[DEBUG]2025-06-24 15:31:58,577: None
[DEBUG]2025-06-24 15:31:58,577: None
[DEBUG]2025-06-24 15:31:58,577: None
[DEBUG]2025-06-24 15:31:58,578: None
[DEBUG]2025-06-24 15:31:58,578: None
[DEBUG]2025-06-24 15:31:58,578: None
[DEBUG]2025-06-24 15:31:58,578: None
[DEBUG]2025-06-24 15:31:58,578: None
[DEBUG]2025-06-24 15:31:58,578: None
[DEBUG]2025-06-24 15:31:58,578: None
[DEBUG]2025-06-24 15:31:58,580: None
[DEBUG]2025-06-24 15:31:58,580: None
[DEBUG]2025-06-24 15:31:58,580: None
[DEBUG]2025-06-24 15:31:58,580: None
[DEBUG]2025-06-24 15:31:58,580: None
[DEBUG]2025-06-24 15:31:58,580: None
[DEBUG]2025-06-24 15:31:58,580: None
[DEBUG]2025-06-24 15:31:58,580: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,581: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,583: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,584: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,586: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,588: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,589: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,590: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,591: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,592: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,593: None
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,594: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: ['InitPState', 'FirstState']
[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,595: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,597: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,605: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,606: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-24 15:31:58,608: None
[DEBUG]2025-06-25 14:53:08,333: <re.Match object; span=(1090, 1783), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 14:53:08,334: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 14:53:08,334: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 14:53:08,336: None
[DEBUG]2025-06-25 14:53:08,336: None
[DEBUG]2025-06-25 14:53:08,337: None
[DEBUG]2025-06-25 14:53:08,337: None
[DEBUG]2025-06-25 14:53:08,337: None
[DEBUG]2025-06-25 14:53:08,337: None
[DEBUG]2025-06-25 14:53:08,337: None
[DEBUG]2025-06-25 14:53:08,337: None
[DEBUG]2025-06-25 14:53:08,337: None
[DEBUG]2025-06-25 14:53:08,338: None
[DEBUG]2025-06-25 14:53:08,338: None
[DEBUG]2025-06-25 14:53:08,338: None
[DEBUG]2025-06-25 14:53:08,338: None
[DEBUG]2025-06-25 14:53:08,338: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,339: None
[DEBUG]2025-06-25 14:53:08,340: None
[DEBUG]2025-06-25 14:53:08,340: None
[DEBUG]2025-06-25 14:53:08,340: None
[DEBUG]2025-06-25 14:53:08,340: None
[DEBUG]2025-06-25 14:53:08,340: None
[DEBUG]2025-06-25 14:53:08,340: None
[DEBUG]2025-06-25 14:53:08,340: None
[DEBUG]2025-06-25 14:53:08,340: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,341: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,342: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,343: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,344: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,345: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,346: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,347: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,349: None
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,350: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,351: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,353: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 14:53:08,355: None
[DEBUG]2025-06-25 15:11:37,272: <re.Match object; span=(1090, 1793), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:11:37,272: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'TEST', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:11:37,272: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"TEST",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:11:37,275: None
[DEBUG]2025-06-25 15:11:37,275: None
[DEBUG]2025-06-25 15:11:37,277: None
[DEBUG]2025-06-25 15:11:37,277: None
[DEBUG]2025-06-25 15:11:37,277: None
[DEBUG]2025-06-25 15:11:37,278: None
[DEBUG]2025-06-25 15:11:37,278: None
[DEBUG]2025-06-25 15:11:37,278: None
[DEBUG]2025-06-25 15:11:37,278: None
[DEBUG]2025-06-25 15:11:37,279: None
[DEBUG]2025-06-25 15:11:37,279: None
[DEBUG]2025-06-25 15:11:37,279: None
[DEBUG]2025-06-25 15:11:37,279: None
[DEBUG]2025-06-25 15:11:37,279: None
[DEBUG]2025-06-25 15:11:37,280: None
[DEBUG]2025-06-25 15:11:37,280: None
[DEBUG]2025-06-25 15:11:37,280: None
[DEBUG]2025-06-25 15:11:37,280: None
[DEBUG]2025-06-25 15:11:37,280: None
[DEBUG]2025-06-25 15:11:37,280: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,281: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,282: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,283: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,284: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,285: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,286: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,287: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,288: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,289: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,290: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,291: None
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,293: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,294: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,295: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,296: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,297: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:11:37,298: None
[DEBUG]2025-06-25 15:12:36,959: <re.Match object; span=(1088, 1791), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:12:36,959: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'TEST', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:12:36,959: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"TEST",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:12:36,962: None
[DEBUG]2025-06-25 15:12:36,962: None
[DEBUG]2025-06-25 15:12:36,963: None
[DEBUG]2025-06-25 15:12:36,963: None
[DEBUG]2025-06-25 15:12:36,963: None
[DEBUG]2025-06-25 15:12:36,965: None
[DEBUG]2025-06-25 15:12:36,965: None
[DEBUG]2025-06-25 15:12:36,965: None
[DEBUG]2025-06-25 15:12:36,965: None
[DEBUG]2025-06-25 15:12:36,966: None
[DEBUG]2025-06-25 15:12:36,966: None
[DEBUG]2025-06-25 15:12:36,966: None
[DEBUG]2025-06-25 15:12:36,966: None
[DEBUG]2025-06-25 15:12:36,966: None
[DEBUG]2025-06-25 15:12:36,968: None
[DEBUG]2025-06-25 15:12:36,968: None
[DEBUG]2025-06-25 15:12:36,968: None
[DEBUG]2025-06-25 15:12:36,968: None
[DEBUG]2025-06-25 15:12:36,968: None
[DEBUG]2025-06-25 15:12:36,968: None
[DEBUG]2025-06-25 15:12:36,969: None
[DEBUG]2025-06-25 15:12:36,969: None
[DEBUG]2025-06-25 15:12:36,969: None
[DEBUG]2025-06-25 15:12:36,969: None
[DEBUG]2025-06-25 15:12:36,969: None
[DEBUG]2025-06-25 15:12:36,969: None
[DEBUG]2025-06-25 15:12:36,969: None
[DEBUG]2025-06-25 15:12:36,971: None
[DEBUG]2025-06-25 15:12:36,971: None
[DEBUG]2025-06-25 15:12:36,971: None
[DEBUG]2025-06-25 15:12:36,971: None
[DEBUG]2025-06-25 15:12:36,971: None
[DEBUG]2025-06-25 15:12:36,971: None
[DEBUG]2025-06-25 15:12:36,971: None
[DEBUG]2025-06-25 15:12:36,971: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,972: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,974: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,976: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,978: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,980: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,982: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,983: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,985: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,987: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,988: None
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,989: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,990: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,992: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,993: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,994: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:12:36,995: None
[DEBUG]2025-06-25 15:13:41,932: <re.Match object; span=(1083, 1786), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:13:41,933: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'TEST', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:13:41,933: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"TEST",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:13:41,937: None
[DEBUG]2025-06-25 15:13:41,937: None
[DEBUG]2025-06-25 15:13:41,939: None
[DEBUG]2025-06-25 15:13:41,939: None
[DEBUG]2025-06-25 15:13:41,939: None
[DEBUG]2025-06-25 15:13:41,941: None
[DEBUG]2025-06-25 15:13:41,941: None
[DEBUG]2025-06-25 15:13:41,941: None
[DEBUG]2025-06-25 15:13:41,941: None
[DEBUG]2025-06-25 15:13:41,942: None
[DEBUG]2025-06-25 15:13:41,942: None
[DEBUG]2025-06-25 15:13:41,942: None
[DEBUG]2025-06-25 15:13:41,942: None
[DEBUG]2025-06-25 15:13:41,942: None
[DEBUG]2025-06-25 15:13:41,943: None
[DEBUG]2025-06-25 15:13:41,943: None
[DEBUG]2025-06-25 15:13:41,943: None
[DEBUG]2025-06-25 15:13:41,943: None
[DEBUG]2025-06-25 15:13:41,943: None
[DEBUG]2025-06-25 15:13:41,943: None
[DEBUG]2025-06-25 15:13:41,945: None
[DEBUG]2025-06-25 15:13:41,945: None
[DEBUG]2025-06-25 15:13:41,945: None
[DEBUG]2025-06-25 15:13:41,945: None
[DEBUG]2025-06-25 15:13:41,945: None
[DEBUG]2025-06-25 15:13:41,945: None
[DEBUG]2025-06-25 15:13:41,945: None
[DEBUG]2025-06-25 15:13:41,947: None
[DEBUG]2025-06-25 15:13:41,947: None
[DEBUG]2025-06-25 15:13:41,947: None
[DEBUG]2025-06-25 15:13:41,947: None
[DEBUG]2025-06-25 15:13:41,947: None
[DEBUG]2025-06-25 15:13:41,947: None
[DEBUG]2025-06-25 15:13:41,947: None
[DEBUG]2025-06-25 15:13:41,947: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,948: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,950: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,951: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,953: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,954: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,956: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,957: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,958: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,959: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,960: None
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,961: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,962: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,963: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,964: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,965: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:13:41,966: None
[DEBUG]2025-06-25 15:16:37,028: <re.Match object; span=(1081, 1836), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:16:37,028: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'FR', 'FL', 'BR', 'BL', 'NB', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:16:37,029: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NB",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:16:37,031: None
[DEBUG]2025-06-25 15:16:37,031: None
[DEBUG]2025-06-25 15:16:37,032: None
[DEBUG]2025-06-25 15:16:37,032: None
[DEBUG]2025-06-25 15:16:37,032: None
[DEBUG]2025-06-25 15:16:37,032: None
[DEBUG]2025-06-25 15:16:37,032: None
[DEBUG]2025-06-25 15:16:37,032: None
[DEBUG]2025-06-25 15:16:37,032: None
[DEBUG]2025-06-25 15:16:37,033: None
[DEBUG]2025-06-25 15:16:37,033: None
[DEBUG]2025-06-25 15:16:37,033: None
[DEBUG]2025-06-25 15:16:37,033: None
[DEBUG]2025-06-25 15:16:37,033: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,034: None
[DEBUG]2025-06-25 15:16:37,035: None
[DEBUG]2025-06-25 15:16:37,035: None
[DEBUG]2025-06-25 15:16:37,035: None
[DEBUG]2025-06-25 15:16:37,035: None
[DEBUG]2025-06-25 15:16:37,035: None
[DEBUG]2025-06-25 15:16:37,035: None
[DEBUG]2025-06-25 15:16:37,035: None
[DEBUG]2025-06-25 15:16:37,035: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,036: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,037: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,038: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,040: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,041: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,042: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,043: None
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,045: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:16:37,047: None
[DEBUG]2025-06-25 15:18:19,641: <re.Match object; span=(1081, 1842), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:18:19,641: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:18:19,641: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:18:19,645: None
[DEBUG]2025-06-25 15:18:19,645: None
[DEBUG]2025-06-25 15:18:19,646: None
[DEBUG]2025-06-25 15:18:19,646: None
[DEBUG]2025-06-25 15:18:19,646: None
[DEBUG]2025-06-25 15:18:19,647: None
[DEBUG]2025-06-25 15:18:19,647: None
[DEBUG]2025-06-25 15:18:19,647: None
[DEBUG]2025-06-25 15:18:19,647: None
[DEBUG]2025-06-25 15:18:19,648: None
[DEBUG]2025-06-25 15:18:19,648: None
[DEBUG]2025-06-25 15:18:19,648: None
[DEBUG]2025-06-25 15:18:19,648: None
[DEBUG]2025-06-25 15:18:19,648: None
[DEBUG]2025-06-25 15:18:19,649: None
[DEBUG]2025-06-25 15:18:19,649: None
[DEBUG]2025-06-25 15:18:19,649: None
[DEBUG]2025-06-25 15:18:19,649: None
[DEBUG]2025-06-25 15:18:19,649: None
[DEBUG]2025-06-25 15:18:19,649: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,650: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,651: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,653: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,655: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,656: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,657: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,659: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,660: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,661: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,662: None
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,663: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,664: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,665: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:18:19,666: None
[DEBUG]2025-06-25 15:19:07,989: <re.Match object; span=(1081, 1840), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:19:07,989: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:19:07,989: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:19:07,993: None
[DEBUG]2025-06-25 15:19:07,993: None
[DEBUG]2025-06-25 15:19:07,994: None
[DEBUG]2025-06-25 15:19:07,994: None
[DEBUG]2025-06-25 15:19:07,994: None
[DEBUG]2025-06-25 15:19:07,995: None
[DEBUG]2025-06-25 15:19:07,995: None
[DEBUG]2025-06-25 15:19:07,995: None
[DEBUG]2025-06-25 15:19:07,995: None
[DEBUG]2025-06-25 15:19:07,996: None
[DEBUG]2025-06-25 15:19:07,996: None
[DEBUG]2025-06-25 15:19:07,996: None
[DEBUG]2025-06-25 15:19:07,996: None
[DEBUG]2025-06-25 15:19:07,996: None
[DEBUG]2025-06-25 15:19:07,997: None
[DEBUG]2025-06-25 15:19:07,997: None
[DEBUG]2025-06-25 15:19:07,997: None
[DEBUG]2025-06-25 15:19:07,997: None
[DEBUG]2025-06-25 15:19:07,997: None
[DEBUG]2025-06-25 15:19:07,997: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,998: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:07,999: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,000: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,001: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,002: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,003: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,004: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,005: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,006: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,007: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,008: None
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,009: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,010: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,011: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:19:08,013: None
[DEBUG]2025-06-25 15:20:02,055: <re.Match object; span=(1081, 1840), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:20:02,055: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'FR', 'FL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:20:02,055: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"FR",
	"FL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:20:02,060: None
[DEBUG]2025-06-25 15:20:02,060: None
[DEBUG]2025-06-25 15:20:02,061: None
[DEBUG]2025-06-25 15:20:02,061: None
[DEBUG]2025-06-25 15:20:02,061: None
[DEBUG]2025-06-25 15:20:02,062: None
[DEBUG]2025-06-25 15:20:02,062: None
[DEBUG]2025-06-25 15:20:02,062: None
[DEBUG]2025-06-25 15:20:02,062: None
[DEBUG]2025-06-25 15:20:02,063: None
[DEBUG]2025-06-25 15:20:02,063: None
[DEBUG]2025-06-25 15:20:02,063: None
[DEBUG]2025-06-25 15:20:02,063: None
[DEBUG]2025-06-25 15:20:02,063: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,064: None
[DEBUG]2025-06-25 15:20:02,065: None
[DEBUG]2025-06-25 15:20:02,065: None
[DEBUG]2025-06-25 15:20:02,065: None
[DEBUG]2025-06-25 15:20:02,065: None
[DEBUG]2025-06-25 15:20:02,065: None
[DEBUG]2025-06-25 15:20:02,065: None
[DEBUG]2025-06-25 15:20:02,065: None
[DEBUG]2025-06-25 15:20:02,065: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,066: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,067: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,069: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,070: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,071: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,072: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,073: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,074: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,075: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,076: None
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,077: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,079: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:02,080: None
[DEBUG]2025-06-25 15:20:43,287: <re.Match object; span=(1081, 1838), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:20:43,287: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:20:43,287: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:20:43,293: None
[DEBUG]2025-06-25 15:20:43,293: None
[DEBUG]2025-06-25 15:20:43,294: None
[DEBUG]2025-06-25 15:20:43,294: None
[DEBUG]2025-06-25 15:20:43,294: None
[DEBUG]2025-06-25 15:20:43,295: None
[DEBUG]2025-06-25 15:20:43,295: None
[DEBUG]2025-06-25 15:20:43,295: None
[DEBUG]2025-06-25 15:20:43,295: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,296: None
[DEBUG]2025-06-25 15:20:43,297: None
[DEBUG]2025-06-25 15:20:43,297: None
[DEBUG]2025-06-25 15:20:43,297: None
[DEBUG]2025-06-25 15:20:43,297: None
[DEBUG]2025-06-25 15:20:43,297: None
[DEBUG]2025-06-25 15:20:43,297: None
[DEBUG]2025-06-25 15:20:43,297: None
[DEBUG]2025-06-25 15:20:43,299: None
[DEBUG]2025-06-25 15:20:43,299: None
[DEBUG]2025-06-25 15:20:43,299: None
[DEBUG]2025-06-25 15:20:43,299: None
[DEBUG]2025-06-25 15:20:43,299: None
[DEBUG]2025-06-25 15:20:43,299: None
[DEBUG]2025-06-25 15:20:43,299: None
[DEBUG]2025-06-25 15:20:43,299: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,300: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,302: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,303: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,304: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,306: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,308: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,310: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,311: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,312: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,313: None
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,314: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,315: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,317: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,318: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:20:43,319: None
[DEBUG]2025-06-25 15:21:34,998: <re.Match object; span=(1081, 1836), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:21:34,998: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'FR', 'FL', 'BR', 'BL', 'NB', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:21:34,999: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NB",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:21:35,002: None
[DEBUG]2025-06-25 15:21:35,002: None
[DEBUG]2025-06-25 15:21:35,003: None
[DEBUG]2025-06-25 15:21:35,003: None
[DEBUG]2025-06-25 15:21:35,003: None
[DEBUG]2025-06-25 15:21:35,004: None
[DEBUG]2025-06-25 15:21:35,004: None
[DEBUG]2025-06-25 15:21:35,004: None
[DEBUG]2025-06-25 15:21:35,004: None
[DEBUG]2025-06-25 15:21:35,005: None
[DEBUG]2025-06-25 15:21:35,005: None
[DEBUG]2025-06-25 15:21:35,005: None
[DEBUG]2025-06-25 15:21:35,005: None
[DEBUG]2025-06-25 15:21:35,005: None
[DEBUG]2025-06-25 15:21:35,006: None
[DEBUG]2025-06-25 15:21:35,006: None
[DEBUG]2025-06-25 15:21:35,006: None
[DEBUG]2025-06-25 15:21:35,006: None
[DEBUG]2025-06-25 15:21:35,006: None
[DEBUG]2025-06-25 15:21:35,006: None
[DEBUG]2025-06-25 15:21:35,007: None
[DEBUG]2025-06-25 15:21:35,007: None
[DEBUG]2025-06-25 15:21:35,007: None
[DEBUG]2025-06-25 15:21:35,007: None
[DEBUG]2025-06-25 15:21:35,007: None
[DEBUG]2025-06-25 15:21:35,007: None
[DEBUG]2025-06-25 15:21:35,007: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,008: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,009: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,010: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,011: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,012: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,013: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,014: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: None
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,015: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,016: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,017: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:21:35,018: None
[DEBUG]2025-06-25 15:22:41,120: <re.Match object; span=(1081, 1838), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:22:41,121: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:22:41,121: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:22:41,124: None
[DEBUG]2025-06-25 15:22:41,124: None
[DEBUG]2025-06-25 15:22:41,124: None
[DEBUG]2025-06-25 15:22:41,124: None
[DEBUG]2025-06-25 15:22:41,124: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,125: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,126: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,127: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,128: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,130: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,131: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,132: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,133: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,134: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,135: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,136: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,137: None
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,138: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: ['InitPState', 'FirstState']
[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,139: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,141: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,142: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:22:41,146: None
[DEBUG]2025-06-25 15:48:38,215: <re.Match object; span=(1081, 1838), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:48:38,215: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:48:38,215: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:48:38,218: None
[DEBUG]2025-06-25 15:48:38,218: None
[DEBUG]2025-06-25 15:48:38,219: None
[DEBUG]2025-06-25 15:48:38,219: None
[DEBUG]2025-06-25 15:48:38,219: None
[DEBUG]2025-06-25 15:48:38,219: None
[DEBUG]2025-06-25 15:48:38,219: None
[DEBUG]2025-06-25 15:48:38,219: None
[DEBUG]2025-06-25 15:48:38,219: None
[DEBUG]2025-06-25 15:48:38,220: None
[DEBUG]2025-06-25 15:48:38,220: None
[DEBUG]2025-06-25 15:48:38,220: None
[DEBUG]2025-06-25 15:48:38,220: None
[DEBUG]2025-06-25 15:48:38,220: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,221: None
[DEBUG]2025-06-25 15:48:38,222: None
[DEBUG]2025-06-25 15:48:38,222: None
[DEBUG]2025-06-25 15:48:38,222: None
[DEBUG]2025-06-25 15:48:38,222: None
[DEBUG]2025-06-25 15:48:38,222: None
[DEBUG]2025-06-25 15:48:38,222: None
[DEBUG]2025-06-25 15:48:38,222: None
[DEBUG]2025-06-25 15:48:38,222: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,223: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,224: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,225: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,226: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,227: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,228: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,229: None
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,230: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,232: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,233: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:48:38,235: None
[DEBUG]2025-06-25 15:50:14,053: <re.Match object; span=(1081, 1838), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 15:50:14,054: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 15:50:14,054: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 15:50:14,056: None
[DEBUG]2025-06-25 15:50:14,056: None
[DEBUG]2025-06-25 15:50:14,057: None
[DEBUG]2025-06-25 15:50:14,057: None
[DEBUG]2025-06-25 15:50:14,057: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,058: None
[DEBUG]2025-06-25 15:50:14,059: None
[DEBUG]2025-06-25 15:50:14,059: None
[DEBUG]2025-06-25 15:50:14,059: None
[DEBUG]2025-06-25 15:50:14,059: None
[DEBUG]2025-06-25 15:50:14,059: None
[DEBUG]2025-06-25 15:50:14,059: None
[DEBUG]2025-06-25 15:50:14,060: None
[DEBUG]2025-06-25 15:50:14,060: None
[DEBUG]2025-06-25 15:50:14,060: None
[DEBUG]2025-06-25 15:50:14,060: None
[DEBUG]2025-06-25 15:50:14,060: None
[DEBUG]2025-06-25 15:50:14,060: None
[DEBUG]2025-06-25 15:50:14,060: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,061: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,062: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,063: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,064: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,065: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,066: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,067: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,068: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,069: None
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,070: <re.Match object; span=(2052, 2125), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,071: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,073: ['InitPSubState', 'SubFirstState']
[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,074: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,075: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 15:50:14,076: None
[DEBUG]2025-06-25 16:32:59,003: <re.Match object; span=(1081, 1838), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 16:32:59,004: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FRONT', 'BACK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 16:32:59,004: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FRONT",
	"BACK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 16:32:59,009: None
[DEBUG]2025-06-25 16:32:59,009: None
[DEBUG]2025-06-25 16:32:59,010: None
[DEBUG]2025-06-25 16:32:59,010: None
[DEBUG]2025-06-25 16:32:59,010: None
[DEBUG]2025-06-25 16:32:59,011: None
[DEBUG]2025-06-25 16:32:59,011: None
[DEBUG]2025-06-25 16:32:59,011: None
[DEBUG]2025-06-25 16:32:59,011: None
[DEBUG]2025-06-25 16:32:59,013: None
[DEBUG]2025-06-25 16:32:59,013: None
[DEBUG]2025-06-25 16:32:59,013: None
[DEBUG]2025-06-25 16:32:59,013: None
[DEBUG]2025-06-25 16:32:59,013: None
[DEBUG]2025-06-25 16:32:59,014: None
[DEBUG]2025-06-25 16:32:59,014: None
[DEBUG]2025-06-25 16:32:59,014: None
[DEBUG]2025-06-25 16:32:59,014: None
[DEBUG]2025-06-25 16:32:59,014: None
[DEBUG]2025-06-25 16:32:59,014: None
[DEBUG]2025-06-25 16:32:59,015: None
[DEBUG]2025-06-25 16:32:59,015: None
[DEBUG]2025-06-25 16:32:59,015: None
[DEBUG]2025-06-25 16:32:59,015: None
[DEBUG]2025-06-25 16:32:59,015: None
[DEBUG]2025-06-25 16:32:59,015: None
[DEBUG]2025-06-25 16:32:59,015: None
[DEBUG]2025-06-25 16:32:59,016: None
[DEBUG]2025-06-25 16:32:59,016: None
[DEBUG]2025-06-25 16:32:59,016: None
[DEBUG]2025-06-25 16:32:59,016: None
[DEBUG]2025-06-25 16:32:59,016: None
[DEBUG]2025-06-25 16:32:59,016: None
[DEBUG]2025-06-25 16:32:59,016: None
[DEBUG]2025-06-25 16:32:59,016: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,017: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,019: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,020: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,021: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,024: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,025: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,027: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,028: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,029: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,030: None
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,032: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,033: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,034: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,036: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,038: None
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,040: <re.Match object; span=(1609, 1715), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,041: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:32:59,042: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,399: <re.Match object; span=(1081, 1826), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 16:48:17,399: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NO_BUMPER', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 16:48:17,399: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NO_BUMPER",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 16:48:17,402: None
[DEBUG]2025-06-25 16:48:17,402: None
[DEBUG]2025-06-25 16:48:17,403: None
[DEBUG]2025-06-25 16:48:17,403: None
[DEBUG]2025-06-25 16:48:17,403: None
[DEBUG]2025-06-25 16:48:17,403: None
[DEBUG]2025-06-25 16:48:17,403: None
[DEBUG]2025-06-25 16:48:17,403: None
[DEBUG]2025-06-25 16:48:17,403: None
[DEBUG]2025-06-25 16:48:17,404: None
[DEBUG]2025-06-25 16:48:17,404: None
[DEBUG]2025-06-25 16:48:17,404: None
[DEBUG]2025-06-25 16:48:17,404: None
[DEBUG]2025-06-25 16:48:17,404: None
[DEBUG]2025-06-25 16:48:17,405: None
[DEBUG]2025-06-25 16:48:17,405: None
[DEBUG]2025-06-25 16:48:17,405: None
[DEBUG]2025-06-25 16:48:17,405: None
[DEBUG]2025-06-25 16:48:17,405: None
[DEBUG]2025-06-25 16:48:17,405: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,406: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,407: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,408: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,409: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,410: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,411: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,413: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,415: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,416: None
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,417: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,418: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,419: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,420: None
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,421: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:17,422: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:40,990: <re.Match object; span=(1081, 1826), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 16:48:40,990: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NO_BUMPER', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 16:48:40,990: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NO_BUMPER",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 16:48:40,993: None
[DEBUG]2025-06-25 16:48:40,993: None
[DEBUG]2025-06-25 16:48:40,993: None
[DEBUG]2025-06-25 16:48:40,993: None
[DEBUG]2025-06-25 16:48:40,993: None
[DEBUG]2025-06-25 16:48:40,994: None
[DEBUG]2025-06-25 16:48:40,994: None
[DEBUG]2025-06-25 16:48:40,994: None
[DEBUG]2025-06-25 16:48:40,994: None
[DEBUG]2025-06-25 16:48:40,995: None
[DEBUG]2025-06-25 16:48:40,995: None
[DEBUG]2025-06-25 16:48:40,995: None
[DEBUG]2025-06-25 16:48:40,995: None
[DEBUG]2025-06-25 16:48:40,995: None
[DEBUG]2025-06-25 16:48:40,996: None
[DEBUG]2025-06-25 16:48:40,996: None
[DEBUG]2025-06-25 16:48:40,996: None
[DEBUG]2025-06-25 16:48:40,996: None
[DEBUG]2025-06-25 16:48:40,996: None
[DEBUG]2025-06-25 16:48:40,996: None
[DEBUG]2025-06-25 16:48:40,997: None
[DEBUG]2025-06-25 16:48:40,997: None
[DEBUG]2025-06-25 16:48:40,997: None
[DEBUG]2025-06-25 16:48:40,997: None
[DEBUG]2025-06-25 16:48:40,997: None
[DEBUG]2025-06-25 16:48:40,997: None
[DEBUG]2025-06-25 16:48:40,997: None
[DEBUG]2025-06-25 16:48:40,998: None
[DEBUG]2025-06-25 16:48:40,998: None
[DEBUG]2025-06-25 16:48:40,998: None
[DEBUG]2025-06-25 16:48:40,998: None
[DEBUG]2025-06-25 16:48:40,998: None
[DEBUG]2025-06-25 16:48:40,998: None
[DEBUG]2025-06-25 16:48:40,998: None
[DEBUG]2025-06-25 16:48:40,998: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:40,999: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,000: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,001: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,002: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,003: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,004: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,005: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,006: None
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,007: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,008: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,009: None
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,010: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:48:41,011: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,875: <re.Match object; span=(1081, 1826), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-25 16:49:23,876: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NO_BUMPER', 'NUMBEROFEVENTS']
[DEBUG]2025-06-25 16:49:23,876: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NO_BUMPER",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-25 16:49:23,881: None
[DEBUG]2025-06-25 16:49:23,881: None
[DEBUG]2025-06-25 16:49:23,882: None
[DEBUG]2025-06-25 16:49:23,882: None
[DEBUG]2025-06-25 16:49:23,882: None
[DEBUG]2025-06-25 16:49:23,884: None
[DEBUG]2025-06-25 16:49:23,884: None
[DEBUG]2025-06-25 16:49:23,884: None
[DEBUG]2025-06-25 16:49:23,884: None
[DEBUG]2025-06-25 16:49:23,886: None
[DEBUG]2025-06-25 16:49:23,886: None
[DEBUG]2025-06-25 16:49:23,886: None
[DEBUG]2025-06-25 16:49:23,886: None
[DEBUG]2025-06-25 16:49:23,886: None
[DEBUG]2025-06-25 16:49:23,887: None
[DEBUG]2025-06-25 16:49:23,887: None
[DEBUG]2025-06-25 16:49:23,887: None
[DEBUG]2025-06-25 16:49:23,887: None
[DEBUG]2025-06-25 16:49:23,887: None
[DEBUG]2025-06-25 16:49:23,887: None
[DEBUG]2025-06-25 16:49:23,889: None
[DEBUG]2025-06-25 16:49:23,889: None
[DEBUG]2025-06-25 16:49:23,889: None
[DEBUG]2025-06-25 16:49:23,889: None
[DEBUG]2025-06-25 16:49:23,889: None
[DEBUG]2025-06-25 16:49:23,889: None
[DEBUG]2025-06-25 16:49:23,889: None
[DEBUG]2025-06-25 16:49:23,891: None
[DEBUG]2025-06-25 16:49:23,891: None
[DEBUG]2025-06-25 16:49:23,891: None
[DEBUG]2025-06-25 16:49:23,891: None
[DEBUG]2025-06-25 16:49:23,891: None
[DEBUG]2025-06-25 16:49:23,891: None
[DEBUG]2025-06-25 16:49:23,891: None
[DEBUG]2025-06-25 16:49:23,891: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,893: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,896: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,898: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,899: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,901: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,903: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,905: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,908: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,911: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,913: None
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,914: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,915: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,916: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,919: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,920: None
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,922: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,923: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-25 16:49:23,924: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,315: <re.Match object; span=(1081, 1803), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:10:07,316: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:10:07,316: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:10:07,319: None
[DEBUG]2025-06-26 09:10:07,319: None
[DEBUG]2025-06-26 09:10:07,320: None
[DEBUG]2025-06-26 09:10:07,320: None
[DEBUG]2025-06-26 09:10:07,320: None
[DEBUG]2025-06-26 09:10:07,321: None
[DEBUG]2025-06-26 09:10:07,321: None
[DEBUG]2025-06-26 09:10:07,321: None
[DEBUG]2025-06-26 09:10:07,321: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,322: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,323: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,324: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,325: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,326: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,327: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,328: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,329: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,330: None
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,331: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,332: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,333: None
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,336: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:07,337: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,311: <re.Match object; span=(1081, 1811), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:10:47,312: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:10:47,312: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:10:47,315: None
[DEBUG]2025-06-26 09:10:47,315: None
[DEBUG]2025-06-26 09:10:47,316: None
[DEBUG]2025-06-26 09:10:47,316: None
[DEBUG]2025-06-26 09:10:47,316: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,317: None
[DEBUG]2025-06-26 09:10:47,318: None
[DEBUG]2025-06-26 09:10:47,318: None
[DEBUG]2025-06-26 09:10:47,318: None
[DEBUG]2025-06-26 09:10:47,318: None
[DEBUG]2025-06-26 09:10:47,318: None
[DEBUG]2025-06-26 09:10:47,318: None
[DEBUG]2025-06-26 09:10:47,319: None
[DEBUG]2025-06-26 09:10:47,319: None
[DEBUG]2025-06-26 09:10:47,319: None
[DEBUG]2025-06-26 09:10:47,319: None
[DEBUG]2025-06-26 09:10:47,319: None
[DEBUG]2025-06-26 09:10:47,319: None
[DEBUG]2025-06-26 09:10:47,319: None
[DEBUG]2025-06-26 09:10:47,320: None
[DEBUG]2025-06-26 09:10:47,320: None
[DEBUG]2025-06-26 09:10:47,320: None
[DEBUG]2025-06-26 09:10:47,320: None
[DEBUG]2025-06-26 09:10:47,320: None
[DEBUG]2025-06-26 09:10:47,320: None
[DEBUG]2025-06-26 09:10:47,320: None
[DEBUG]2025-06-26 09:10:47,320: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,321: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,322: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,323: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,324: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,325: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,326: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,327: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: None
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,328: <re.Match object; span=(2046, 2119), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,329: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,330: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,331: None
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,332: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,333: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,334: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:10:47,335: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,187: <re.Match object; span=(1081, 1811), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:11:21,188: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:11:21,188: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:11:21,191: None
[DEBUG]2025-06-26 09:11:21,191: None
[DEBUG]2025-06-26 09:11:21,192: None
[DEBUG]2025-06-26 09:11:21,192: None
[DEBUG]2025-06-26 09:11:21,192: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,193: None
[DEBUG]2025-06-26 09:11:21,194: None
[DEBUG]2025-06-26 09:11:21,194: None
[DEBUG]2025-06-26 09:11:21,194: None
[DEBUG]2025-06-26 09:11:21,194: None
[DEBUG]2025-06-26 09:11:21,194: None
[DEBUG]2025-06-26 09:11:21,194: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,195: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,196: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,197: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,198: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,199: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,200: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,201: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,202: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,203: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,204: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: None
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,205: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,206: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,207: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: None
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,208: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,209: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: <re.Match object; span=(1561, 1656), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,210: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:11:21,211: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,770: <re.Match object; span=(1081, 1811), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:12:16,771: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:12:16,771: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:12:16,775: None
[DEBUG]2025-06-26 09:12:16,775: None
[DEBUG]2025-06-26 09:12:16,776: None
[DEBUG]2025-06-26 09:12:16,776: None
[DEBUG]2025-06-26 09:12:16,776: None
[DEBUG]2025-06-26 09:12:16,777: None
[DEBUG]2025-06-26 09:12:16,777: None
[DEBUG]2025-06-26 09:12:16,777: None
[DEBUG]2025-06-26 09:12:16,777: None
[DEBUG]2025-06-26 09:12:16,778: None
[DEBUG]2025-06-26 09:12:16,778: None
[DEBUG]2025-06-26 09:12:16,778: None
[DEBUG]2025-06-26 09:12:16,778: None
[DEBUG]2025-06-26 09:12:16,778: None
[DEBUG]2025-06-26 09:12:16,779: None
[DEBUG]2025-06-26 09:12:16,779: None
[DEBUG]2025-06-26 09:12:16,779: None
[DEBUG]2025-06-26 09:12:16,779: None
[DEBUG]2025-06-26 09:12:16,779: None
[DEBUG]2025-06-26 09:12:16,779: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,780: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,781: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,782: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,783: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,784: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,786: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,787: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,788: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,789: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,790: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,791: None
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,792: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,793: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,795: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,796: None
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,797: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,798: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,799: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,800: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:16,801: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,736: <re.Match object; span=(1081, 1811), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:12:55,736: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:12:55,736: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:12:55,740: None
[DEBUG]2025-06-26 09:12:55,740: None
[DEBUG]2025-06-26 09:12:55,741: None
[DEBUG]2025-06-26 09:12:55,741: None
[DEBUG]2025-06-26 09:12:55,741: None
[DEBUG]2025-06-26 09:12:55,743: None
[DEBUG]2025-06-26 09:12:55,743: None
[DEBUG]2025-06-26 09:12:55,743: None
[DEBUG]2025-06-26 09:12:55,743: None
[DEBUG]2025-06-26 09:12:55,744: None
[DEBUG]2025-06-26 09:12:55,744: None
[DEBUG]2025-06-26 09:12:55,744: None
[DEBUG]2025-06-26 09:12:55,744: None
[DEBUG]2025-06-26 09:12:55,744: None
[DEBUG]2025-06-26 09:12:55,745: None
[DEBUG]2025-06-26 09:12:55,745: None
[DEBUG]2025-06-26 09:12:55,745: None
[DEBUG]2025-06-26 09:12:55,745: None
[DEBUG]2025-06-26 09:12:55,745: None
[DEBUG]2025-06-26 09:12:55,745: None
[DEBUG]2025-06-26 09:12:55,746: None
[DEBUG]2025-06-26 09:12:55,746: None
[DEBUG]2025-06-26 09:12:55,746: None
[DEBUG]2025-06-26 09:12:55,746: None
[DEBUG]2025-06-26 09:12:55,746: None
[DEBUG]2025-06-26 09:12:55,746: None
[DEBUG]2025-06-26 09:12:55,746: None
[DEBUG]2025-06-26 09:12:55,747: None
[DEBUG]2025-06-26 09:12:55,747: None
[DEBUG]2025-06-26 09:12:55,747: None
[DEBUG]2025-06-26 09:12:55,747: None
[DEBUG]2025-06-26 09:12:55,747: None
[DEBUG]2025-06-26 09:12:55,747: None
[DEBUG]2025-06-26 09:12:55,747: None
[DEBUG]2025-06-26 09:12:55,747: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,748: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,750: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,751: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,753: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,755: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,757: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,759: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,760: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,762: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,764: None
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: <re.Match object; span=(2067, 2140), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,766: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,767: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,769: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,770: None
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,771: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,774: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:12:55,775: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,261: <re.Match object; span=(1081, 1811), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:26:32,261: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:26:32,262: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:26:32,265: None
[DEBUG]2025-06-26 09:26:32,265: None
[DEBUG]2025-06-26 09:26:32,266: None
[DEBUG]2025-06-26 09:26:32,266: None
[DEBUG]2025-06-26 09:26:32,266: None
[DEBUG]2025-06-26 09:26:32,267: None
[DEBUG]2025-06-26 09:26:32,267: None
[DEBUG]2025-06-26 09:26:32,267: None
[DEBUG]2025-06-26 09:26:32,267: None
[DEBUG]2025-06-26 09:26:32,268: None
[DEBUG]2025-06-26 09:26:32,268: None
[DEBUG]2025-06-26 09:26:32,268: None
[DEBUG]2025-06-26 09:26:32,268: None
[DEBUG]2025-06-26 09:26:32,268: None
[DEBUG]2025-06-26 09:26:32,269: None
[DEBUG]2025-06-26 09:26:32,269: None
[DEBUG]2025-06-26 09:26:32,269: None
[DEBUG]2025-06-26 09:26:32,269: None
[DEBUG]2025-06-26 09:26:32,269: None
[DEBUG]2025-06-26 09:26:32,269: None
[DEBUG]2025-06-26 09:26:32,270: None
[DEBUG]2025-06-26 09:26:32,270: None
[DEBUG]2025-06-26 09:26:32,270: None
[DEBUG]2025-06-26 09:26:32,270: None
[DEBUG]2025-06-26 09:26:32,270: None
[DEBUG]2025-06-26 09:26:32,270: None
[DEBUG]2025-06-26 09:26:32,270: None
[DEBUG]2025-06-26 09:26:32,272: None
[DEBUG]2025-06-26 09:26:32,272: None
[DEBUG]2025-06-26 09:26:32,272: None
[DEBUG]2025-06-26 09:26:32,272: None
[DEBUG]2025-06-26 09:26:32,272: None
[DEBUG]2025-06-26 09:26:32,272: None
[DEBUG]2025-06-26 09:26:32,272: None
[DEBUG]2025-06-26 09:26:32,272: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,273: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,274: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,276: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,277: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,278: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,279: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,280: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,281: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,282: None
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,283: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,284: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,285: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: None
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,286: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,287: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,288: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:26:32,289: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,505: <re.Match object; span=(1081, 1811), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:30:08,505: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:30:08,505: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:30:08,509: None
[DEBUG]2025-06-26 09:30:08,509: None
[DEBUG]2025-06-26 09:30:08,510: None
[DEBUG]2025-06-26 09:30:08,510: None
[DEBUG]2025-06-26 09:30:08,510: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,511: None
[DEBUG]2025-06-26 09:30:08,512: None
[DEBUG]2025-06-26 09:30:08,512: None
[DEBUG]2025-06-26 09:30:08,512: None
[DEBUG]2025-06-26 09:30:08,512: None
[DEBUG]2025-06-26 09:30:08,512: None
[DEBUG]2025-06-26 09:30:08,512: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,513: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,514: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,515: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,516: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,517: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,518: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,519: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,520: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,521: None
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,522: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,523: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,524: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: None
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,525: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,526: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,527: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:30:08,528: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,281: <re.Match object; span=(1081, 1762), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:49:04,282: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:49:04,282: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:49:04,287: None
[DEBUG]2025-06-26 09:49:04,287: None
[DEBUG]2025-06-26 09:49:04,288: None
[DEBUG]2025-06-26 09:49:04,288: None
[DEBUG]2025-06-26 09:49:04,288: None
[DEBUG]2025-06-26 09:49:04,289: None
[DEBUG]2025-06-26 09:49:04,289: None
[DEBUG]2025-06-26 09:49:04,289: None
[DEBUG]2025-06-26 09:49:04,289: None
[DEBUG]2025-06-26 09:49:04,290: None
[DEBUG]2025-06-26 09:49:04,290: None
[DEBUG]2025-06-26 09:49:04,290: None
[DEBUG]2025-06-26 09:49:04,290: None
[DEBUG]2025-06-26 09:49:04,290: None
[DEBUG]2025-06-26 09:49:04,291: None
[DEBUG]2025-06-26 09:49:04,291: None
[DEBUG]2025-06-26 09:49:04,291: None
[DEBUG]2025-06-26 09:49:04,291: None
[DEBUG]2025-06-26 09:49:04,291: None
[DEBUG]2025-06-26 09:49:04,291: None
[DEBUG]2025-06-26 09:49:04,292: None
[DEBUG]2025-06-26 09:49:04,292: None
[DEBUG]2025-06-26 09:49:04,292: None
[DEBUG]2025-06-26 09:49:04,292: None
[DEBUG]2025-06-26 09:49:04,292: None
[DEBUG]2025-06-26 09:49:04,292: None
[DEBUG]2025-06-26 09:49:04,292: None
[DEBUG]2025-06-26 09:49:04,293: None
[DEBUG]2025-06-26 09:49:04,293: None
[DEBUG]2025-06-26 09:49:04,293: None
[DEBUG]2025-06-26 09:49:04,293: None
[DEBUG]2025-06-26 09:49:04,293: None
[DEBUG]2025-06-26 09:49:04,293: None
[DEBUG]2025-06-26 09:49:04,293: None
[DEBUG]2025-06-26 09:49:04,293: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,294: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,295: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,296: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,297: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,299: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,301: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,303: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,304: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,305: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,306: None
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,307: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,308: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,309: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,310: None
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,311: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,313: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,314: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:49:04,315: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,362: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 09:58:40,362: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 09:58:40,362: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 09:58:40,367: None
[DEBUG]2025-06-26 09:58:40,367: None
[DEBUG]2025-06-26 09:58:40,367: None
[DEBUG]2025-06-26 09:58:40,367: None
[DEBUG]2025-06-26 09:58:40,367: None
[DEBUG]2025-06-26 09:58:40,368: None
[DEBUG]2025-06-26 09:58:40,368: None
[DEBUG]2025-06-26 09:58:40,368: None
[DEBUG]2025-06-26 09:58:40,368: None
[DEBUG]2025-06-26 09:58:40,369: None
[DEBUG]2025-06-26 09:58:40,369: None
[DEBUG]2025-06-26 09:58:40,369: None
[DEBUG]2025-06-26 09:58:40,369: None
[DEBUG]2025-06-26 09:58:40,369: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,370: None
[DEBUG]2025-06-26 09:58:40,371: None
[DEBUG]2025-06-26 09:58:40,371: None
[DEBUG]2025-06-26 09:58:40,371: None
[DEBUG]2025-06-26 09:58:40,371: None
[DEBUG]2025-06-26 09:58:40,371: None
[DEBUG]2025-06-26 09:58:40,371: None
[DEBUG]2025-06-26 09:58:40,371: None
[DEBUG]2025-06-26 09:58:40,371: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,372: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,373: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,374: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,375: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,376: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,377: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,378: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,379: None
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,380: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,381: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,382: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: None
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,383: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,384: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,385: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 09:58:40,386: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,101: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 10:00:54,102: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 10:00:54,102: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 10:00:54,107: None
[DEBUG]2025-06-26 10:00:54,107: None
[DEBUG]2025-06-26 10:00:54,109: None
[DEBUG]2025-06-26 10:00:54,109: None
[DEBUG]2025-06-26 10:00:54,109: None
[DEBUG]2025-06-26 10:00:54,110: None
[DEBUG]2025-06-26 10:00:54,110: None
[DEBUG]2025-06-26 10:00:54,110: None
[DEBUG]2025-06-26 10:00:54,110: None
[DEBUG]2025-06-26 10:00:54,112: None
[DEBUG]2025-06-26 10:00:54,112: None
[DEBUG]2025-06-26 10:00:54,112: None
[DEBUG]2025-06-26 10:00:54,112: None
[DEBUG]2025-06-26 10:00:54,112: None
[DEBUG]2025-06-26 10:00:54,113: None
[DEBUG]2025-06-26 10:00:54,113: None
[DEBUG]2025-06-26 10:00:54,113: None
[DEBUG]2025-06-26 10:00:54,113: None
[DEBUG]2025-06-26 10:00:54,113: None
[DEBUG]2025-06-26 10:00:54,113: None
[DEBUG]2025-06-26 10:00:54,115: None
[DEBUG]2025-06-26 10:00:54,115: None
[DEBUG]2025-06-26 10:00:54,115: None
[DEBUG]2025-06-26 10:00:54,115: None
[DEBUG]2025-06-26 10:00:54,115: None
[DEBUG]2025-06-26 10:00:54,115: None
[DEBUG]2025-06-26 10:00:54,115: None
[DEBUG]2025-06-26 10:00:54,117: None
[DEBUG]2025-06-26 10:00:54,117: None
[DEBUG]2025-06-26 10:00:54,117: None
[DEBUG]2025-06-26 10:00:54,117: None
[DEBUG]2025-06-26 10:00:54,117: None
[DEBUG]2025-06-26 10:00:54,117: None
[DEBUG]2025-06-26 10:00:54,117: None
[DEBUG]2025-06-26 10:00:54,117: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,119: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,121: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,123: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,124: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,126: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,128: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,129: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,132: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,133: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,135: None
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,136: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,137: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,138: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,139: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,140: None
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,141: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,142: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,143: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,144: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,145: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:00:54,146: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,929: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 10:02:03,929: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 10:02:03,930: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 10:02:03,934: None
[DEBUG]2025-06-26 10:02:03,934: None
[DEBUG]2025-06-26 10:02:03,935: None
[DEBUG]2025-06-26 10:02:03,935: None
[DEBUG]2025-06-26 10:02:03,935: None
[DEBUG]2025-06-26 10:02:03,936: None
[DEBUG]2025-06-26 10:02:03,936: None
[DEBUG]2025-06-26 10:02:03,936: None
[DEBUG]2025-06-26 10:02:03,936: None
[DEBUG]2025-06-26 10:02:03,937: None
[DEBUG]2025-06-26 10:02:03,937: None
[DEBUG]2025-06-26 10:02:03,937: None
[DEBUG]2025-06-26 10:02:03,937: None
[DEBUG]2025-06-26 10:02:03,937: None
[DEBUG]2025-06-26 10:02:03,938: None
[DEBUG]2025-06-26 10:02:03,938: None
[DEBUG]2025-06-26 10:02:03,938: None
[DEBUG]2025-06-26 10:02:03,938: None
[DEBUG]2025-06-26 10:02:03,938: None
[DEBUG]2025-06-26 10:02:03,938: None
[DEBUG]2025-06-26 10:02:03,940: None
[DEBUG]2025-06-26 10:02:03,940: None
[DEBUG]2025-06-26 10:02:03,940: None
[DEBUG]2025-06-26 10:02:03,940: None
[DEBUG]2025-06-26 10:02:03,940: None
[DEBUG]2025-06-26 10:02:03,940: None
[DEBUG]2025-06-26 10:02:03,940: None
[DEBUG]2025-06-26 10:02:03,941: None
[DEBUG]2025-06-26 10:02:03,941: None
[DEBUG]2025-06-26 10:02:03,941: None
[DEBUG]2025-06-26 10:02:03,941: None
[DEBUG]2025-06-26 10:02:03,941: None
[DEBUG]2025-06-26 10:02:03,941: None
[DEBUG]2025-06-26 10:02:03,941: None
[DEBUG]2025-06-26 10:02:03,941: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,942: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,943: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,944: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,945: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,946: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,947: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,948: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,949: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,950: None
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,951: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,952: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,953: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,954: None
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,955: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,956: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,958: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,960: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:02:03,961: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,416: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 10:03:01,417: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 10:03:01,417: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 10:03:01,422: None
[DEBUG]2025-06-26 10:03:01,422: None
[DEBUG]2025-06-26 10:03:01,423: None
[DEBUG]2025-06-26 10:03:01,423: None
[DEBUG]2025-06-26 10:03:01,423: None
[DEBUG]2025-06-26 10:03:01,424: None
[DEBUG]2025-06-26 10:03:01,424: None
[DEBUG]2025-06-26 10:03:01,424: None
[DEBUG]2025-06-26 10:03:01,424: None
[DEBUG]2025-06-26 10:03:01,426: None
[DEBUG]2025-06-26 10:03:01,426: None
[DEBUG]2025-06-26 10:03:01,426: None
[DEBUG]2025-06-26 10:03:01,426: None
[DEBUG]2025-06-26 10:03:01,426: None
[DEBUG]2025-06-26 10:03:01,427: None
[DEBUG]2025-06-26 10:03:01,427: None
[DEBUG]2025-06-26 10:03:01,427: None
[DEBUG]2025-06-26 10:03:01,427: None
[DEBUG]2025-06-26 10:03:01,427: None
[DEBUG]2025-06-26 10:03:01,427: None
[DEBUG]2025-06-26 10:03:01,429: None
[DEBUG]2025-06-26 10:03:01,429: None
[DEBUG]2025-06-26 10:03:01,429: None
[DEBUG]2025-06-26 10:03:01,429: None
[DEBUG]2025-06-26 10:03:01,429: None
[DEBUG]2025-06-26 10:03:01,429: None
[DEBUG]2025-06-26 10:03:01,429: None
[DEBUG]2025-06-26 10:03:01,430: None
[DEBUG]2025-06-26 10:03:01,430: None
[DEBUG]2025-06-26 10:03:01,430: None
[DEBUG]2025-06-26 10:03:01,430: None
[DEBUG]2025-06-26 10:03:01,430: None
[DEBUG]2025-06-26 10:03:01,430: None
[DEBUG]2025-06-26 10:03:01,430: None
[DEBUG]2025-06-26 10:03:01,430: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,431: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,432: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,434: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,435: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,436: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,437: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,438: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,440: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,441: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,442: None
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,443: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,444: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,445: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,446: None
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,447: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,449: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:01,450: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,265: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 10:03:14,266: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 10:03:14,266: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 10:03:14,270: None
[DEBUG]2025-06-26 10:03:14,270: None
[DEBUG]2025-06-26 10:03:14,271: None
[DEBUG]2025-06-26 10:03:14,271: None
[DEBUG]2025-06-26 10:03:14,271: None
[DEBUG]2025-06-26 10:03:14,272: None
[DEBUG]2025-06-26 10:03:14,272: None
[DEBUG]2025-06-26 10:03:14,272: None
[DEBUG]2025-06-26 10:03:14,272: None
[DEBUG]2025-06-26 10:03:14,273: None
[DEBUG]2025-06-26 10:03:14,273: None
[DEBUG]2025-06-26 10:03:14,273: None
[DEBUG]2025-06-26 10:03:14,273: None
[DEBUG]2025-06-26 10:03:14,273: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,274: None
[DEBUG]2025-06-26 10:03:14,275: None
[DEBUG]2025-06-26 10:03:14,275: None
[DEBUG]2025-06-26 10:03:14,275: None
[DEBUG]2025-06-26 10:03:14,275: None
[DEBUG]2025-06-26 10:03:14,275: None
[DEBUG]2025-06-26 10:03:14,275: None
[DEBUG]2025-06-26 10:03:14,275: None
[DEBUG]2025-06-26 10:03:14,275: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,276: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,277: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,279: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,280: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,281: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,283: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,284: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,285: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,286: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,287: None
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,288: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,289: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,290: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: None
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,291: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,292: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,293: <re.Match object; span=(1580, 1675), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:03:14,294: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,660: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 10:18:03,660: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 10:18:03,660: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 10:18:03,663: None
[DEBUG]2025-06-26 10:18:03,663: None
[DEBUG]2025-06-26 10:18:03,664: None
[DEBUG]2025-06-26 10:18:03,664: None
[DEBUG]2025-06-26 10:18:03,664: None
[DEBUG]2025-06-26 10:18:03,665: None
[DEBUG]2025-06-26 10:18:03,665: None
[DEBUG]2025-06-26 10:18:03,665: None
[DEBUG]2025-06-26 10:18:03,665: None
[DEBUG]2025-06-26 10:18:03,666: None
[DEBUG]2025-06-26 10:18:03,666: None
[DEBUG]2025-06-26 10:18:03,666: None
[DEBUG]2025-06-26 10:18:03,666: None
[DEBUG]2025-06-26 10:18:03,666: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,667: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,668: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,669: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,670: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,671: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,672: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,673: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,674: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,675: None
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,676: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,677: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,678: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,679: None
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,680: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,681: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: <re.Match object; span=(1601, 1696), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,682: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:03,683: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,227: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 10:18:31,227: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 10:18:31,228: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 10:18:31,230: None
[DEBUG]2025-06-26 10:18:31,230: None
[DEBUG]2025-06-26 10:18:31,231: None
[DEBUG]2025-06-26 10:18:31,231: None
[DEBUG]2025-06-26 10:18:31,231: None
[DEBUG]2025-06-26 10:18:31,231: None
[DEBUG]2025-06-26 10:18:31,231: None
[DEBUG]2025-06-26 10:18:31,231: None
[DEBUG]2025-06-26 10:18:31,231: None
[DEBUG]2025-06-26 10:18:31,232: None
[DEBUG]2025-06-26 10:18:31,232: None
[DEBUG]2025-06-26 10:18:31,232: None
[DEBUG]2025-06-26 10:18:31,232: None
[DEBUG]2025-06-26 10:18:31,232: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,233: None
[DEBUG]2025-06-26 10:18:31,234: None
[DEBUG]2025-06-26 10:18:31,234: None
[DEBUG]2025-06-26 10:18:31,234: None
[DEBUG]2025-06-26 10:18:31,234: None
[DEBUG]2025-06-26 10:18:31,234: None
[DEBUG]2025-06-26 10:18:31,234: None
[DEBUG]2025-06-26 10:18:31,234: None
[DEBUG]2025-06-26 10:18:31,234: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,235: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,236: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,237: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,238: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,239: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,240: None
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,241: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,242: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,243: None
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,244: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,245: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 10:18:31,246: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,067: <re.Match object; span=(1081, 1768), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2025-06-26 13:33:32,067: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'LIGHT', 'DARK', 'FR', 'FL', 'BR', 'BL', 'NONE', 'NUMBEROFEVENTS']
[DEBUG]2025-06-26 13:33:32,068: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"LIGHT",
	"DARK",
	"FR",
	"FL",
	"BR",
	"BL",
	"NONE",
	"NUMBEROFEVENTS",
};


[DEBUG]2025-06-26 13:33:32,072: None
[DEBUG]2025-06-26 13:33:32,072: None
[DEBUG]2025-06-26 13:33:32,074: None
[DEBUG]2025-06-26 13:33:32,074: None
[DEBUG]2025-06-26 13:33:32,074: None
[DEBUG]2025-06-26 13:33:32,075: None
[DEBUG]2025-06-26 13:33:32,075: None
[DEBUG]2025-06-26 13:33:32,075: None
[DEBUG]2025-06-26 13:33:32,075: None
[DEBUG]2025-06-26 13:33:32,077: None
[DEBUG]2025-06-26 13:33:32,077: None
[DEBUG]2025-06-26 13:33:32,077: None
[DEBUG]2025-06-26 13:33:32,077: None
[DEBUG]2025-06-26 13:33:32,077: None
[DEBUG]2025-06-26 13:33:32,079: None
[DEBUG]2025-06-26 13:33:32,079: None
[DEBUG]2025-06-26 13:33:32,079: None
[DEBUG]2025-06-26 13:33:32,079: None
[DEBUG]2025-06-26 13:33:32,079: None
[DEBUG]2025-06-26 13:33:32,079: None
[DEBUG]2025-06-26 13:33:32,080: None
[DEBUG]2025-06-26 13:33:32,080: None
[DEBUG]2025-06-26 13:33:32,080: None
[DEBUG]2025-06-26 13:33:32,080: None
[DEBUG]2025-06-26 13:33:32,080: None
[DEBUG]2025-06-26 13:33:32,080: None
[DEBUG]2025-06-26 13:33:32,080: None
[DEBUG]2025-06-26 13:33:32,082: None
[DEBUG]2025-06-26 13:33:32,082: None
[DEBUG]2025-06-26 13:33:32,082: None
[DEBUG]2025-06-26 13:33:32,082: None
[DEBUG]2025-06-26 13:33:32,082: None
[DEBUG]2025-06-26 13:33:32,082: None
[DEBUG]2025-06-26 13:33:32,082: None
[DEBUG]2025-06-26 13:33:32,082: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,084: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,086: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,087: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,089: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,092: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,094: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,098: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,100: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,102: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,104: None
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,106: <re.Match object; span=(2142, 2215), match='typedef enum {\n    InitPState,\n    Light,\n    >
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,107: ['InitPState', 'Light', 'Dark']
[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,108: 
static const char *StateNames[] = {
	"InitPState",
	"Light",
	"Dark",
};


[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,110: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,114: None
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,116: <re.Match object; span=(1635, 1741), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,118: ['InitPSubState', 'FORWARD', 'BACKWARD', 'TURN', 'DANCE']
[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,119: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"TURN",
	"DANCE",
};


[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,121: <re.Match object; span=(1605, 1700), match='typedef enum {\n    InitPSubState,\n    FORWARD,\>
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,122: ['InitPSubState', 'FORWARD', 'BACKWARD', 'STOP']
[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


[DEBUG]2025-06-26 13:33:32,123: 
static const char *StateNames[] = {
	"InitPSubState",
	"FORWARD",
	"BACKWARD",
	"STOP",
};


